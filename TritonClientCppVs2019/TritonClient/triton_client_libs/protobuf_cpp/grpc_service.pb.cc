// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpc_service.proto

#include "grpc_service.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace inference {
PROTOBUF_CONSTEXPR ServerLiveRequest::ServerLiveRequest(
    ::_pbi::ConstantInitialized) {}
struct ServerLiveRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServerLiveRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServerLiveRequestDefaultTypeInternal() {}
  union {
    ServerLiveRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServerLiveRequestDefaultTypeInternal _ServerLiveRequest_default_instance_;
PROTOBUF_CONSTEXPR ServerLiveResponse::ServerLiveResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.live_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ServerLiveResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServerLiveResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServerLiveResponseDefaultTypeInternal() {}
  union {
    ServerLiveResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServerLiveResponseDefaultTypeInternal _ServerLiveResponse_default_instance_;
PROTOBUF_CONSTEXPR ServerReadyRequest::ServerReadyRequest(
    ::_pbi::ConstantInitialized) {}
struct ServerReadyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServerReadyRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServerReadyRequestDefaultTypeInternal() {}
  union {
    ServerReadyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServerReadyRequestDefaultTypeInternal _ServerReadyRequest_default_instance_;
PROTOBUF_CONSTEXPR ServerReadyResponse::ServerReadyResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ready_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ServerReadyResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServerReadyResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServerReadyResponseDefaultTypeInternal() {}
  union {
    ServerReadyResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServerReadyResponseDefaultTypeInternal _ServerReadyResponse_default_instance_;
PROTOBUF_CONSTEXPR ModelReadyRequest::ModelReadyRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ModelReadyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelReadyRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelReadyRequestDefaultTypeInternal() {}
  union {
    ModelReadyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelReadyRequestDefaultTypeInternal _ModelReadyRequest_default_instance_;
PROTOBUF_CONSTEXPR ModelReadyResponse::ModelReadyResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ready_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ModelReadyResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelReadyResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelReadyResponseDefaultTypeInternal() {}
  union {
    ModelReadyResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelReadyResponseDefaultTypeInternal _ModelReadyResponse_default_instance_;
PROTOBUF_CONSTEXPR ServerMetadataRequest::ServerMetadataRequest(
    ::_pbi::ConstantInitialized) {}
struct ServerMetadataRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServerMetadataRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServerMetadataRequestDefaultTypeInternal() {}
  union {
    ServerMetadataRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServerMetadataRequestDefaultTypeInternal _ServerMetadataRequest_default_instance_;
PROTOBUF_CONSTEXPR ServerMetadataResponse::ServerMetadataResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.extensions_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ServerMetadataResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServerMetadataResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServerMetadataResponseDefaultTypeInternal() {}
  union {
    ServerMetadataResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServerMetadataResponseDefaultTypeInternal _ServerMetadataResponse_default_instance_;
PROTOBUF_CONSTEXPR ModelMetadataRequest::ModelMetadataRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ModelMetadataRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelMetadataRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelMetadataRequestDefaultTypeInternal() {}
  union {
    ModelMetadataRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelMetadataRequestDefaultTypeInternal _ModelMetadataRequest_default_instance_;
PROTOBUF_CONSTEXPR ModelMetadataResponse_TensorMetadata::ModelMetadataResponse_TensorMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.shape_)*/{}
  , /*decltype(_impl_._shape_cached_byte_size_)*/{0}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.datatype_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ModelMetadataResponse_TensorMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelMetadataResponse_TensorMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelMetadataResponse_TensorMetadataDefaultTypeInternal() {}
  union {
    ModelMetadataResponse_TensorMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelMetadataResponse_TensorMetadataDefaultTypeInternal _ModelMetadataResponse_TensorMetadata_default_instance_;
PROTOBUF_CONSTEXPR ModelMetadataResponse::ModelMetadataResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.versions_)*/{}
  , /*decltype(_impl_.inputs_)*/{}
  , /*decltype(_impl_.outputs_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.platform_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ModelMetadataResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelMetadataResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelMetadataResponseDefaultTypeInternal() {}
  union {
    ModelMetadataResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelMetadataResponseDefaultTypeInternal _ModelMetadataResponse_default_instance_;
PROTOBUF_CONSTEXPR InferParameter::InferParameter(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.parameter_choice_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct InferParameterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InferParameterDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InferParameterDefaultTypeInternal() {}
  union {
    InferParameter _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InferParameterDefaultTypeInternal _InferParameter_default_instance_;
PROTOBUF_CONSTEXPR InferTensorContents::InferTensorContents(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.bool_contents_)*/{}
  , /*decltype(_impl_.int_contents_)*/{}
  , /*decltype(_impl_._int_contents_cached_byte_size_)*/{0}
  , /*decltype(_impl_.int64_contents_)*/{}
  , /*decltype(_impl_._int64_contents_cached_byte_size_)*/{0}
  , /*decltype(_impl_.uint_contents_)*/{}
  , /*decltype(_impl_._uint_contents_cached_byte_size_)*/{0}
  , /*decltype(_impl_.uint64_contents_)*/{}
  , /*decltype(_impl_._uint64_contents_cached_byte_size_)*/{0}
  , /*decltype(_impl_.fp32_contents_)*/{}
  , /*decltype(_impl_.fp64_contents_)*/{}
  , /*decltype(_impl_.bytes_contents_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InferTensorContentsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InferTensorContentsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InferTensorContentsDefaultTypeInternal() {}
  union {
    InferTensorContents _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InferTensorContentsDefaultTypeInternal _InferTensorContents_default_instance_;
PROTOBUF_CONSTEXPR ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse::ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUseDefaultTypeInternal _ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR ModelInferRequest_InferInputTensor::ModelInferRequest_InferInputTensor(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.shape_)*/{}
  , /*decltype(_impl_._shape_cached_byte_size_)*/{0}
  , /*decltype(_impl_.parameters_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.datatype_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.contents_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ModelInferRequest_InferInputTensorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelInferRequest_InferInputTensorDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelInferRequest_InferInputTensorDefaultTypeInternal() {}
  union {
    ModelInferRequest_InferInputTensor _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelInferRequest_InferInputTensorDefaultTypeInternal _ModelInferRequest_InferInputTensor_default_instance_;
PROTOBUF_CONSTEXPR ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse::ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUseDefaultTypeInternal _ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR ModelInferRequest_InferRequestedOutputTensor::ModelInferRequest_InferRequestedOutputTensor(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.parameters_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ModelInferRequest_InferRequestedOutputTensorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelInferRequest_InferRequestedOutputTensorDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelInferRequest_InferRequestedOutputTensorDefaultTypeInternal() {}
  union {
    ModelInferRequest_InferRequestedOutputTensor _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelInferRequest_InferRequestedOutputTensorDefaultTypeInternal _ModelInferRequest_InferRequestedOutputTensor_default_instance_;
PROTOBUF_CONSTEXPR ModelInferRequest_ParametersEntry_DoNotUse::ModelInferRequest_ParametersEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct ModelInferRequest_ParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelInferRequest_ParametersEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelInferRequest_ParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ModelInferRequest_ParametersEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelInferRequest_ParametersEntry_DoNotUseDefaultTypeInternal _ModelInferRequest_ParametersEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR ModelInferRequest::ModelInferRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.parameters_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.inputs_)*/{}
  , /*decltype(_impl_.outputs_)*/{}
  , /*decltype(_impl_.raw_input_contents_)*/{}
  , /*decltype(_impl_.model_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.model_version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ModelInferRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelInferRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelInferRequestDefaultTypeInternal() {}
  union {
    ModelInferRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelInferRequestDefaultTypeInternal _ModelInferRequest_default_instance_;
PROTOBUF_CONSTEXPR ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse::ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUseDefaultTypeInternal _ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR ModelInferResponse_InferOutputTensor::ModelInferResponse_InferOutputTensor(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.shape_)*/{}
  , /*decltype(_impl_._shape_cached_byte_size_)*/{0}
  , /*decltype(_impl_.parameters_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.datatype_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.contents_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ModelInferResponse_InferOutputTensorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelInferResponse_InferOutputTensorDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelInferResponse_InferOutputTensorDefaultTypeInternal() {}
  union {
    ModelInferResponse_InferOutputTensor _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelInferResponse_InferOutputTensorDefaultTypeInternal _ModelInferResponse_InferOutputTensor_default_instance_;
PROTOBUF_CONSTEXPR ModelInferResponse_ParametersEntry_DoNotUse::ModelInferResponse_ParametersEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct ModelInferResponse_ParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelInferResponse_ParametersEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelInferResponse_ParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ModelInferResponse_ParametersEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelInferResponse_ParametersEntry_DoNotUseDefaultTypeInternal _ModelInferResponse_ParametersEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR ModelInferResponse::ModelInferResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.parameters_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.outputs_)*/{}
  , /*decltype(_impl_.raw_output_contents_)*/{}
  , /*decltype(_impl_.model_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.model_version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ModelInferResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelInferResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelInferResponseDefaultTypeInternal() {}
  union {
    ModelInferResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelInferResponseDefaultTypeInternal _ModelInferResponse_default_instance_;
PROTOBUF_CONSTEXPR ModelStreamInferResponse::ModelStreamInferResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.infer_response_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ModelStreamInferResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelStreamInferResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelStreamInferResponseDefaultTypeInternal() {}
  union {
    ModelStreamInferResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelStreamInferResponseDefaultTypeInternal _ModelStreamInferResponse_default_instance_;
PROTOBUF_CONSTEXPR ModelConfigRequest::ModelConfigRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ModelConfigRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelConfigRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelConfigRequestDefaultTypeInternal() {}
  union {
    ModelConfigRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelConfigRequestDefaultTypeInternal _ModelConfigRequest_default_instance_;
PROTOBUF_CONSTEXPR ModelConfigResponse::ModelConfigResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.config_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ModelConfigResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelConfigResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelConfigResponseDefaultTypeInternal() {}
  union {
    ModelConfigResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelConfigResponseDefaultTypeInternal _ModelConfigResponse_default_instance_;
PROTOBUF_CONSTEXPR ModelStatisticsRequest::ModelStatisticsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ModelStatisticsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelStatisticsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelStatisticsRequestDefaultTypeInternal() {}
  union {
    ModelStatisticsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelStatisticsRequestDefaultTypeInternal _ModelStatisticsRequest_default_instance_;
PROTOBUF_CONSTEXPR StatisticDuration::StatisticDuration(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.count_)*/uint64_t{0u}
  , /*decltype(_impl_.ns_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StatisticDurationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatisticDurationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatisticDurationDefaultTypeInternal() {}
  union {
    StatisticDuration _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatisticDurationDefaultTypeInternal _StatisticDuration_default_instance_;
PROTOBUF_CONSTEXPR InferStatistics::InferStatistics(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.success_)*/nullptr
  , /*decltype(_impl_.fail_)*/nullptr
  , /*decltype(_impl_.queue_)*/nullptr
  , /*decltype(_impl_.compute_input_)*/nullptr
  , /*decltype(_impl_.compute_infer_)*/nullptr
  , /*decltype(_impl_.compute_output_)*/nullptr
  , /*decltype(_impl_.cache_hit_)*/nullptr
  , /*decltype(_impl_.cache_miss_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InferStatisticsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InferStatisticsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InferStatisticsDefaultTypeInternal() {}
  union {
    InferStatistics _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InferStatisticsDefaultTypeInternal _InferStatistics_default_instance_;
PROTOBUF_CONSTEXPR InferBatchStatistics::InferBatchStatistics(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.compute_input_)*/nullptr
  , /*decltype(_impl_.compute_infer_)*/nullptr
  , /*decltype(_impl_.compute_output_)*/nullptr
  , /*decltype(_impl_.batch_size_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InferBatchStatisticsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InferBatchStatisticsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InferBatchStatisticsDefaultTypeInternal() {}
  union {
    InferBatchStatistics _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InferBatchStatisticsDefaultTypeInternal _InferBatchStatistics_default_instance_;
PROTOBUF_CONSTEXPR MemoryUsage::MemoryUsage(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.id_)*/int64_t{0}
  , /*decltype(_impl_.byte_size_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MemoryUsageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MemoryUsageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MemoryUsageDefaultTypeInternal() {}
  union {
    MemoryUsage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MemoryUsageDefaultTypeInternal _MemoryUsage_default_instance_;
PROTOBUF_CONSTEXPR ModelStatistics::ModelStatistics(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.batch_stats_)*/{}
  , /*decltype(_impl_.memory_usage_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.inference_stats_)*/nullptr
  , /*decltype(_impl_.last_inference_)*/uint64_t{0u}
  , /*decltype(_impl_.inference_count_)*/uint64_t{0u}
  , /*decltype(_impl_.execution_count_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ModelStatisticsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelStatisticsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelStatisticsDefaultTypeInternal() {}
  union {
    ModelStatistics _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelStatisticsDefaultTypeInternal _ModelStatistics_default_instance_;
PROTOBUF_CONSTEXPR ModelStatisticsResponse::ModelStatisticsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.model_stats_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ModelStatisticsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelStatisticsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelStatisticsResponseDefaultTypeInternal() {}
  union {
    ModelStatisticsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelStatisticsResponseDefaultTypeInternal _ModelStatisticsResponse_default_instance_;
PROTOBUF_CONSTEXPR ModelRepositoryParameter::ModelRepositoryParameter(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.parameter_choice_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct ModelRepositoryParameterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelRepositoryParameterDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelRepositoryParameterDefaultTypeInternal() {}
  union {
    ModelRepositoryParameter _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelRepositoryParameterDefaultTypeInternal _ModelRepositoryParameter_default_instance_;
PROTOBUF_CONSTEXPR RepositoryIndexRequest::RepositoryIndexRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.repository_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.ready_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RepositoryIndexRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepositoryIndexRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepositoryIndexRequestDefaultTypeInternal() {}
  union {
    RepositoryIndexRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepositoryIndexRequestDefaultTypeInternal _RepositoryIndexRequest_default_instance_;
PROTOBUF_CONSTEXPR RepositoryIndexResponse_ModelIndex::RepositoryIndexResponse_ModelIndex(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.state_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.reason_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RepositoryIndexResponse_ModelIndexDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepositoryIndexResponse_ModelIndexDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepositoryIndexResponse_ModelIndexDefaultTypeInternal() {}
  union {
    RepositoryIndexResponse_ModelIndex _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepositoryIndexResponse_ModelIndexDefaultTypeInternal _RepositoryIndexResponse_ModelIndex_default_instance_;
PROTOBUF_CONSTEXPR RepositoryIndexResponse::RepositoryIndexResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.models_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RepositoryIndexResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepositoryIndexResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepositoryIndexResponseDefaultTypeInternal() {}
  union {
    RepositoryIndexResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepositoryIndexResponseDefaultTypeInternal _RepositoryIndexResponse_default_instance_;
PROTOBUF_CONSTEXPR RepositoryModelLoadRequest_ParametersEntry_DoNotUse::RepositoryModelLoadRequest_ParametersEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct RepositoryModelLoadRequest_ParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepositoryModelLoadRequest_ParametersEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepositoryModelLoadRequest_ParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    RepositoryModelLoadRequest_ParametersEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepositoryModelLoadRequest_ParametersEntry_DoNotUseDefaultTypeInternal _RepositoryModelLoadRequest_ParametersEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR RepositoryModelLoadRequest::RepositoryModelLoadRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.parameters_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.repository_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.model_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RepositoryModelLoadRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepositoryModelLoadRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepositoryModelLoadRequestDefaultTypeInternal() {}
  union {
    RepositoryModelLoadRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepositoryModelLoadRequestDefaultTypeInternal _RepositoryModelLoadRequest_default_instance_;
PROTOBUF_CONSTEXPR RepositoryModelLoadResponse::RepositoryModelLoadResponse(
    ::_pbi::ConstantInitialized) {}
struct RepositoryModelLoadResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepositoryModelLoadResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepositoryModelLoadResponseDefaultTypeInternal() {}
  union {
    RepositoryModelLoadResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepositoryModelLoadResponseDefaultTypeInternal _RepositoryModelLoadResponse_default_instance_;
PROTOBUF_CONSTEXPR RepositoryModelUnloadRequest_ParametersEntry_DoNotUse::RepositoryModelUnloadRequest_ParametersEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct RepositoryModelUnloadRequest_ParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepositoryModelUnloadRequest_ParametersEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepositoryModelUnloadRequest_ParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    RepositoryModelUnloadRequest_ParametersEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepositoryModelUnloadRequest_ParametersEntry_DoNotUseDefaultTypeInternal _RepositoryModelUnloadRequest_ParametersEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR RepositoryModelUnloadRequest::RepositoryModelUnloadRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.parameters_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.repository_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.model_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RepositoryModelUnloadRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepositoryModelUnloadRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepositoryModelUnloadRequestDefaultTypeInternal() {}
  union {
    RepositoryModelUnloadRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepositoryModelUnloadRequestDefaultTypeInternal _RepositoryModelUnloadRequest_default_instance_;
PROTOBUF_CONSTEXPR RepositoryModelUnloadResponse::RepositoryModelUnloadResponse(
    ::_pbi::ConstantInitialized) {}
struct RepositoryModelUnloadResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepositoryModelUnloadResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepositoryModelUnloadResponseDefaultTypeInternal() {}
  union {
    RepositoryModelUnloadResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepositoryModelUnloadResponseDefaultTypeInternal _RepositoryModelUnloadResponse_default_instance_;
PROTOBUF_CONSTEXPR SystemSharedMemoryStatusRequest::SystemSharedMemoryStatusRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SystemSharedMemoryStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SystemSharedMemoryStatusRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SystemSharedMemoryStatusRequestDefaultTypeInternal() {}
  union {
    SystemSharedMemoryStatusRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SystemSharedMemoryStatusRequestDefaultTypeInternal _SystemSharedMemoryStatusRequest_default_instance_;
PROTOBUF_CONSTEXPR SystemSharedMemoryStatusResponse_RegionStatus::SystemSharedMemoryStatusResponse_RegionStatus(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.key_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.offset_)*/uint64_t{0u}
  , /*decltype(_impl_.byte_size_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SystemSharedMemoryStatusResponse_RegionStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SystemSharedMemoryStatusResponse_RegionStatusDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SystemSharedMemoryStatusResponse_RegionStatusDefaultTypeInternal() {}
  union {
    SystemSharedMemoryStatusResponse_RegionStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SystemSharedMemoryStatusResponse_RegionStatusDefaultTypeInternal _SystemSharedMemoryStatusResponse_RegionStatus_default_instance_;
PROTOBUF_CONSTEXPR SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse::SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUseDefaultTypeInternal _SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR SystemSharedMemoryStatusResponse::SystemSharedMemoryStatusResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.regions_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SystemSharedMemoryStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SystemSharedMemoryStatusResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SystemSharedMemoryStatusResponseDefaultTypeInternal() {}
  union {
    SystemSharedMemoryStatusResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SystemSharedMemoryStatusResponseDefaultTypeInternal _SystemSharedMemoryStatusResponse_default_instance_;
PROTOBUF_CONSTEXPR SystemSharedMemoryRegisterRequest::SystemSharedMemoryRegisterRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.key_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.offset_)*/uint64_t{0u}
  , /*decltype(_impl_.byte_size_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SystemSharedMemoryRegisterRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SystemSharedMemoryRegisterRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SystemSharedMemoryRegisterRequestDefaultTypeInternal() {}
  union {
    SystemSharedMemoryRegisterRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SystemSharedMemoryRegisterRequestDefaultTypeInternal _SystemSharedMemoryRegisterRequest_default_instance_;
PROTOBUF_CONSTEXPR SystemSharedMemoryRegisterResponse::SystemSharedMemoryRegisterResponse(
    ::_pbi::ConstantInitialized) {}
struct SystemSharedMemoryRegisterResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SystemSharedMemoryRegisterResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SystemSharedMemoryRegisterResponseDefaultTypeInternal() {}
  union {
    SystemSharedMemoryRegisterResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SystemSharedMemoryRegisterResponseDefaultTypeInternal _SystemSharedMemoryRegisterResponse_default_instance_;
PROTOBUF_CONSTEXPR SystemSharedMemoryUnregisterRequest::SystemSharedMemoryUnregisterRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SystemSharedMemoryUnregisterRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SystemSharedMemoryUnregisterRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SystemSharedMemoryUnregisterRequestDefaultTypeInternal() {}
  union {
    SystemSharedMemoryUnregisterRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SystemSharedMemoryUnregisterRequestDefaultTypeInternal _SystemSharedMemoryUnregisterRequest_default_instance_;
PROTOBUF_CONSTEXPR SystemSharedMemoryUnregisterResponse::SystemSharedMemoryUnregisterResponse(
    ::_pbi::ConstantInitialized) {}
struct SystemSharedMemoryUnregisterResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SystemSharedMemoryUnregisterResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SystemSharedMemoryUnregisterResponseDefaultTypeInternal() {}
  union {
    SystemSharedMemoryUnregisterResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SystemSharedMemoryUnregisterResponseDefaultTypeInternal _SystemSharedMemoryUnregisterResponse_default_instance_;
PROTOBUF_CONSTEXPR CudaSharedMemoryStatusRequest::CudaSharedMemoryStatusRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CudaSharedMemoryStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CudaSharedMemoryStatusRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CudaSharedMemoryStatusRequestDefaultTypeInternal() {}
  union {
    CudaSharedMemoryStatusRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CudaSharedMemoryStatusRequestDefaultTypeInternal _CudaSharedMemoryStatusRequest_default_instance_;
PROTOBUF_CONSTEXPR CudaSharedMemoryStatusResponse_RegionStatus::CudaSharedMemoryStatusResponse_RegionStatus(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.device_id_)*/uint64_t{0u}
  , /*decltype(_impl_.byte_size_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CudaSharedMemoryStatusResponse_RegionStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CudaSharedMemoryStatusResponse_RegionStatusDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CudaSharedMemoryStatusResponse_RegionStatusDefaultTypeInternal() {}
  union {
    CudaSharedMemoryStatusResponse_RegionStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CudaSharedMemoryStatusResponse_RegionStatusDefaultTypeInternal _CudaSharedMemoryStatusResponse_RegionStatus_default_instance_;
PROTOBUF_CONSTEXPR CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse::CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUseDefaultTypeInternal _CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR CudaSharedMemoryStatusResponse::CudaSharedMemoryStatusResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.regions_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CudaSharedMemoryStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CudaSharedMemoryStatusResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CudaSharedMemoryStatusResponseDefaultTypeInternal() {}
  union {
    CudaSharedMemoryStatusResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CudaSharedMemoryStatusResponseDefaultTypeInternal _CudaSharedMemoryStatusResponse_default_instance_;
PROTOBUF_CONSTEXPR CudaSharedMemoryRegisterRequest::CudaSharedMemoryRegisterRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.raw_handle_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.device_id_)*/int64_t{0}
  , /*decltype(_impl_.byte_size_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CudaSharedMemoryRegisterRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CudaSharedMemoryRegisterRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CudaSharedMemoryRegisterRequestDefaultTypeInternal() {}
  union {
    CudaSharedMemoryRegisterRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CudaSharedMemoryRegisterRequestDefaultTypeInternal _CudaSharedMemoryRegisterRequest_default_instance_;
PROTOBUF_CONSTEXPR CudaSharedMemoryRegisterResponse::CudaSharedMemoryRegisterResponse(
    ::_pbi::ConstantInitialized) {}
struct CudaSharedMemoryRegisterResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CudaSharedMemoryRegisterResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CudaSharedMemoryRegisterResponseDefaultTypeInternal() {}
  union {
    CudaSharedMemoryRegisterResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CudaSharedMemoryRegisterResponseDefaultTypeInternal _CudaSharedMemoryRegisterResponse_default_instance_;
PROTOBUF_CONSTEXPR CudaSharedMemoryUnregisterRequest::CudaSharedMemoryUnregisterRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CudaSharedMemoryUnregisterRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CudaSharedMemoryUnregisterRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CudaSharedMemoryUnregisterRequestDefaultTypeInternal() {}
  union {
    CudaSharedMemoryUnregisterRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CudaSharedMemoryUnregisterRequestDefaultTypeInternal _CudaSharedMemoryUnregisterRequest_default_instance_;
PROTOBUF_CONSTEXPR CudaSharedMemoryUnregisterResponse::CudaSharedMemoryUnregisterResponse(
    ::_pbi::ConstantInitialized) {}
struct CudaSharedMemoryUnregisterResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CudaSharedMemoryUnregisterResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CudaSharedMemoryUnregisterResponseDefaultTypeInternal() {}
  union {
    CudaSharedMemoryUnregisterResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CudaSharedMemoryUnregisterResponseDefaultTypeInternal _CudaSharedMemoryUnregisterResponse_default_instance_;
PROTOBUF_CONSTEXPR TraceSettingRequest_SettingValue::TraceSettingRequest_SettingValue(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.value_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TraceSettingRequest_SettingValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TraceSettingRequest_SettingValueDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TraceSettingRequest_SettingValueDefaultTypeInternal() {}
  union {
    TraceSettingRequest_SettingValue _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TraceSettingRequest_SettingValueDefaultTypeInternal _TraceSettingRequest_SettingValue_default_instance_;
PROTOBUF_CONSTEXPR TraceSettingRequest_SettingsEntry_DoNotUse::TraceSettingRequest_SettingsEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct TraceSettingRequest_SettingsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TraceSettingRequest_SettingsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TraceSettingRequest_SettingsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TraceSettingRequest_SettingsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TraceSettingRequest_SettingsEntry_DoNotUseDefaultTypeInternal _TraceSettingRequest_SettingsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TraceSettingRequest::TraceSettingRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.settings_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.model_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TraceSettingRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TraceSettingRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TraceSettingRequestDefaultTypeInternal() {}
  union {
    TraceSettingRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TraceSettingRequestDefaultTypeInternal _TraceSettingRequest_default_instance_;
PROTOBUF_CONSTEXPR TraceSettingResponse_SettingValue::TraceSettingResponse_SettingValue(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.value_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TraceSettingResponse_SettingValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TraceSettingResponse_SettingValueDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TraceSettingResponse_SettingValueDefaultTypeInternal() {}
  union {
    TraceSettingResponse_SettingValue _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TraceSettingResponse_SettingValueDefaultTypeInternal _TraceSettingResponse_SettingValue_default_instance_;
PROTOBUF_CONSTEXPR TraceSettingResponse_SettingsEntry_DoNotUse::TraceSettingResponse_SettingsEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct TraceSettingResponse_SettingsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TraceSettingResponse_SettingsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TraceSettingResponse_SettingsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TraceSettingResponse_SettingsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TraceSettingResponse_SettingsEntry_DoNotUseDefaultTypeInternal _TraceSettingResponse_SettingsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR TraceSettingResponse::TraceSettingResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.settings_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TraceSettingResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TraceSettingResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TraceSettingResponseDefaultTypeInternal() {}
  union {
    TraceSettingResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TraceSettingResponseDefaultTypeInternal _TraceSettingResponse_default_instance_;
PROTOBUF_CONSTEXPR LogSettingsRequest_SettingValue::LogSettingsRequest_SettingValue(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.parameter_choice_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct LogSettingsRequest_SettingValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogSettingsRequest_SettingValueDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogSettingsRequest_SettingValueDefaultTypeInternal() {}
  union {
    LogSettingsRequest_SettingValue _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogSettingsRequest_SettingValueDefaultTypeInternal _LogSettingsRequest_SettingValue_default_instance_;
PROTOBUF_CONSTEXPR LogSettingsRequest_SettingsEntry_DoNotUse::LogSettingsRequest_SettingsEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct LogSettingsRequest_SettingsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogSettingsRequest_SettingsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogSettingsRequest_SettingsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    LogSettingsRequest_SettingsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogSettingsRequest_SettingsEntry_DoNotUseDefaultTypeInternal _LogSettingsRequest_SettingsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR LogSettingsRequest::LogSettingsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.settings_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LogSettingsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogSettingsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogSettingsRequestDefaultTypeInternal() {}
  union {
    LogSettingsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogSettingsRequestDefaultTypeInternal _LogSettingsRequest_default_instance_;
PROTOBUF_CONSTEXPR LogSettingsResponse_SettingValue::LogSettingsResponse_SettingValue(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.parameter_choice_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct LogSettingsResponse_SettingValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogSettingsResponse_SettingValueDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogSettingsResponse_SettingValueDefaultTypeInternal() {}
  union {
    LogSettingsResponse_SettingValue _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogSettingsResponse_SettingValueDefaultTypeInternal _LogSettingsResponse_SettingValue_default_instance_;
PROTOBUF_CONSTEXPR LogSettingsResponse_SettingsEntry_DoNotUse::LogSettingsResponse_SettingsEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct LogSettingsResponse_SettingsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogSettingsResponse_SettingsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogSettingsResponse_SettingsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    LogSettingsResponse_SettingsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogSettingsResponse_SettingsEntry_DoNotUseDefaultTypeInternal _LogSettingsResponse_SettingsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR LogSettingsResponse::LogSettingsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.settings_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LogSettingsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogSettingsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogSettingsResponseDefaultTypeInternal() {}
  union {
    LogSettingsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogSettingsResponseDefaultTypeInternal _LogSettingsResponse_default_instance_;
}  // namespace inference
static ::_pb::Metadata file_level_metadata_grpc_5fservice_2eproto[71];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_grpc_5fservice_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_grpc_5fservice_2eproto = nullptr;

const uint32_t TableStruct_grpc_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::ServerLiveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::ServerLiveResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::ServerLiveResponse, _impl_.live_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::ServerReadyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::ServerReadyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::ServerReadyResponse, _impl_.ready_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::ModelReadyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::ModelReadyRequest, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelReadyRequest, _impl_.version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::ModelReadyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::ModelReadyResponse, _impl_.ready_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::ServerMetadataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::ServerMetadataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::ServerMetadataResponse, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::inference::ServerMetadataResponse, _impl_.version_),
  PROTOBUF_FIELD_OFFSET(::inference::ServerMetadataResponse, _impl_.extensions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::ModelMetadataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::ModelMetadataRequest, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelMetadataRequest, _impl_.version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::ModelMetadataResponse_TensorMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::ModelMetadataResponse_TensorMetadata, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelMetadataResponse_TensorMetadata, _impl_.datatype_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelMetadataResponse_TensorMetadata, _impl_.shape_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::ModelMetadataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::ModelMetadataResponse, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelMetadataResponse, _impl_.versions_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelMetadataResponse, _impl_.platform_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelMetadataResponse, _impl_.inputs_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelMetadataResponse, _impl_.outputs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::InferParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::inference::InferParameter, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::inference::InferParameter, _impl_.parameter_choice_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::InferTensorContents, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::InferTensorContents, _impl_.bool_contents_),
  PROTOBUF_FIELD_OFFSET(::inference::InferTensorContents, _impl_.int_contents_),
  PROTOBUF_FIELD_OFFSET(::inference::InferTensorContents, _impl_.int64_contents_),
  PROTOBUF_FIELD_OFFSET(::inference::InferTensorContents, _impl_.uint_contents_),
  PROTOBUF_FIELD_OFFSET(::inference::InferTensorContents, _impl_.uint64_contents_),
  PROTOBUF_FIELD_OFFSET(::inference::InferTensorContents, _impl_.fp32_contents_),
  PROTOBUF_FIELD_OFFSET(::inference::InferTensorContents, _impl_.fp64_contents_),
  PROTOBUF_FIELD_OFFSET(::inference::InferTensorContents, _impl_.bytes_contents_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferRequest_InferInputTensor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferRequest_InferInputTensor, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferRequest_InferInputTensor, _impl_.datatype_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferRequest_InferInputTensor, _impl_.shape_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferRequest_InferInputTensor, _impl_.parameters_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferRequest_InferInputTensor, _impl_.contents_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferRequest_InferRequestedOutputTensor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferRequest_InferRequestedOutputTensor, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferRequest_InferRequestedOutputTensor, _impl_.parameters_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferRequest_ParametersEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferRequest_ParametersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferRequest_ParametersEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferRequest_ParametersEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferRequest, _impl_.model_name_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferRequest, _impl_.model_version_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferRequest, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferRequest, _impl_.parameters_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferRequest, _impl_.inputs_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferRequest, _impl_.outputs_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferRequest, _impl_.raw_input_contents_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferResponse_InferOutputTensor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferResponse_InferOutputTensor, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferResponse_InferOutputTensor, _impl_.datatype_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferResponse_InferOutputTensor, _impl_.shape_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferResponse_InferOutputTensor, _impl_.parameters_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferResponse_InferOutputTensor, _impl_.contents_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferResponse_ParametersEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferResponse_ParametersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferResponse_ParametersEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferResponse_ParametersEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferResponse, _impl_.model_name_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferResponse, _impl_.model_version_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferResponse, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferResponse, _impl_.parameters_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferResponse, _impl_.outputs_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelInferResponse, _impl_.raw_output_contents_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::ModelStreamInferResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::ModelStreamInferResponse, _impl_.error_message_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelStreamInferResponse, _impl_.infer_response_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::ModelConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::ModelConfigRequest, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelConfigRequest, _impl_.version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::ModelConfigResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::ModelConfigResponse, _impl_.config_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::ModelStatisticsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::ModelStatisticsRequest, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelStatisticsRequest, _impl_.version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::StatisticDuration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::StatisticDuration, _impl_.count_),
  PROTOBUF_FIELD_OFFSET(::inference::StatisticDuration, _impl_.ns_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::InferStatistics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::InferStatistics, _impl_.success_),
  PROTOBUF_FIELD_OFFSET(::inference::InferStatistics, _impl_.fail_),
  PROTOBUF_FIELD_OFFSET(::inference::InferStatistics, _impl_.queue_),
  PROTOBUF_FIELD_OFFSET(::inference::InferStatistics, _impl_.compute_input_),
  PROTOBUF_FIELD_OFFSET(::inference::InferStatistics, _impl_.compute_infer_),
  PROTOBUF_FIELD_OFFSET(::inference::InferStatistics, _impl_.compute_output_),
  PROTOBUF_FIELD_OFFSET(::inference::InferStatistics, _impl_.cache_hit_),
  PROTOBUF_FIELD_OFFSET(::inference::InferStatistics, _impl_.cache_miss_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::InferBatchStatistics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::InferBatchStatistics, _impl_.batch_size_),
  PROTOBUF_FIELD_OFFSET(::inference::InferBatchStatistics, _impl_.compute_input_),
  PROTOBUF_FIELD_OFFSET(::inference::InferBatchStatistics, _impl_.compute_infer_),
  PROTOBUF_FIELD_OFFSET(::inference::InferBatchStatistics, _impl_.compute_output_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::MemoryUsage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::MemoryUsage, _impl_.type_),
  PROTOBUF_FIELD_OFFSET(::inference::MemoryUsage, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::inference::MemoryUsage, _impl_.byte_size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::ModelStatistics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::ModelStatistics, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelStatistics, _impl_.version_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelStatistics, _impl_.last_inference_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelStatistics, _impl_.inference_count_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelStatistics, _impl_.execution_count_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelStatistics, _impl_.inference_stats_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelStatistics, _impl_.batch_stats_),
  PROTOBUF_FIELD_OFFSET(::inference::ModelStatistics, _impl_.memory_usage_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::ModelStatisticsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::ModelStatisticsResponse, _impl_.model_stats_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::ModelRepositoryParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::inference::ModelRepositoryParameter, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::inference::ModelRepositoryParameter, _impl_.parameter_choice_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::RepositoryIndexRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::RepositoryIndexRequest, _impl_.repository_name_),
  PROTOBUF_FIELD_OFFSET(::inference::RepositoryIndexRequest, _impl_.ready_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::RepositoryIndexResponse_ModelIndex, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::RepositoryIndexResponse_ModelIndex, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::inference::RepositoryIndexResponse_ModelIndex, _impl_.version_),
  PROTOBUF_FIELD_OFFSET(::inference::RepositoryIndexResponse_ModelIndex, _impl_.state_),
  PROTOBUF_FIELD_OFFSET(::inference::RepositoryIndexResponse_ModelIndex, _impl_.reason_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::RepositoryIndexResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::RepositoryIndexResponse, _impl_.models_),
  PROTOBUF_FIELD_OFFSET(::inference::RepositoryModelLoadRequest_ParametersEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::inference::RepositoryModelLoadRequest_ParametersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::RepositoryModelLoadRequest_ParametersEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::inference::RepositoryModelLoadRequest_ParametersEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::RepositoryModelLoadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::RepositoryModelLoadRequest, _impl_.repository_name_),
  PROTOBUF_FIELD_OFFSET(::inference::RepositoryModelLoadRequest, _impl_.model_name_),
  PROTOBUF_FIELD_OFFSET(::inference::RepositoryModelLoadRequest, _impl_.parameters_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::RepositoryModelLoadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::RepositoryModelUnloadRequest_ParametersEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::inference::RepositoryModelUnloadRequest_ParametersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::RepositoryModelUnloadRequest_ParametersEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::inference::RepositoryModelUnloadRequest_ParametersEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::RepositoryModelUnloadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::RepositoryModelUnloadRequest, _impl_.repository_name_),
  PROTOBUF_FIELD_OFFSET(::inference::RepositoryModelUnloadRequest, _impl_.model_name_),
  PROTOBUF_FIELD_OFFSET(::inference::RepositoryModelUnloadRequest, _impl_.parameters_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::RepositoryModelUnloadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::SystemSharedMemoryStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::SystemSharedMemoryStatusRequest, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::SystemSharedMemoryStatusResponse_RegionStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::SystemSharedMemoryStatusResponse_RegionStatus, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::inference::SystemSharedMemoryStatusResponse_RegionStatus, _impl_.key_),
  PROTOBUF_FIELD_OFFSET(::inference::SystemSharedMemoryStatusResponse_RegionStatus, _impl_.offset_),
  PROTOBUF_FIELD_OFFSET(::inference::SystemSharedMemoryStatusResponse_RegionStatus, _impl_.byte_size_),
  PROTOBUF_FIELD_OFFSET(::inference::SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::inference::SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::inference::SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::SystemSharedMemoryStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::SystemSharedMemoryStatusResponse, _impl_.regions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::SystemSharedMemoryRegisterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::SystemSharedMemoryRegisterRequest, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::inference::SystemSharedMemoryRegisterRequest, _impl_.key_),
  PROTOBUF_FIELD_OFFSET(::inference::SystemSharedMemoryRegisterRequest, _impl_.offset_),
  PROTOBUF_FIELD_OFFSET(::inference::SystemSharedMemoryRegisterRequest, _impl_.byte_size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::SystemSharedMemoryRegisterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::SystemSharedMemoryUnregisterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::SystemSharedMemoryUnregisterRequest, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::SystemSharedMemoryUnregisterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::CudaSharedMemoryStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::CudaSharedMemoryStatusRequest, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::CudaSharedMemoryStatusResponse_RegionStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::CudaSharedMemoryStatusResponse_RegionStatus, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::inference::CudaSharedMemoryStatusResponse_RegionStatus, _impl_.device_id_),
  PROTOBUF_FIELD_OFFSET(::inference::CudaSharedMemoryStatusResponse_RegionStatus, _impl_.byte_size_),
  PROTOBUF_FIELD_OFFSET(::inference::CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::inference::CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::inference::CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::CudaSharedMemoryStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::CudaSharedMemoryStatusResponse, _impl_.regions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::CudaSharedMemoryRegisterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::CudaSharedMemoryRegisterRequest, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::inference::CudaSharedMemoryRegisterRequest, _impl_.raw_handle_),
  PROTOBUF_FIELD_OFFSET(::inference::CudaSharedMemoryRegisterRequest, _impl_.device_id_),
  PROTOBUF_FIELD_OFFSET(::inference::CudaSharedMemoryRegisterRequest, _impl_.byte_size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::CudaSharedMemoryRegisterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::CudaSharedMemoryUnregisterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::CudaSharedMemoryUnregisterRequest, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::CudaSharedMemoryUnregisterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::TraceSettingRequest_SettingValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::TraceSettingRequest_SettingValue, _impl_.value_),
  PROTOBUF_FIELD_OFFSET(::inference::TraceSettingRequest_SettingsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::inference::TraceSettingRequest_SettingsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::TraceSettingRequest_SettingsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::inference::TraceSettingRequest_SettingsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::TraceSettingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::TraceSettingRequest, _impl_.settings_),
  PROTOBUF_FIELD_OFFSET(::inference::TraceSettingRequest, _impl_.model_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::TraceSettingResponse_SettingValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::TraceSettingResponse_SettingValue, _impl_.value_),
  PROTOBUF_FIELD_OFFSET(::inference::TraceSettingResponse_SettingsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::inference::TraceSettingResponse_SettingsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::TraceSettingResponse_SettingsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::inference::TraceSettingResponse_SettingsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::TraceSettingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::TraceSettingResponse, _impl_.settings_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::LogSettingsRequest_SettingValue, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::inference::LogSettingsRequest_SettingValue, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::inference::LogSettingsRequest_SettingValue, _impl_.parameter_choice_),
  PROTOBUF_FIELD_OFFSET(::inference::LogSettingsRequest_SettingsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::inference::LogSettingsRequest_SettingsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::LogSettingsRequest_SettingsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::inference::LogSettingsRequest_SettingsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::LogSettingsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::LogSettingsRequest, _impl_.settings_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::LogSettingsResponse_SettingValue, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::inference::LogSettingsResponse_SettingValue, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::inference::LogSettingsResponse_SettingValue, _impl_.parameter_choice_),
  PROTOBUF_FIELD_OFFSET(::inference::LogSettingsResponse_SettingsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::inference::LogSettingsResponse_SettingsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::LogSettingsResponse_SettingsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::inference::LogSettingsResponse_SettingsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::inference::LogSettingsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::inference::LogSettingsResponse, _impl_.settings_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::inference::ServerLiveRequest)},
  { 6, -1, -1, sizeof(::inference::ServerLiveResponse)},
  { 13, -1, -1, sizeof(::inference::ServerReadyRequest)},
  { 19, -1, -1, sizeof(::inference::ServerReadyResponse)},
  { 26, -1, -1, sizeof(::inference::ModelReadyRequest)},
  { 34, -1, -1, sizeof(::inference::ModelReadyResponse)},
  { 41, -1, -1, sizeof(::inference::ServerMetadataRequest)},
  { 47, -1, -1, sizeof(::inference::ServerMetadataResponse)},
  { 56, -1, -1, sizeof(::inference::ModelMetadataRequest)},
  { 64, -1, -1, sizeof(::inference::ModelMetadataResponse_TensorMetadata)},
  { 73, -1, -1, sizeof(::inference::ModelMetadataResponse)},
  { 84, -1, -1, sizeof(::inference::InferParameter)},
  { 96, -1, -1, sizeof(::inference::InferTensorContents)},
  { 110, 118, -1, sizeof(::inference::ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse)},
  { 120, -1, -1, sizeof(::inference::ModelInferRequest_InferInputTensor)},
  { 131, 139, -1, sizeof(::inference::ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse)},
  { 141, -1, -1, sizeof(::inference::ModelInferRequest_InferRequestedOutputTensor)},
  { 149, 157, -1, sizeof(::inference::ModelInferRequest_ParametersEntry_DoNotUse)},
  { 159, -1, -1, sizeof(::inference::ModelInferRequest)},
  { 172, 180, -1, sizeof(::inference::ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse)},
  { 182, -1, -1, sizeof(::inference::ModelInferResponse_InferOutputTensor)},
  { 193, 201, -1, sizeof(::inference::ModelInferResponse_ParametersEntry_DoNotUse)},
  { 203, -1, -1, sizeof(::inference::ModelInferResponse)},
  { 215, -1, -1, sizeof(::inference::ModelStreamInferResponse)},
  { 223, -1, -1, sizeof(::inference::ModelConfigRequest)},
  { 231, -1, -1, sizeof(::inference::ModelConfigResponse)},
  { 238, -1, -1, sizeof(::inference::ModelStatisticsRequest)},
  { 246, -1, -1, sizeof(::inference::StatisticDuration)},
  { 254, -1, -1, sizeof(::inference::InferStatistics)},
  { 268, -1, -1, sizeof(::inference::InferBatchStatistics)},
  { 278, -1, -1, sizeof(::inference::MemoryUsage)},
  { 287, -1, -1, sizeof(::inference::ModelStatistics)},
  { 301, -1, -1, sizeof(::inference::ModelStatisticsResponse)},
  { 308, -1, -1, sizeof(::inference::ModelRepositoryParameter)},
  { 319, -1, -1, sizeof(::inference::RepositoryIndexRequest)},
  { 327, -1, -1, sizeof(::inference::RepositoryIndexResponse_ModelIndex)},
  { 337, -1, -1, sizeof(::inference::RepositoryIndexResponse)},
  { 344, 352, -1, sizeof(::inference::RepositoryModelLoadRequest_ParametersEntry_DoNotUse)},
  { 354, -1, -1, sizeof(::inference::RepositoryModelLoadRequest)},
  { 363, -1, -1, sizeof(::inference::RepositoryModelLoadResponse)},
  { 369, 377, -1, sizeof(::inference::RepositoryModelUnloadRequest_ParametersEntry_DoNotUse)},
  { 379, -1, -1, sizeof(::inference::RepositoryModelUnloadRequest)},
  { 388, -1, -1, sizeof(::inference::RepositoryModelUnloadResponse)},
  { 394, -1, -1, sizeof(::inference::SystemSharedMemoryStatusRequest)},
  { 401, -1, -1, sizeof(::inference::SystemSharedMemoryStatusResponse_RegionStatus)},
  { 411, 419, -1, sizeof(::inference::SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse)},
  { 421, -1, -1, sizeof(::inference::SystemSharedMemoryStatusResponse)},
  { 428, -1, -1, sizeof(::inference::SystemSharedMemoryRegisterRequest)},
  { 438, -1, -1, sizeof(::inference::SystemSharedMemoryRegisterResponse)},
  { 444, -1, -1, sizeof(::inference::SystemSharedMemoryUnregisterRequest)},
  { 451, -1, -1, sizeof(::inference::SystemSharedMemoryUnregisterResponse)},
  { 457, -1, -1, sizeof(::inference::CudaSharedMemoryStatusRequest)},
  { 464, -1, -1, sizeof(::inference::CudaSharedMemoryStatusResponse_RegionStatus)},
  { 473, 481, -1, sizeof(::inference::CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse)},
  { 483, -1, -1, sizeof(::inference::CudaSharedMemoryStatusResponse)},
  { 490, -1, -1, sizeof(::inference::CudaSharedMemoryRegisterRequest)},
  { 500, -1, -1, sizeof(::inference::CudaSharedMemoryRegisterResponse)},
  { 506, -1, -1, sizeof(::inference::CudaSharedMemoryUnregisterRequest)},
  { 513, -1, -1, sizeof(::inference::CudaSharedMemoryUnregisterResponse)},
  { 519, -1, -1, sizeof(::inference::TraceSettingRequest_SettingValue)},
  { 526, 534, -1, sizeof(::inference::TraceSettingRequest_SettingsEntry_DoNotUse)},
  { 536, -1, -1, sizeof(::inference::TraceSettingRequest)},
  { 544, -1, -1, sizeof(::inference::TraceSettingResponse_SettingValue)},
  { 551, 559, -1, sizeof(::inference::TraceSettingResponse_SettingsEntry_DoNotUse)},
  { 561, -1, -1, sizeof(::inference::TraceSettingResponse)},
  { 568, -1, -1, sizeof(::inference::LogSettingsRequest_SettingValue)},
  { 578, 586, -1, sizeof(::inference::LogSettingsRequest_SettingsEntry_DoNotUse)},
  { 588, -1, -1, sizeof(::inference::LogSettingsRequest)},
  { 595, -1, -1, sizeof(::inference::LogSettingsResponse_SettingValue)},
  { 605, 613, -1, sizeof(::inference::LogSettingsResponse_SettingsEntry_DoNotUse)},
  { 615, -1, -1, sizeof(::inference::LogSettingsResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::inference::_ServerLiveRequest_default_instance_._instance,
  &::inference::_ServerLiveResponse_default_instance_._instance,
  &::inference::_ServerReadyRequest_default_instance_._instance,
  &::inference::_ServerReadyResponse_default_instance_._instance,
  &::inference::_ModelReadyRequest_default_instance_._instance,
  &::inference::_ModelReadyResponse_default_instance_._instance,
  &::inference::_ServerMetadataRequest_default_instance_._instance,
  &::inference::_ServerMetadataResponse_default_instance_._instance,
  &::inference::_ModelMetadataRequest_default_instance_._instance,
  &::inference::_ModelMetadataResponse_TensorMetadata_default_instance_._instance,
  &::inference::_ModelMetadataResponse_default_instance_._instance,
  &::inference::_InferParameter_default_instance_._instance,
  &::inference::_InferTensorContents_default_instance_._instance,
  &::inference::_ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse_default_instance_._instance,
  &::inference::_ModelInferRequest_InferInputTensor_default_instance_._instance,
  &::inference::_ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse_default_instance_._instance,
  &::inference::_ModelInferRequest_InferRequestedOutputTensor_default_instance_._instance,
  &::inference::_ModelInferRequest_ParametersEntry_DoNotUse_default_instance_._instance,
  &::inference::_ModelInferRequest_default_instance_._instance,
  &::inference::_ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse_default_instance_._instance,
  &::inference::_ModelInferResponse_InferOutputTensor_default_instance_._instance,
  &::inference::_ModelInferResponse_ParametersEntry_DoNotUse_default_instance_._instance,
  &::inference::_ModelInferResponse_default_instance_._instance,
  &::inference::_ModelStreamInferResponse_default_instance_._instance,
  &::inference::_ModelConfigRequest_default_instance_._instance,
  &::inference::_ModelConfigResponse_default_instance_._instance,
  &::inference::_ModelStatisticsRequest_default_instance_._instance,
  &::inference::_StatisticDuration_default_instance_._instance,
  &::inference::_InferStatistics_default_instance_._instance,
  &::inference::_InferBatchStatistics_default_instance_._instance,
  &::inference::_MemoryUsage_default_instance_._instance,
  &::inference::_ModelStatistics_default_instance_._instance,
  &::inference::_ModelStatisticsResponse_default_instance_._instance,
  &::inference::_ModelRepositoryParameter_default_instance_._instance,
  &::inference::_RepositoryIndexRequest_default_instance_._instance,
  &::inference::_RepositoryIndexResponse_ModelIndex_default_instance_._instance,
  &::inference::_RepositoryIndexResponse_default_instance_._instance,
  &::inference::_RepositoryModelLoadRequest_ParametersEntry_DoNotUse_default_instance_._instance,
  &::inference::_RepositoryModelLoadRequest_default_instance_._instance,
  &::inference::_RepositoryModelLoadResponse_default_instance_._instance,
  &::inference::_RepositoryModelUnloadRequest_ParametersEntry_DoNotUse_default_instance_._instance,
  &::inference::_RepositoryModelUnloadRequest_default_instance_._instance,
  &::inference::_RepositoryModelUnloadResponse_default_instance_._instance,
  &::inference::_SystemSharedMemoryStatusRequest_default_instance_._instance,
  &::inference::_SystemSharedMemoryStatusResponse_RegionStatus_default_instance_._instance,
  &::inference::_SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse_default_instance_._instance,
  &::inference::_SystemSharedMemoryStatusResponse_default_instance_._instance,
  &::inference::_SystemSharedMemoryRegisterRequest_default_instance_._instance,
  &::inference::_SystemSharedMemoryRegisterResponse_default_instance_._instance,
  &::inference::_SystemSharedMemoryUnregisterRequest_default_instance_._instance,
  &::inference::_SystemSharedMemoryUnregisterResponse_default_instance_._instance,
  &::inference::_CudaSharedMemoryStatusRequest_default_instance_._instance,
  &::inference::_CudaSharedMemoryStatusResponse_RegionStatus_default_instance_._instance,
  &::inference::_CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse_default_instance_._instance,
  &::inference::_CudaSharedMemoryStatusResponse_default_instance_._instance,
  &::inference::_CudaSharedMemoryRegisterRequest_default_instance_._instance,
  &::inference::_CudaSharedMemoryRegisterResponse_default_instance_._instance,
  &::inference::_CudaSharedMemoryUnregisterRequest_default_instance_._instance,
  &::inference::_CudaSharedMemoryUnregisterResponse_default_instance_._instance,
  &::inference::_TraceSettingRequest_SettingValue_default_instance_._instance,
  &::inference::_TraceSettingRequest_SettingsEntry_DoNotUse_default_instance_._instance,
  &::inference::_TraceSettingRequest_default_instance_._instance,
  &::inference::_TraceSettingResponse_SettingValue_default_instance_._instance,
  &::inference::_TraceSettingResponse_SettingsEntry_DoNotUse_default_instance_._instance,
  &::inference::_TraceSettingResponse_default_instance_._instance,
  &::inference::_LogSettingsRequest_SettingValue_default_instance_._instance,
  &::inference::_LogSettingsRequest_SettingsEntry_DoNotUse_default_instance_._instance,
  &::inference::_LogSettingsRequest_default_instance_._instance,
  &::inference::_LogSettingsResponse_SettingValue_default_instance_._instance,
  &::inference::_LogSettingsResponse_SettingsEntry_DoNotUse_default_instance_._instance,
  &::inference::_LogSettingsResponse_default_instance_._instance,
};

const char descriptor_table_protodef_grpc_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022grpc_service.proto\022\tinference\032\022model_c"
  "onfig.proto\"\023\n\021ServerLiveRequest\"\"\n\022Serv"
  "erLiveResponse\022\014\n\004live\030\001 \001(\010\"\024\n\022ServerRe"
  "adyRequest\"$\n\023ServerReadyResponse\022\r\n\005rea"
  "dy\030\001 \001(\010\"2\n\021ModelReadyRequest\022\014\n\004name\030\001 "
  "\001(\t\022\017\n\007version\030\002 \001(\t\"#\n\022ModelReadyRespon"
  "se\022\r\n\005ready\030\001 \001(\010\"\027\n\025ServerMetadataReque"
  "st\"K\n\026ServerMetadataResponse\022\014\n\004name\030\001 \001"
  "(\t\022\017\n\007version\030\002 \001(\t\022\022\n\nextensions\030\003 \003(\t\""
  "5\n\024ModelMetadataRequest\022\014\n\004name\030\001 \001(\t\022\017\n"
  "\007version\030\002 \001(\t\"\215\002\n\025ModelMetadataResponse"
  "\022\014\n\004name\030\001 \001(\t\022\020\n\010versions\030\002 \003(\t\022\020\n\010plat"
  "form\030\003 \001(\t\022\?\n\006inputs\030\004 \003(\0132/.inference.M"
  "odelMetadataResponse.TensorMetadata\022@\n\007o"
  "utputs\030\005 \003(\0132/.inference.ModelMetadataRe"
  "sponse.TensorMetadata\032\?\n\016TensorMetadata\022"
  "\014\n\004name\030\001 \001(\t\022\020\n\010datatype\030\002 \001(\t\022\r\n\005shape"
  "\030\003 \003(\003\"\231\001\n\016InferParameter\022\024\n\nbool_param\030"
  "\001 \001(\010H\000\022\025\n\013int64_param\030\002 \001(\003H\000\022\026\n\014string"
  "_param\030\003 \001(\tH\000\022\026\n\014double_param\030\004 \001(\001H\000\022\026"
  "\n\014uint64_param\030\005 \001(\004H\000B\022\n\020parameter_choi"
  "ce\"\320\001\n\023InferTensorContents\022\025\n\rbool_conte"
  "nts\030\001 \003(\010\022\024\n\014int_contents\030\002 \003(\005\022\026\n\016int64"
  "_contents\030\003 \003(\003\022\025\n\ruint_contents\030\004 \003(\r\022\027"
  "\n\017uint64_contents\030\005 \003(\004\022\025\n\rfp32_contents"
  "\030\006 \003(\002\022\025\n\rfp64_contents\030\007 \003(\001\022\026\n\016bytes_c"
  "ontents\030\010 \003(\014\"\356\006\n\021ModelInferRequest\022\022\n\nm"
  "odel_name\030\001 \001(\t\022\025\n\rmodel_version\030\002 \001(\t\022\n"
  "\n\002id\030\003 \001(\t\022@\n\nparameters\030\004 \003(\0132,.inferen"
  "ce.ModelInferRequest.ParametersEntry\022=\n\006"
  "inputs\030\005 \003(\0132-.inference.ModelInferReque"
  "st.InferInputTensor\022H\n\007outputs\030\006 \003(\01327.i"
  "nference.ModelInferRequest.InferRequeste"
  "dOutputTensor\022\032\n\022raw_input_contents\030\007 \003("
  "\014\032\224\002\n\020InferInputTensor\022\014\n\004name\030\001 \001(\t\022\020\n\010"
  "datatype\030\002 \001(\t\022\r\n\005shape\030\003 \003(\003\022Q\n\nparamet"
  "ers\030\004 \003(\0132=.inference.ModelInferRequest."
  "InferInputTensor.ParametersEntry\0220\n\010cont"
  "ents\030\005 \001(\0132\036.inference.InferTensorConten"
  "ts\032L\n\017ParametersEntry\022\013\n\003key\030\001 \001(\t\022(\n\005va"
  "lue\030\002 \001(\0132\031.inference.InferParameter:\0028\001"
  "\032\325\001\n\032InferRequestedOutputTensor\022\014\n\004name\030"
  "\001 \001(\t\022[\n\nparameters\030\002 \003(\0132G.inference.Mo"
  "delInferRequest.InferRequestedOutputTens"
  "or.ParametersEntry\032L\n\017ParametersEntry\022\013\n"
  "\003key\030\001 \001(\t\022(\n\005value\030\002 \001(\0132\031.inference.In"
  "ferParameter:\0028\001\032L\n\017ParametersEntry\022\013\n\003k"
  "ey\030\001 \001(\t\022(\n\005value\030\002 \001(\0132\031.inference.Infe"
  "rParameter:\0028\001\"\325\004\n\022ModelInferResponse\022\022\n"
  "\nmodel_name\030\001 \001(\t\022\025\n\rmodel_version\030\002 \001(\t"
  "\022\n\n\002id\030\003 \001(\t\022A\n\nparameters\030\004 \003(\0132-.infer"
  "ence.ModelInferResponse.ParametersEntry\022"
  "@\n\007outputs\030\005 \003(\0132/.inference.ModelInferR"
  "esponse.InferOutputTensor\022\033\n\023raw_output_"
  "contents\030\006 \003(\014\032\227\002\n\021InferOutputTensor\022\014\n\004"
  "name\030\001 \001(\t\022\020\n\010datatype\030\002 \001(\t\022\r\n\005shape\030\003 "
  "\003(\003\022S\n\nparameters\030\004 \003(\0132\?.inference.Mode"
  "lInferResponse.InferOutputTensor.Paramet"
  "ersEntry\0220\n\010contents\030\005 \001(\0132\036.inference.I"
  "nferTensorContents\032L\n\017ParametersEntry\022\013\n"
  "\003key\030\001 \001(\t\022(\n\005value\030\002 \001(\0132\031.inference.In"
  "ferParameter:\0028\001\032L\n\017ParametersEntry\022\013\n\003k"
  "ey\030\001 \001(\t\022(\n\005value\030\002 \001(\0132\031.inference.Infe"
  "rParameter:\0028\001\"h\n\030ModelStreamInferRespon"
  "se\022\025\n\rerror_message\030\001 \001(\t\0225\n\016infer_respo"
  "nse\030\002 \001(\0132\035.inference.ModelInferResponse"
  "\"3\n\022ModelConfigRequest\022\014\n\004name\030\001 \001(\t\022\017\n\007"
  "version\030\002 \001(\t\"=\n\023ModelConfigResponse\022&\n\006"
  "config\030\001 \001(\0132\026.inference.ModelConfig\"7\n\026"
  "ModelStatisticsRequest\022\014\n\004name\030\001 \001(\t\022\017\n\007"
  "version\030\002 \001(\t\".\n\021StatisticDuration\022\r\n\005co"
  "unt\030\001 \001(\004\022\n\n\002ns\030\002 \001(\004\"\234\003\n\017InferStatistic"
  "s\022-\n\007success\030\001 \001(\0132\034.inference.Statistic"
  "Duration\022*\n\004fail\030\002 \001(\0132\034.inference.Stati"
  "sticDuration\022+\n\005queue\030\003 \001(\0132\034.inference."
  "StatisticDuration\0223\n\rcompute_input\030\004 \001(\013"
  "2\034.inference.StatisticDuration\0223\n\rcomput"
  "e_infer\030\005 \001(\0132\034.inference.StatisticDurat"
  "ion\0224\n\016compute_output\030\006 \001(\0132\034.inference."
  "StatisticDuration\022/\n\tcache_hit\030\007 \001(\0132\034.i"
  "nference.StatisticDuration\0220\n\ncache_miss"
  "\030\010 \001(\0132\034.inference.StatisticDuration\"\312\001\n"
  "\024InferBatchStatistics\022\022\n\nbatch_size\030\001 \001("
  "\004\0223\n\rcompute_input\030\002 \001(\0132\034.inference.Sta"
  "tisticDuration\0223\n\rcompute_infer\030\003 \001(\0132\034."
  "inference.StatisticDuration\0224\n\016compute_o"
  "utput\030\004 \001(\0132\034.inference.StatisticDuratio"
  "n\":\n\013MemoryUsage\022\014\n\004type\030\001 \001(\t\022\n\n\002id\030\002 \001"
  "(\003\022\021\n\tbyte_size\030\003 \001(\004\"\223\002\n\017ModelStatistic"
  "s\022\014\n\004name\030\001 \001(\t\022\017\n\007version\030\002 \001(\t\022\026\n\016last"
  "_inference\030\003 \001(\004\022\027\n\017inference_count\030\004 \001("
  "\004\022\027\n\017execution_count\030\005 \001(\004\0223\n\017inference_"
  "stats\030\006 \001(\0132\032.inference.InferStatistics\022"
  "4\n\013batch_stats\030\007 \003(\0132\037.inference.InferBa"
  "tchStatistics\022,\n\014memory_usage\030\010 \003(\0132\026.in"
  "ference.MemoryUsage\"J\n\027ModelStatisticsRe"
  "sponse\022/\n\013model_stats\030\001 \003(\0132\032.inference."
  "ModelStatistics\"\212\001\n\030ModelRepositoryParam"
  "eter\022\024\n\nbool_param\030\001 \001(\010H\000\022\025\n\013int64_para"
  "m\030\002 \001(\003H\000\022\026\n\014string_param\030\003 \001(\tH\000\022\025\n\013byt"
  "es_param\030\004 \001(\014H\000B\022\n\020parameter_choice\"@\n\026"
  "RepositoryIndexRequest\022\027\n\017repository_nam"
  "e\030\001 \001(\t\022\r\n\005ready\030\002 \001(\010\"\244\001\n\027RepositoryInd"
  "exResponse\022=\n\006models\030\001 \003(\0132-.inference.R"
  "epositoryIndexResponse.ModelIndex\032J\n\nMod"
  "elIndex\022\014\n\004name\030\001 \001(\t\022\017\n\007version\030\002 \001(\t\022\r"
  "\n\005state\030\003 \001(\t\022\016\n\006reason\030\004 \001(\t\"\354\001\n\032Reposi"
  "toryModelLoadRequest\022\027\n\017repository_name\030"
  "\001 \001(\t\022\022\n\nmodel_name\030\002 \001(\t\022I\n\nparameters\030"
  "\003 \003(\01325.inference.RepositoryModelLoadReq"
  "uest.ParametersEntry\032V\n\017ParametersEntry\022"
  "\013\n\003key\030\001 \001(\t\0222\n\005value\030\002 \001(\0132#.inference."
  "ModelRepositoryParameter:\0028\001\"\035\n\033Reposito"
  "ryModelLoadResponse\"\360\001\n\034RepositoryModelU"
  "nloadRequest\022\027\n\017repository_name\030\001 \001(\t\022\022\n"
  "\nmodel_name\030\002 \001(\t\022K\n\nparameters\030\003 \003(\01327."
  "inference.RepositoryModelUnloadRequest.P"
  "arametersEntry\032V\n\017ParametersEntry\022\013\n\003key"
  "\030\001 \001(\t\0222\n\005value\030\002 \001(\0132#.inference.ModelR"
  "epositoryParameter:\0028\001\"\037\n\035RepositoryMode"
  "lUnloadResponse\"/\n\037SystemSharedMemorySta"
  "tusRequest\022\014\n\004name\030\001 \001(\t\"\245\002\n SystemShare"
  "dMemoryStatusResponse\022I\n\007regions\030\001 \003(\01328"
  ".inference.SystemSharedMemoryStatusRespo"
  "nse.RegionsEntry\032L\n\014RegionStatus\022\014\n\004name"
  "\030\001 \001(\t\022\013\n\003key\030\002 \001(\t\022\016\n\006offset\030\003 \001(\004\022\021\n\tb"
  "yte_size\030\004 \001(\004\032h\n\014RegionsEntry\022\013\n\003key\030\001 "
  "\001(\t\022G\n\005value\030\002 \001(\01328.inference.SystemSha"
  "redMemoryStatusResponse.RegionStatus:\0028\001"
  "\"a\n!SystemSharedMemoryRegisterRequest\022\014\n"
  "\004name\030\001 \001(\t\022\013\n\003key\030\002 \001(\t\022\016\n\006offset\030\003 \001(\004"
  "\022\021\n\tbyte_size\030\004 \001(\004\"$\n\"SystemSharedMemor"
  "yRegisterResponse\"3\n#SystemSharedMemoryU"
  "nregisterRequest\022\014\n\004name\030\001 \001(\t\"&\n$System"
  "SharedMemoryUnregisterResponse\"-\n\035CudaSh"
  "aredMemoryStatusRequest\022\014\n\004name\030\001 \001(\t\"\225\002"
  "\n\036CudaSharedMemoryStatusResponse\022G\n\007regi"
  "ons\030\001 \003(\01326.inference.CudaSharedMemorySt"
  "atusResponse.RegionsEntry\032B\n\014RegionStatu"
  "s\022\014\n\004name\030\001 \001(\t\022\021\n\tdevice_id\030\002 \001(\004\022\021\n\tby"
  "te_size\030\003 \001(\004\032f\n\014RegionsEntry\022\013\n\003key\030\001 \001"
  "(\t\022E\n\005value\030\002 \001(\01326.inference.CudaShared"
  "MemoryStatusResponse.RegionStatus:\0028\001\"i\n"
  "\037CudaSharedMemoryRegisterRequest\022\014\n\004name"
  "\030\001 \001(\t\022\022\n\nraw_handle\030\002 \001(\014\022\021\n\tdevice_id\030"
  "\003 \001(\003\022\021\n\tbyte_size\030\004 \001(\004\"\"\n CudaSharedMe"
  "moryRegisterResponse\"1\n!CudaSharedMemory"
  "UnregisterRequest\022\014\n\004name\030\001 \001(\t\"$\n\"CudaS"
  "haredMemoryUnregisterResponse\"\346\001\n\023TraceS"
  "ettingRequest\022>\n\010settings\030\001 \003(\0132,.infere"
  "nce.TraceSettingRequest.SettingsEntry\022\022\n"
  "\nmodel_name\030\002 \001(\t\032\035\n\014SettingValue\022\r\n\005val"
  "ue\030\001 \003(\t\032\\\n\rSettingsEntry\022\013\n\003key\030\001 \001(\t\022:"
  "\n\005value\030\002 \001(\0132+.inference.TraceSettingRe"
  "quest.SettingValue:\0028\001\"\325\001\n\024TraceSettingR"
  "esponse\022\?\n\010settings\030\001 \003(\0132-.inference.Tr"
  "aceSettingResponse.SettingsEntry\032\035\n\014Sett"
  "ingValue\022\r\n\005value\030\001 \003(\t\032]\n\rSettingsEntry"
  "\022\013\n\003key\030\001 \001(\t\022;\n\005value\030\002 \001(\0132,.inference"
  ".TraceSettingResponse.SettingValue:\0028\001\"\232"
  "\002\n\022LogSettingsRequest\022=\n\010settings\030\001 \003(\0132"
  "+.inference.LogSettingsRequest.SettingsE"
  "ntry\032h\n\014SettingValue\022\024\n\nbool_param\030\001 \001(\010"
  "H\000\022\026\n\014uint32_param\030\002 \001(\rH\000\022\026\n\014string_par"
  "am\030\003 \001(\tH\000B\022\n\020parameter_choice\032[\n\rSettin"
  "gsEntry\022\013\n\003key\030\001 \001(\t\0229\n\005value\030\002 \001(\0132*.in"
  "ference.LogSettingsRequest.SettingValue:"
  "\0028\001\"\235\002\n\023LogSettingsResponse\022>\n\010settings\030"
  "\001 \003(\0132,.inference.LogSettingsResponse.Se"
  "ttingsEntry\032h\n\014SettingValue\022\024\n\nbool_para"
  "m\030\001 \001(\010H\000\022\026\n\014uint32_param\030\002 \001(\rH\000\022\026\n\014str"
  "ing_param\030\003 \001(\tH\000B\022\n\020parameter_choice\032\\\n"
  "\rSettingsEntry\022\013\n\003key\030\001 \001(\t\022:\n\005value\030\002 \001"
  "(\0132+.inference.LogSettingsResponse.Setti"
  "ngValue:\0028\0012\267\017\n\024GRPCInferenceService\022K\n\n"
  "ServerLive\022\034.inference.ServerLiveRequest"
  "\032\035.inference.ServerLiveResponse\"\000\022N\n\013Ser"
  "verReady\022\035.inference.ServerReadyRequest\032"
  "\036.inference.ServerReadyResponse\"\000\022K\n\nMod"
  "elReady\022\034.inference.ModelReadyRequest\032\035."
  "inference.ModelReadyResponse\"\000\022W\n\016Server"
  "Metadata\022 .inference.ServerMetadataReque"
  "st\032!.inference.ServerMetadataResponse\"\000\022"
  "T\n\rModelMetadata\022\037.inference.ModelMetada"
  "taRequest\032 .inference.ModelMetadataRespo"
  "nse\"\000\022K\n\nModelInfer\022\034.inference.ModelInf"
  "erRequest\032\035.inference.ModelInferResponse"
  "\"\000\022[\n\020ModelStreamInfer\022\034.inference.Model"
  "InferRequest\032#.inference.ModelStreamInfe"
  "rResponse\"\000(\0010\001\022N\n\013ModelConfig\022\035.inferen"
  "ce.ModelConfigRequest\032\036.inference.ModelC"
  "onfigResponse\"\000\022Z\n\017ModelStatistics\022!.inf"
  "erence.ModelStatisticsRequest\032\".inferenc"
  "e.ModelStatisticsResponse\"\000\022Z\n\017Repositor"
  "yIndex\022!.inference.RepositoryIndexReques"
  "t\032\".inference.RepositoryIndexResponse\"\000\022"
  "f\n\023RepositoryModelLoad\022%.inference.Repos"
  "itoryModelLoadRequest\032&.inference.Reposi"
  "toryModelLoadResponse\"\000\022l\n\025RepositoryMod"
  "elUnload\022\'.inference.RepositoryModelUnlo"
  "adRequest\032(.inference.RepositoryModelUnl"
  "oadResponse\"\000\022u\n\030SystemSharedMemoryStatu"
  "s\022*.inference.SystemSharedMemoryStatusRe"
  "quest\032+.inference.SystemSharedMemoryStat"
  "usResponse\"\000\022{\n\032SystemSharedMemoryRegist"
  "er\022,.inference.SystemSharedMemoryRegiste"
  "rRequest\032-.inference.SystemSharedMemoryR"
  "egisterResponse\"\000\022\201\001\n\034SystemSharedMemory"
  "Unregister\022..inference.SystemSharedMemor"
  "yUnregisterRequest\032/.inference.SystemSha"
  "redMemoryUnregisterResponse\"\000\022o\n\026CudaSha"
  "redMemoryStatus\022(.inference.CudaSharedMe"
  "moryStatusRequest\032).inference.CudaShared"
  "MemoryStatusResponse\"\000\022u\n\030CudaSharedMemo"
  "ryRegister\022*.inference.CudaSharedMemoryR"
  "egisterRequest\032+.inference.CudaSharedMem"
  "oryRegisterResponse\"\000\022{\n\032CudaSharedMemor"
  "yUnregister\022,.inference.CudaSharedMemory"
  "UnregisterRequest\032-.inference.CudaShared"
  "MemoryUnregisterResponse\"\000\022Q\n\014TraceSetti"
  "ng\022\036.inference.TraceSettingRequest\032\037.inf"
  "erence.TraceSettingResponse\"\000\022N\n\013LogSett"
  "ings\022\035.inference.LogSettingsRequest\032\036.in"
  "ference.LogSettingsResponse\"\000b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_grpc_5fservice_2eproto_deps[1] = {
  &::descriptor_table_model_5fconfig_2eproto,
};
static ::_pbi::once_flag descriptor_table_grpc_5fservice_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_grpc_5fservice_2eproto = {
    false, false, 8957, descriptor_table_protodef_grpc_5fservice_2eproto,
    "grpc_service.proto",
    &descriptor_table_grpc_5fservice_2eproto_once, descriptor_table_grpc_5fservice_2eproto_deps, 1, 71,
    schemas, file_default_instances, TableStruct_grpc_5fservice_2eproto::offsets,
    file_level_metadata_grpc_5fservice_2eproto, file_level_enum_descriptors_grpc_5fservice_2eproto,
    file_level_service_descriptors_grpc_5fservice_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_grpc_5fservice_2eproto_getter() {
  return &descriptor_table_grpc_5fservice_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_grpc_5fservice_2eproto(&descriptor_table_grpc_5fservice_2eproto);
namespace inference {

// ===================================================================

class ServerLiveRequest::_Internal {
 public:
};

ServerLiveRequest::ServerLiveRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:inference.ServerLiveRequest)
}
ServerLiveRequest::ServerLiveRequest(const ServerLiveRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  ServerLiveRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:inference.ServerLiveRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ServerLiveRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ServerLiveRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ServerLiveRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[0]);
}

// ===================================================================

class ServerLiveResponse::_Internal {
 public:
};

ServerLiveResponse::ServerLiveResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:inference.ServerLiveResponse)
}
ServerLiveResponse::ServerLiveResponse(const ServerLiveResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ServerLiveResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.live_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.live_ = from._impl_.live_;
  // @@protoc_insertion_point(copy_constructor:inference.ServerLiveResponse)
}

inline void ServerLiveResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.live_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ServerLiveResponse::~ServerLiveResponse() {
  // @@protoc_insertion_point(destructor:inference.ServerLiveResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ServerLiveResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ServerLiveResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ServerLiveResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.ServerLiveResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.live_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServerLiveResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool live = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.live_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ServerLiveResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.ServerLiveResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool live = 1;
  if (this->_internal_live() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_live(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.ServerLiveResponse)
  return target;
}

size_t ServerLiveResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.ServerLiveResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool live = 1;
  if (this->_internal_live() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ServerLiveResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ServerLiveResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ServerLiveResponse::GetClassData() const { return &_class_data_; }


void ServerLiveResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ServerLiveResponse*>(&to_msg);
  auto& from = static_cast<const ServerLiveResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.ServerLiveResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_live() != 0) {
    _this->_internal_set_live(from._internal_live());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ServerLiveResponse::CopyFrom(const ServerLiveResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.ServerLiveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerLiveResponse::IsInitialized() const {
  return true;
}

void ServerLiveResponse::InternalSwap(ServerLiveResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.live_, other->_impl_.live_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ServerLiveResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[1]);
}

// ===================================================================

class ServerReadyRequest::_Internal {
 public:
};

ServerReadyRequest::ServerReadyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:inference.ServerReadyRequest)
}
ServerReadyRequest::ServerReadyRequest(const ServerReadyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  ServerReadyRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:inference.ServerReadyRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ServerReadyRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ServerReadyRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ServerReadyRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[2]);
}

// ===================================================================

class ServerReadyResponse::_Internal {
 public:
};

ServerReadyResponse::ServerReadyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:inference.ServerReadyResponse)
}
ServerReadyResponse::ServerReadyResponse(const ServerReadyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ServerReadyResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ready_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ready_ = from._impl_.ready_;
  // @@protoc_insertion_point(copy_constructor:inference.ServerReadyResponse)
}

inline void ServerReadyResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ready_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ServerReadyResponse::~ServerReadyResponse() {
  // @@protoc_insertion_point(destructor:inference.ServerReadyResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ServerReadyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ServerReadyResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ServerReadyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.ServerReadyResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ready_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServerReadyResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ready = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ready_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ServerReadyResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.ServerReadyResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ready = 1;
  if (this->_internal_ready() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ready(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.ServerReadyResponse)
  return target;
}

size_t ServerReadyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.ServerReadyResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ready = 1;
  if (this->_internal_ready() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ServerReadyResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ServerReadyResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ServerReadyResponse::GetClassData() const { return &_class_data_; }


void ServerReadyResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ServerReadyResponse*>(&to_msg);
  auto& from = static_cast<const ServerReadyResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.ServerReadyResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ready() != 0) {
    _this->_internal_set_ready(from._internal_ready());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ServerReadyResponse::CopyFrom(const ServerReadyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.ServerReadyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerReadyResponse::IsInitialized() const {
  return true;
}

void ServerReadyResponse::InternalSwap(ServerReadyResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ready_, other->_impl_.ready_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ServerReadyResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[3]);
}

// ===================================================================

class ModelReadyRequest::_Internal {
 public:
};

ModelReadyRequest::ModelReadyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:inference.ModelReadyRequest)
}
ModelReadyRequest::ModelReadyRequest(const ModelReadyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ModelReadyRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.version_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    _this->_impl_.version_.Set(from._internal_version(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:inference.ModelReadyRequest)
}

inline void ModelReadyRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.version_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ModelReadyRequest::~ModelReadyRequest() {
  // @@protoc_insertion_point(destructor:inference.ModelReadyRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModelReadyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.version_.Destroy();
}

void ModelReadyRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ModelReadyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.ModelReadyRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.version_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelReadyRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.ModelReadyRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // string version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.ModelReadyRequest.version"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelReadyRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.ModelReadyRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.ModelReadyRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.ModelReadyRequest.version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.ModelReadyRequest)
  return target;
}

size_t ModelReadyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.ModelReadyRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelReadyRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ModelReadyRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelReadyRequest::GetClassData() const { return &_class_data_; }


void ModelReadyRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ModelReadyRequest*>(&to_msg);
  auto& from = static_cast<const ModelReadyRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.ModelReadyRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelReadyRequest::CopyFrom(const ModelReadyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.ModelReadyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelReadyRequest::IsInitialized() const {
  return true;
}

void ModelReadyRequest::InternalSwap(ModelReadyRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.version_, lhs_arena,
      &other->_impl_.version_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelReadyRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[4]);
}

// ===================================================================

class ModelReadyResponse::_Internal {
 public:
};

ModelReadyResponse::ModelReadyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:inference.ModelReadyResponse)
}
ModelReadyResponse::ModelReadyResponse(const ModelReadyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ModelReadyResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ready_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ready_ = from._impl_.ready_;
  // @@protoc_insertion_point(copy_constructor:inference.ModelReadyResponse)
}

inline void ModelReadyResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ready_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ModelReadyResponse::~ModelReadyResponse() {
  // @@protoc_insertion_point(destructor:inference.ModelReadyResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModelReadyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ModelReadyResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ModelReadyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.ModelReadyResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ready_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelReadyResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ready = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ready_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelReadyResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.ModelReadyResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ready = 1;
  if (this->_internal_ready() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ready(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.ModelReadyResponse)
  return target;
}

size_t ModelReadyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.ModelReadyResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ready = 1;
  if (this->_internal_ready() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelReadyResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ModelReadyResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelReadyResponse::GetClassData() const { return &_class_data_; }


void ModelReadyResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ModelReadyResponse*>(&to_msg);
  auto& from = static_cast<const ModelReadyResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.ModelReadyResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ready() != 0) {
    _this->_internal_set_ready(from._internal_ready());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelReadyResponse::CopyFrom(const ModelReadyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.ModelReadyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelReadyResponse::IsInitialized() const {
  return true;
}

void ModelReadyResponse::InternalSwap(ModelReadyResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ready_, other->_impl_.ready_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelReadyResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[5]);
}

// ===================================================================

class ServerMetadataRequest::_Internal {
 public:
};

ServerMetadataRequest::ServerMetadataRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:inference.ServerMetadataRequest)
}
ServerMetadataRequest::ServerMetadataRequest(const ServerMetadataRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  ServerMetadataRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:inference.ServerMetadataRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ServerMetadataRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ServerMetadataRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ServerMetadataRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[6]);
}

// ===================================================================

class ServerMetadataResponse::_Internal {
 public:
};

ServerMetadataResponse::ServerMetadataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:inference.ServerMetadataResponse)
}
ServerMetadataResponse::ServerMetadataResponse(const ServerMetadataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ServerMetadataResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.extensions_){from._impl_.extensions_}
    , decltype(_impl_.name_){}
    , decltype(_impl_.version_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    _this->_impl_.version_.Set(from._internal_version(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:inference.ServerMetadataResponse)
}

inline void ServerMetadataResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.extensions_){arena}
    , decltype(_impl_.name_){}
    , decltype(_impl_.version_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ServerMetadataResponse::~ServerMetadataResponse() {
  // @@protoc_insertion_point(destructor:inference.ServerMetadataResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ServerMetadataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.extensions_.~RepeatedPtrField();
  _impl_.name_.Destroy();
  _impl_.version_.Destroy();
}

void ServerMetadataResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ServerMetadataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.ServerMetadataResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.extensions_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.version_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServerMetadataResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.ServerMetadataResponse.name"));
        } else
          goto handle_unusual;
        continue;
      // string version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.ServerMetadataResponse.version"));
        } else
          goto handle_unusual;
        continue;
      // repeated string extensions = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_extensions();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "inference.ServerMetadataResponse.extensions"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ServerMetadataResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.ServerMetadataResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.ServerMetadataResponse.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.ServerMetadataResponse.version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_version(), target);
  }

  // repeated string extensions = 3;
  for (int i = 0, n = this->_internal_extensions_size(); i < n; i++) {
    const auto& s = this->_internal_extensions(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.ServerMetadataResponse.extensions");
    target = stream->WriteString(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.ServerMetadataResponse)
  return target;
}

size_t ServerMetadataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.ServerMetadataResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string extensions = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.extensions_.size());
  for (int i = 0, n = _impl_.extensions_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.extensions_.Get(i));
  }

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ServerMetadataResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ServerMetadataResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ServerMetadataResponse::GetClassData() const { return &_class_data_; }


void ServerMetadataResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ServerMetadataResponse*>(&to_msg);
  auto& from = static_cast<const ServerMetadataResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.ServerMetadataResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.extensions_.MergeFrom(from._impl_.extensions_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ServerMetadataResponse::CopyFrom(const ServerMetadataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.ServerMetadataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerMetadataResponse::IsInitialized() const {
  return true;
}

void ServerMetadataResponse::InternalSwap(ServerMetadataResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.extensions_.InternalSwap(&other->_impl_.extensions_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.version_, lhs_arena,
      &other->_impl_.version_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ServerMetadataResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[7]);
}

// ===================================================================

class ModelMetadataRequest::_Internal {
 public:
};

ModelMetadataRequest::ModelMetadataRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:inference.ModelMetadataRequest)
}
ModelMetadataRequest::ModelMetadataRequest(const ModelMetadataRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ModelMetadataRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.version_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    _this->_impl_.version_.Set(from._internal_version(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:inference.ModelMetadataRequest)
}

inline void ModelMetadataRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.version_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ModelMetadataRequest::~ModelMetadataRequest() {
  // @@protoc_insertion_point(destructor:inference.ModelMetadataRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModelMetadataRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.version_.Destroy();
}

void ModelMetadataRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ModelMetadataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.ModelMetadataRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.version_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelMetadataRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.ModelMetadataRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // string version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.ModelMetadataRequest.version"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelMetadataRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.ModelMetadataRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.ModelMetadataRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.ModelMetadataRequest.version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.ModelMetadataRequest)
  return target;
}

size_t ModelMetadataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.ModelMetadataRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelMetadataRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ModelMetadataRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelMetadataRequest::GetClassData() const { return &_class_data_; }


void ModelMetadataRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ModelMetadataRequest*>(&to_msg);
  auto& from = static_cast<const ModelMetadataRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.ModelMetadataRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelMetadataRequest::CopyFrom(const ModelMetadataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.ModelMetadataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelMetadataRequest::IsInitialized() const {
  return true;
}

void ModelMetadataRequest::InternalSwap(ModelMetadataRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.version_, lhs_arena,
      &other->_impl_.version_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelMetadataRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[8]);
}

// ===================================================================

class ModelMetadataResponse_TensorMetadata::_Internal {
 public:
};

ModelMetadataResponse_TensorMetadata::ModelMetadataResponse_TensorMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:inference.ModelMetadataResponse.TensorMetadata)
}
ModelMetadataResponse_TensorMetadata::ModelMetadataResponse_TensorMetadata(const ModelMetadataResponse_TensorMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ModelMetadataResponse_TensorMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.shape_){from._impl_.shape_}
    , /*decltype(_impl_._shape_cached_byte_size_)*/{0}
    , decltype(_impl_.name_){}
    , decltype(_impl_.datatype_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.datatype_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.datatype_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_datatype().empty()) {
    _this->_impl_.datatype_.Set(from._internal_datatype(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:inference.ModelMetadataResponse.TensorMetadata)
}

inline void ModelMetadataResponse_TensorMetadata::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.shape_){arena}
    , /*decltype(_impl_._shape_cached_byte_size_)*/{0}
    , decltype(_impl_.name_){}
    , decltype(_impl_.datatype_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.datatype_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.datatype_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ModelMetadataResponse_TensorMetadata::~ModelMetadataResponse_TensorMetadata() {
  // @@protoc_insertion_point(destructor:inference.ModelMetadataResponse.TensorMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModelMetadataResponse_TensorMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.shape_.~RepeatedField();
  _impl_.name_.Destroy();
  _impl_.datatype_.Destroy();
}

void ModelMetadataResponse_TensorMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ModelMetadataResponse_TensorMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.ModelMetadataResponse.TensorMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.shape_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.datatype_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelMetadataResponse_TensorMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.ModelMetadataResponse.TensorMetadata.name"));
        } else
          goto handle_unusual;
        continue;
      // string datatype = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_datatype();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.ModelMetadataResponse.TensorMetadata.datatype"));
        } else
          goto handle_unusual;
        continue;
      // repeated int64 shape = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_shape(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 24) {
          _internal_add_shape(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelMetadataResponse_TensorMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.ModelMetadataResponse.TensorMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.ModelMetadataResponse.TensorMetadata.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string datatype = 2;
  if (!this->_internal_datatype().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_datatype().data(), static_cast<int>(this->_internal_datatype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.ModelMetadataResponse.TensorMetadata.datatype");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_datatype(), target);
  }

  // repeated int64 shape = 3;
  {
    int byte_size = _impl_._shape_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          3, _internal_shape(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.ModelMetadataResponse.TensorMetadata)
  return target;
}

size_t ModelMetadataResponse_TensorMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.ModelMetadataResponse.TensorMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 shape = 3;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.shape_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._shape_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string datatype = 2;
  if (!this->_internal_datatype().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_datatype());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelMetadataResponse_TensorMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ModelMetadataResponse_TensorMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelMetadataResponse_TensorMetadata::GetClassData() const { return &_class_data_; }


void ModelMetadataResponse_TensorMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ModelMetadataResponse_TensorMetadata*>(&to_msg);
  auto& from = static_cast<const ModelMetadataResponse_TensorMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.ModelMetadataResponse.TensorMetadata)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.shape_.MergeFrom(from._impl_.shape_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_datatype().empty()) {
    _this->_internal_set_datatype(from._internal_datatype());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelMetadataResponse_TensorMetadata::CopyFrom(const ModelMetadataResponse_TensorMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.ModelMetadataResponse.TensorMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelMetadataResponse_TensorMetadata::IsInitialized() const {
  return true;
}

void ModelMetadataResponse_TensorMetadata::InternalSwap(ModelMetadataResponse_TensorMetadata* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.shape_.InternalSwap(&other->_impl_.shape_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.datatype_, lhs_arena,
      &other->_impl_.datatype_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelMetadataResponse_TensorMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[9]);
}

// ===================================================================

class ModelMetadataResponse::_Internal {
 public:
};

ModelMetadataResponse::ModelMetadataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:inference.ModelMetadataResponse)
}
ModelMetadataResponse::ModelMetadataResponse(const ModelMetadataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ModelMetadataResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.versions_){from._impl_.versions_}
    , decltype(_impl_.inputs_){from._impl_.inputs_}
    , decltype(_impl_.outputs_){from._impl_.outputs_}
    , decltype(_impl_.name_){}
    , decltype(_impl_.platform_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.platform_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.platform_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_platform().empty()) {
    _this->_impl_.platform_.Set(from._internal_platform(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:inference.ModelMetadataResponse)
}

inline void ModelMetadataResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.versions_){arena}
    , decltype(_impl_.inputs_){arena}
    , decltype(_impl_.outputs_){arena}
    , decltype(_impl_.name_){}
    , decltype(_impl_.platform_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.platform_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.platform_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ModelMetadataResponse::~ModelMetadataResponse() {
  // @@protoc_insertion_point(destructor:inference.ModelMetadataResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModelMetadataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.versions_.~RepeatedPtrField();
  _impl_.inputs_.~RepeatedPtrField();
  _impl_.outputs_.~RepeatedPtrField();
  _impl_.name_.Destroy();
  _impl_.platform_.Destroy();
}

void ModelMetadataResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ModelMetadataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.ModelMetadataResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.versions_.Clear();
  _impl_.inputs_.Clear();
  _impl_.outputs_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.platform_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelMetadataResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.ModelMetadataResponse.name"));
        } else
          goto handle_unusual;
        continue;
      // repeated string versions = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_versions();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "inference.ModelMetadataResponse.versions"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string platform = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_platform();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.ModelMetadataResponse.platform"));
        } else
          goto handle_unusual;
        continue;
      // repeated .inference.ModelMetadataResponse.TensorMetadata inputs = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_inputs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .inference.ModelMetadataResponse.TensorMetadata outputs = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_outputs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelMetadataResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.ModelMetadataResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.ModelMetadataResponse.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // repeated string versions = 2;
  for (int i = 0, n = this->_internal_versions_size(); i < n; i++) {
    const auto& s = this->_internal_versions(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.ModelMetadataResponse.versions");
    target = stream->WriteString(2, s, target);
  }

  // string platform = 3;
  if (!this->_internal_platform().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_platform().data(), static_cast<int>(this->_internal_platform().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.ModelMetadataResponse.platform");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_platform(), target);
  }

  // repeated .inference.ModelMetadataResponse.TensorMetadata inputs = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_inputs_size()); i < n; i++) {
    const auto& repfield = this->_internal_inputs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .inference.ModelMetadataResponse.TensorMetadata outputs = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_outputs_size()); i < n; i++) {
    const auto& repfield = this->_internal_outputs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.ModelMetadataResponse)
  return target;
}

size_t ModelMetadataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.ModelMetadataResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string versions = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.versions_.size());
  for (int i = 0, n = _impl_.versions_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.versions_.Get(i));
  }

  // repeated .inference.ModelMetadataResponse.TensorMetadata inputs = 4;
  total_size += 1UL * this->_internal_inputs_size();
  for (const auto& msg : this->_impl_.inputs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .inference.ModelMetadataResponse.TensorMetadata outputs = 5;
  total_size += 1UL * this->_internal_outputs_size();
  for (const auto& msg : this->_impl_.outputs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string platform = 3;
  if (!this->_internal_platform().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_platform());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelMetadataResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ModelMetadataResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelMetadataResponse::GetClassData() const { return &_class_data_; }


void ModelMetadataResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ModelMetadataResponse*>(&to_msg);
  auto& from = static_cast<const ModelMetadataResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.ModelMetadataResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.versions_.MergeFrom(from._impl_.versions_);
  _this->_impl_.inputs_.MergeFrom(from._impl_.inputs_);
  _this->_impl_.outputs_.MergeFrom(from._impl_.outputs_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_platform().empty()) {
    _this->_internal_set_platform(from._internal_platform());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelMetadataResponse::CopyFrom(const ModelMetadataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.ModelMetadataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelMetadataResponse::IsInitialized() const {
  return true;
}

void ModelMetadataResponse::InternalSwap(ModelMetadataResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.versions_.InternalSwap(&other->_impl_.versions_);
  _impl_.inputs_.InternalSwap(&other->_impl_.inputs_);
  _impl_.outputs_.InternalSwap(&other->_impl_.outputs_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.platform_, lhs_arena,
      &other->_impl_.platform_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelMetadataResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[10]);
}

// ===================================================================

class InferParameter::_Internal {
 public:
};

InferParameter::InferParameter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:inference.InferParameter)
}
InferParameter::InferParameter(const InferParameter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InferParameter* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.parameter_choice_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_parameter_choice();
  switch (from.parameter_choice_case()) {
    case kBoolParam: {
      _this->_internal_set_bool_param(from._internal_bool_param());
      break;
    }
    case kInt64Param: {
      _this->_internal_set_int64_param(from._internal_int64_param());
      break;
    }
    case kStringParam: {
      _this->_internal_set_string_param(from._internal_string_param());
      break;
    }
    case kDoubleParam: {
      _this->_internal_set_double_param(from._internal_double_param());
      break;
    }
    case kUint64Param: {
      _this->_internal_set_uint64_param(from._internal_uint64_param());
      break;
    }
    case PARAMETER_CHOICE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:inference.InferParameter)
}

inline void InferParameter::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.parameter_choice_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_parameter_choice();
}

InferParameter::~InferParameter() {
  // @@protoc_insertion_point(destructor:inference.InferParameter)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InferParameter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_parameter_choice()) {
    clear_parameter_choice();
  }
}

void InferParameter::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InferParameter::clear_parameter_choice() {
// @@protoc_insertion_point(one_of_clear_start:inference.InferParameter)
  switch (parameter_choice_case()) {
    case kBoolParam: {
      // No need to clear
      break;
    }
    case kInt64Param: {
      // No need to clear
      break;
    }
    case kStringParam: {
      _impl_.parameter_choice_.string_param_.Destroy();
      break;
    }
    case kDoubleParam: {
      // No need to clear
      break;
    }
    case kUint64Param: {
      // No need to clear
      break;
    }
    case PARAMETER_CHOICE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PARAMETER_CHOICE_NOT_SET;
}


void InferParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.InferParameter)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_parameter_choice();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InferParameter::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool bool_param = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _internal_set_bool_param(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 int64_param = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _internal_set_int64_param(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string string_param = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_string_param();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.InferParameter.string_param"));
        } else
          goto handle_unusual;
        continue;
      // double double_param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 33)) {
          _internal_set_double_param(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // uint64 uint64_param = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _internal_set_uint64_param(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InferParameter::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.InferParameter)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool bool_param = 1;
  if (_internal_has_bool_param()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_bool_param(), target);
  }

  // int64 int64_param = 2;
  if (_internal_has_int64_param()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_int64_param(), target);
  }

  // string string_param = 3;
  if (_internal_has_string_param()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_string_param().data(), static_cast<int>(this->_internal_string_param().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.InferParameter.string_param");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_string_param(), target);
  }

  // double double_param = 4;
  if (_internal_has_double_param()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(4, this->_internal_double_param(), target);
  }

  // uint64 uint64_param = 5;
  if (_internal_has_uint64_param()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(5, this->_internal_uint64_param(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.InferParameter)
  return target;
}

size_t InferParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.InferParameter)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (parameter_choice_case()) {
    // bool bool_param = 1;
    case kBoolParam: {
      total_size += 1 + 1;
      break;
    }
    // int64 int64_param = 2;
    case kInt64Param: {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_int64_param());
      break;
    }
    // string string_param = 3;
    case kStringParam: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_string_param());
      break;
    }
    // double double_param = 4;
    case kDoubleParam: {
      total_size += 1 + 8;
      break;
    }
    // uint64 uint64_param = 5;
    case kUint64Param: {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_uint64_param());
      break;
    }
    case PARAMETER_CHOICE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InferParameter::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InferParameter::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InferParameter::GetClassData() const { return &_class_data_; }


void InferParameter::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InferParameter*>(&to_msg);
  auto& from = static_cast<const InferParameter&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.InferParameter)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.parameter_choice_case()) {
    case kBoolParam: {
      _this->_internal_set_bool_param(from._internal_bool_param());
      break;
    }
    case kInt64Param: {
      _this->_internal_set_int64_param(from._internal_int64_param());
      break;
    }
    case kStringParam: {
      _this->_internal_set_string_param(from._internal_string_param());
      break;
    }
    case kDoubleParam: {
      _this->_internal_set_double_param(from._internal_double_param());
      break;
    }
    case kUint64Param: {
      _this->_internal_set_uint64_param(from._internal_uint64_param());
      break;
    }
    case PARAMETER_CHOICE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InferParameter::CopyFrom(const InferParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.InferParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InferParameter::IsInitialized() const {
  return true;
}

void InferParameter::InternalSwap(InferParameter* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.parameter_choice_, other->_impl_.parameter_choice_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata InferParameter::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[11]);
}

// ===================================================================

class InferTensorContents::_Internal {
 public:
};

InferTensorContents::InferTensorContents(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:inference.InferTensorContents)
}
InferTensorContents::InferTensorContents(const InferTensorContents& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InferTensorContents* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.bool_contents_){from._impl_.bool_contents_}
    , decltype(_impl_.int_contents_){from._impl_.int_contents_}
    , /*decltype(_impl_._int_contents_cached_byte_size_)*/{0}
    , decltype(_impl_.int64_contents_){from._impl_.int64_contents_}
    , /*decltype(_impl_._int64_contents_cached_byte_size_)*/{0}
    , decltype(_impl_.uint_contents_){from._impl_.uint_contents_}
    , /*decltype(_impl_._uint_contents_cached_byte_size_)*/{0}
    , decltype(_impl_.uint64_contents_){from._impl_.uint64_contents_}
    , /*decltype(_impl_._uint64_contents_cached_byte_size_)*/{0}
    , decltype(_impl_.fp32_contents_){from._impl_.fp32_contents_}
    , decltype(_impl_.fp64_contents_){from._impl_.fp64_contents_}
    , decltype(_impl_.bytes_contents_){from._impl_.bytes_contents_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:inference.InferTensorContents)
}

inline void InferTensorContents::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.bool_contents_){arena}
    , decltype(_impl_.int_contents_){arena}
    , /*decltype(_impl_._int_contents_cached_byte_size_)*/{0}
    , decltype(_impl_.int64_contents_){arena}
    , /*decltype(_impl_._int64_contents_cached_byte_size_)*/{0}
    , decltype(_impl_.uint_contents_){arena}
    , /*decltype(_impl_._uint_contents_cached_byte_size_)*/{0}
    , decltype(_impl_.uint64_contents_){arena}
    , /*decltype(_impl_._uint64_contents_cached_byte_size_)*/{0}
    , decltype(_impl_.fp32_contents_){arena}
    , decltype(_impl_.fp64_contents_){arena}
    , decltype(_impl_.bytes_contents_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

InferTensorContents::~InferTensorContents() {
  // @@protoc_insertion_point(destructor:inference.InferTensorContents)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InferTensorContents::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.bool_contents_.~RepeatedField();
  _impl_.int_contents_.~RepeatedField();
  _impl_.int64_contents_.~RepeatedField();
  _impl_.uint_contents_.~RepeatedField();
  _impl_.uint64_contents_.~RepeatedField();
  _impl_.fp32_contents_.~RepeatedField();
  _impl_.fp64_contents_.~RepeatedField();
  _impl_.bytes_contents_.~RepeatedPtrField();
}

void InferTensorContents::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InferTensorContents::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.InferTensorContents)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bool_contents_.Clear();
  _impl_.int_contents_.Clear();
  _impl_.int64_contents_.Clear();
  _impl_.uint_contents_.Clear();
  _impl_.uint64_contents_.Clear();
  _impl_.fp32_contents_.Clear();
  _impl_.fp64_contents_.Clear();
  _impl_.bytes_contents_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InferTensorContents::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated bool bool_contents = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedBoolParser(_internal_mutable_bool_contents(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_bool_contents(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 int_contents = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_int_contents(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_int_contents(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int64 int64_contents = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_int64_contents(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 24) {
          _internal_add_int64_contents(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated uint32 uint_contents = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_uint_contents(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 32) {
          _internal_add_uint_contents(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated uint64 uint64_contents = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_uint64_contents(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 40) {
          _internal_add_uint64_contents(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated float fp32_contents = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_fp32_contents(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 53) {
          _internal_add_fp32_contents(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // repeated double fp64_contents = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(_internal_mutable_fp64_contents(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 57) {
          _internal_add_fp64_contents(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // repeated bytes bytes_contents = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_bytes_contents();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InferTensorContents::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.InferTensorContents)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool bool_contents = 1;
  if (this->_internal_bool_contents_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_bool_contents(), target);
  }

  // repeated int32 int_contents = 2;
  {
    int byte_size = _impl_._int_contents_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_int_contents(), byte_size, target);
    }
  }

  // repeated int64 int64_contents = 3;
  {
    int byte_size = _impl_._int64_contents_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          3, _internal_int64_contents(), byte_size, target);
    }
  }

  // repeated uint32 uint_contents = 4;
  {
    int byte_size = _impl_._uint_contents_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          4, _internal_uint_contents(), byte_size, target);
    }
  }

  // repeated uint64 uint64_contents = 5;
  {
    int byte_size = _impl_._uint64_contents_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          5, _internal_uint64_contents(), byte_size, target);
    }
  }

  // repeated float fp32_contents = 6;
  if (this->_internal_fp32_contents_size() > 0) {
    target = stream->WriteFixedPacked(6, _internal_fp32_contents(), target);
  }

  // repeated double fp64_contents = 7;
  if (this->_internal_fp64_contents_size() > 0) {
    target = stream->WriteFixedPacked(7, _internal_fp64_contents(), target);
  }

  // repeated bytes bytes_contents = 8;
  for (int i = 0, n = this->_internal_bytes_contents_size(); i < n; i++) {
    const auto& s = this->_internal_bytes_contents(i);
    target = stream->WriteBytes(8, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.InferTensorContents)
  return target;
}

size_t InferTensorContents::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.InferTensorContents)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bool bool_contents = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_bool_contents_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // repeated int32 int_contents = 2;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.int_contents_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._int_contents_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int64 int64_contents = 3;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.int64_contents_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._int64_contents_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated uint32 uint_contents = 4;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt32Size(this->_impl_.uint_contents_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._uint_contents_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated uint64 uint64_contents = 5;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt64Size(this->_impl_.uint64_contents_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._uint64_contents_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated float fp32_contents = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_fp32_contents_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // repeated double fp64_contents = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_fp64_contents_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // repeated bytes bytes_contents = 8;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.bytes_contents_.size());
  for (int i = 0, n = _impl_.bytes_contents_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      _impl_.bytes_contents_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InferTensorContents::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InferTensorContents::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InferTensorContents::GetClassData() const { return &_class_data_; }


void InferTensorContents::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InferTensorContents*>(&to_msg);
  auto& from = static_cast<const InferTensorContents&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.InferTensorContents)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.bool_contents_.MergeFrom(from._impl_.bool_contents_);
  _this->_impl_.int_contents_.MergeFrom(from._impl_.int_contents_);
  _this->_impl_.int64_contents_.MergeFrom(from._impl_.int64_contents_);
  _this->_impl_.uint_contents_.MergeFrom(from._impl_.uint_contents_);
  _this->_impl_.uint64_contents_.MergeFrom(from._impl_.uint64_contents_);
  _this->_impl_.fp32_contents_.MergeFrom(from._impl_.fp32_contents_);
  _this->_impl_.fp64_contents_.MergeFrom(from._impl_.fp64_contents_);
  _this->_impl_.bytes_contents_.MergeFrom(from._impl_.bytes_contents_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InferTensorContents::CopyFrom(const InferTensorContents& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.InferTensorContents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InferTensorContents::IsInitialized() const {
  return true;
}

void InferTensorContents::InternalSwap(InferTensorContents* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.bool_contents_.InternalSwap(&other->_impl_.bool_contents_);
  _impl_.int_contents_.InternalSwap(&other->_impl_.int_contents_);
  _impl_.int64_contents_.InternalSwap(&other->_impl_.int64_contents_);
  _impl_.uint_contents_.InternalSwap(&other->_impl_.uint_contents_);
  _impl_.uint64_contents_.InternalSwap(&other->_impl_.uint64_contents_);
  _impl_.fp32_contents_.InternalSwap(&other->_impl_.fp32_contents_);
  _impl_.fp64_contents_.InternalSwap(&other->_impl_.fp64_contents_);
  _impl_.bytes_contents_.InternalSwap(&other->_impl_.bytes_contents_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InferTensorContents::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[12]);
}

// ===================================================================

ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse::ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse() {}
ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse::ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse::MergeFrom(const ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[13]);
}

// ===================================================================

class ModelInferRequest_InferInputTensor::_Internal {
 public:
  static const ::inference::InferTensorContents& contents(const ModelInferRequest_InferInputTensor* msg);
};

const ::inference::InferTensorContents&
ModelInferRequest_InferInputTensor::_Internal::contents(const ModelInferRequest_InferInputTensor* msg) {
  return *msg->_impl_.contents_;
}
ModelInferRequest_InferInputTensor::ModelInferRequest_InferInputTensor(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &ModelInferRequest_InferInputTensor::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:inference.ModelInferRequest.InferInputTensor)
}
ModelInferRequest_InferInputTensor::ModelInferRequest_InferInputTensor(const ModelInferRequest_InferInputTensor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ModelInferRequest_InferInputTensor* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.shape_){from._impl_.shape_}
    , /*decltype(_impl_._shape_cached_byte_size_)*/{0}
    , /*decltype(_impl_.parameters_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.datatype_){}
    , decltype(_impl_.contents_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.parameters_.MergeFrom(from._impl_.parameters_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.datatype_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.datatype_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_datatype().empty()) {
    _this->_impl_.datatype_.Set(from._internal_datatype(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_contents()) {
    _this->_impl_.contents_ = new ::inference::InferTensorContents(*from._impl_.contents_);
  }
  // @@protoc_insertion_point(copy_constructor:inference.ModelInferRequest.InferInputTensor)
}

inline void ModelInferRequest_InferInputTensor::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.shape_){arena}
    , /*decltype(_impl_._shape_cached_byte_size_)*/{0}
    , /*decltype(_impl_.parameters_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.name_){}
    , decltype(_impl_.datatype_){}
    , decltype(_impl_.contents_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.datatype_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.datatype_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ModelInferRequest_InferInputTensor::~ModelInferRequest_InferInputTensor() {
  // @@protoc_insertion_point(destructor:inference.ModelInferRequest.InferInputTensor)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void ModelInferRequest_InferInputTensor::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.shape_.~RepeatedField();
  _impl_.parameters_.Destruct();
  _impl_.parameters_.~MapField();
  _impl_.name_.Destroy();
  _impl_.datatype_.Destroy();
  if (this != internal_default_instance()) delete _impl_.contents_;
}

void ModelInferRequest_InferInputTensor::ArenaDtor(void* object) {
  ModelInferRequest_InferInputTensor* _this = reinterpret_cast< ModelInferRequest_InferInputTensor* >(object);
  _this->_impl_.parameters_.Destruct();
}
void ModelInferRequest_InferInputTensor::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ModelInferRequest_InferInputTensor::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.ModelInferRequest.InferInputTensor)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.shape_.Clear();
  _impl_.parameters_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.datatype_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.contents_ != nullptr) {
    delete _impl_.contents_;
  }
  _impl_.contents_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelInferRequest_InferInputTensor::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.ModelInferRequest.InferInputTensor.name"));
        } else
          goto handle_unusual;
        continue;
      // string datatype = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_datatype();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.ModelInferRequest.InferInputTensor.datatype"));
        } else
          goto handle_unusual;
        continue;
      // repeated int64 shape = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_shape(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 24) {
          _internal_add_shape(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, .inference.InferParameter> parameters = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.parameters_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .inference.InferTensorContents contents = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_contents(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelInferRequest_InferInputTensor::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.ModelInferRequest.InferInputTensor)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.ModelInferRequest.InferInputTensor.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string datatype = 2;
  if (!this->_internal_datatype().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_datatype().data(), static_cast<int>(this->_internal_datatype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.ModelInferRequest.InferInputTensor.datatype");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_datatype(), target);
  }

  // repeated int64 shape = 3;
  {
    int byte_size = _impl_._shape_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          3, _internal_shape(), byte_size, target);
    }
  }

  // map<string, .inference.InferParameter> parameters = 4;
  if (!this->_internal_parameters().empty()) {
    using MapType = ::_pb::Map<std::string, ::inference::InferParameter>;
    using WireHelper = ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_parameters();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "inference.ModelInferRequest.InferInputTensor.ParametersEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // .inference.InferTensorContents contents = 5;
  if (this->_internal_has_contents()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::contents(this),
        _Internal::contents(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.ModelInferRequest.InferInputTensor)
  return target;
}

size_t ModelInferRequest_InferInputTensor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.ModelInferRequest.InferInputTensor)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 shape = 3;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.shape_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._shape_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // map<string, .inference.InferParameter> parameters = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_parameters_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::inference::InferParameter >::const_iterator
      it = this->_internal_parameters().begin();
      it != this->_internal_parameters().end(); ++it) {
    total_size += ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string datatype = 2;
  if (!this->_internal_datatype().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_datatype());
  }

  // .inference.InferTensorContents contents = 5;
  if (this->_internal_has_contents()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.contents_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelInferRequest_InferInputTensor::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ModelInferRequest_InferInputTensor::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelInferRequest_InferInputTensor::GetClassData() const { return &_class_data_; }


void ModelInferRequest_InferInputTensor::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ModelInferRequest_InferInputTensor*>(&to_msg);
  auto& from = static_cast<const ModelInferRequest_InferInputTensor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.ModelInferRequest.InferInputTensor)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.shape_.MergeFrom(from._impl_.shape_);
  _this->_impl_.parameters_.MergeFrom(from._impl_.parameters_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_datatype().empty()) {
    _this->_internal_set_datatype(from._internal_datatype());
  }
  if (from._internal_has_contents()) {
    _this->_internal_mutable_contents()->::inference::InferTensorContents::MergeFrom(
        from._internal_contents());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelInferRequest_InferInputTensor::CopyFrom(const ModelInferRequest_InferInputTensor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.ModelInferRequest.InferInputTensor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelInferRequest_InferInputTensor::IsInitialized() const {
  return true;
}

void ModelInferRequest_InferInputTensor::InternalSwap(ModelInferRequest_InferInputTensor* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.shape_.InternalSwap(&other->_impl_.shape_);
  _impl_.parameters_.InternalSwap(&other->_impl_.parameters_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.datatype_, lhs_arena,
      &other->_impl_.datatype_, rhs_arena
  );
  swap(_impl_.contents_, other->_impl_.contents_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelInferRequest_InferInputTensor::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[14]);
}

// ===================================================================

ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse::ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse() {}
ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse::ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse::MergeFrom(const ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[15]);
}

// ===================================================================

class ModelInferRequest_InferRequestedOutputTensor::_Internal {
 public:
};

ModelInferRequest_InferRequestedOutputTensor::ModelInferRequest_InferRequestedOutputTensor(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &ModelInferRequest_InferRequestedOutputTensor::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:inference.ModelInferRequest.InferRequestedOutputTensor)
}
ModelInferRequest_InferRequestedOutputTensor::ModelInferRequest_InferRequestedOutputTensor(const ModelInferRequest_InferRequestedOutputTensor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ModelInferRequest_InferRequestedOutputTensor* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.parameters_)*/{}
    , decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.parameters_.MergeFrom(from._impl_.parameters_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:inference.ModelInferRequest.InferRequestedOutputTensor)
}

inline void ModelInferRequest_InferRequestedOutputTensor::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.parameters_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ModelInferRequest_InferRequestedOutputTensor::~ModelInferRequest_InferRequestedOutputTensor() {
  // @@protoc_insertion_point(destructor:inference.ModelInferRequest.InferRequestedOutputTensor)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void ModelInferRequest_InferRequestedOutputTensor::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.parameters_.Destruct();
  _impl_.parameters_.~MapField();
  _impl_.name_.Destroy();
}

void ModelInferRequest_InferRequestedOutputTensor::ArenaDtor(void* object) {
  ModelInferRequest_InferRequestedOutputTensor* _this = reinterpret_cast< ModelInferRequest_InferRequestedOutputTensor* >(object);
  _this->_impl_.parameters_.Destruct();
}
void ModelInferRequest_InferRequestedOutputTensor::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ModelInferRequest_InferRequestedOutputTensor::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.ModelInferRequest.InferRequestedOutputTensor)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parameters_.Clear();
  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelInferRequest_InferRequestedOutputTensor::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.ModelInferRequest.InferRequestedOutputTensor.name"));
        } else
          goto handle_unusual;
        continue;
      // map<string, .inference.InferParameter> parameters = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.parameters_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelInferRequest_InferRequestedOutputTensor::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.ModelInferRequest.InferRequestedOutputTensor)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.ModelInferRequest.InferRequestedOutputTensor.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // map<string, .inference.InferParameter> parameters = 2;
  if (!this->_internal_parameters().empty()) {
    using MapType = ::_pb::Map<std::string, ::inference::InferParameter>;
    using WireHelper = ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_parameters();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "inference.ModelInferRequest.InferRequestedOutputTensor.ParametersEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.ModelInferRequest.InferRequestedOutputTensor)
  return target;
}

size_t ModelInferRequest_InferRequestedOutputTensor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.ModelInferRequest.InferRequestedOutputTensor)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .inference.InferParameter> parameters = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_parameters_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::inference::InferParameter >::const_iterator
      it = this->_internal_parameters().begin();
      it != this->_internal_parameters().end(); ++it) {
    total_size += ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelInferRequest_InferRequestedOutputTensor::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ModelInferRequest_InferRequestedOutputTensor::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelInferRequest_InferRequestedOutputTensor::GetClassData() const { return &_class_data_; }


void ModelInferRequest_InferRequestedOutputTensor::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ModelInferRequest_InferRequestedOutputTensor*>(&to_msg);
  auto& from = static_cast<const ModelInferRequest_InferRequestedOutputTensor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.ModelInferRequest.InferRequestedOutputTensor)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.parameters_.MergeFrom(from._impl_.parameters_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelInferRequest_InferRequestedOutputTensor::CopyFrom(const ModelInferRequest_InferRequestedOutputTensor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.ModelInferRequest.InferRequestedOutputTensor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelInferRequest_InferRequestedOutputTensor::IsInitialized() const {
  return true;
}

void ModelInferRequest_InferRequestedOutputTensor::InternalSwap(ModelInferRequest_InferRequestedOutputTensor* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.parameters_.InternalSwap(&other->_impl_.parameters_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelInferRequest_InferRequestedOutputTensor::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[16]);
}

// ===================================================================

ModelInferRequest_ParametersEntry_DoNotUse::ModelInferRequest_ParametersEntry_DoNotUse() {}
ModelInferRequest_ParametersEntry_DoNotUse::ModelInferRequest_ParametersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ModelInferRequest_ParametersEntry_DoNotUse::MergeFrom(const ModelInferRequest_ParametersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ModelInferRequest_ParametersEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[17]);
}

// ===================================================================

class ModelInferRequest::_Internal {
 public:
};

ModelInferRequest::ModelInferRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &ModelInferRequest::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:inference.ModelInferRequest)
}
ModelInferRequest::ModelInferRequest(const ModelInferRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ModelInferRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.parameters_)*/{}
    , decltype(_impl_.inputs_){from._impl_.inputs_}
    , decltype(_impl_.outputs_){from._impl_.outputs_}
    , decltype(_impl_.raw_input_contents_){from._impl_.raw_input_contents_}
    , decltype(_impl_.model_name_){}
    , decltype(_impl_.model_version_){}
    , decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.parameters_.MergeFrom(from._impl_.parameters_);
  _impl_.model_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.model_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_model_name().empty()) {
    _this->_impl_.model_name_.Set(from._internal_model_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.model_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.model_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_model_version().empty()) {
    _this->_impl_.model_version_.Set(from._internal_model_version(), 
      _this->GetArenaForAllocation());
  }
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:inference.ModelInferRequest)
}

inline void ModelInferRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.parameters_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.inputs_){arena}
    , decltype(_impl_.outputs_){arena}
    , decltype(_impl_.raw_input_contents_){arena}
    , decltype(_impl_.model_name_){}
    , decltype(_impl_.model_version_){}
    , decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.model_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.model_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.model_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.model_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ModelInferRequest::~ModelInferRequest() {
  // @@protoc_insertion_point(destructor:inference.ModelInferRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void ModelInferRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.parameters_.Destruct();
  _impl_.parameters_.~MapField();
  _impl_.inputs_.~RepeatedPtrField();
  _impl_.outputs_.~RepeatedPtrField();
  _impl_.raw_input_contents_.~RepeatedPtrField();
  _impl_.model_name_.Destroy();
  _impl_.model_version_.Destroy();
  _impl_.id_.Destroy();
}

void ModelInferRequest::ArenaDtor(void* object) {
  ModelInferRequest* _this = reinterpret_cast< ModelInferRequest* >(object);
  _this->_impl_.parameters_.Destruct();
}
void ModelInferRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ModelInferRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.ModelInferRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parameters_.Clear();
  _impl_.inputs_.Clear();
  _impl_.outputs_.Clear();
  _impl_.raw_input_contents_.Clear();
  _impl_.model_name_.ClearToEmpty();
  _impl_.model_version_.ClearToEmpty();
  _impl_.id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelInferRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string model_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_model_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.ModelInferRequest.model_name"));
        } else
          goto handle_unusual;
        continue;
      // string model_version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_model_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.ModelInferRequest.model_version"));
        } else
          goto handle_unusual;
        continue;
      // string id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.ModelInferRequest.id"));
        } else
          goto handle_unusual;
        continue;
      // map<string, .inference.InferParameter> parameters = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.parameters_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .inference.ModelInferRequest.InferInputTensor inputs = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_inputs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .inference.ModelInferRequest.InferRequestedOutputTensor outputs = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_outputs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated bytes raw_input_contents = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_raw_input_contents();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelInferRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.ModelInferRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string model_name = 1;
  if (!this->_internal_model_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_name().data(), static_cast<int>(this->_internal_model_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.ModelInferRequest.model_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_model_name(), target);
  }

  // string model_version = 2;
  if (!this->_internal_model_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_version().data(), static_cast<int>(this->_internal_model_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.ModelInferRequest.model_version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_model_version(), target);
  }

  // string id = 3;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.ModelInferRequest.id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_id(), target);
  }

  // map<string, .inference.InferParameter> parameters = 4;
  if (!this->_internal_parameters().empty()) {
    using MapType = ::_pb::Map<std::string, ::inference::InferParameter>;
    using WireHelper = ModelInferRequest_ParametersEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_parameters();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "inference.ModelInferRequest.ParametersEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // repeated .inference.ModelInferRequest.InferInputTensor inputs = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_inputs_size()); i < n; i++) {
    const auto& repfield = this->_internal_inputs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .inference.ModelInferRequest.InferRequestedOutputTensor outputs = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_outputs_size()); i < n; i++) {
    const auto& repfield = this->_internal_outputs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated bytes raw_input_contents = 7;
  for (int i = 0, n = this->_internal_raw_input_contents_size(); i < n; i++) {
    const auto& s = this->_internal_raw_input_contents(i);
    target = stream->WriteBytes(7, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.ModelInferRequest)
  return target;
}

size_t ModelInferRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.ModelInferRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .inference.InferParameter> parameters = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_parameters_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::inference::InferParameter >::const_iterator
      it = this->_internal_parameters().begin();
      it != this->_internal_parameters().end(); ++it) {
    total_size += ModelInferRequest_ParametersEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // repeated .inference.ModelInferRequest.InferInputTensor inputs = 5;
  total_size += 1UL * this->_internal_inputs_size();
  for (const auto& msg : this->_impl_.inputs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .inference.ModelInferRequest.InferRequestedOutputTensor outputs = 6;
  total_size += 1UL * this->_internal_outputs_size();
  for (const auto& msg : this->_impl_.outputs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated bytes raw_input_contents = 7;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.raw_input_contents_.size());
  for (int i = 0, n = _impl_.raw_input_contents_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      _impl_.raw_input_contents_.Get(i));
  }

  // string model_name = 1;
  if (!this->_internal_model_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_name());
  }

  // string model_version = 2;
  if (!this->_internal_model_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_version());
  }

  // string id = 3;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelInferRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ModelInferRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelInferRequest::GetClassData() const { return &_class_data_; }


void ModelInferRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ModelInferRequest*>(&to_msg);
  auto& from = static_cast<const ModelInferRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.ModelInferRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.parameters_.MergeFrom(from._impl_.parameters_);
  _this->_impl_.inputs_.MergeFrom(from._impl_.inputs_);
  _this->_impl_.outputs_.MergeFrom(from._impl_.outputs_);
  _this->_impl_.raw_input_contents_.MergeFrom(from._impl_.raw_input_contents_);
  if (!from._internal_model_name().empty()) {
    _this->_internal_set_model_name(from._internal_model_name());
  }
  if (!from._internal_model_version().empty()) {
    _this->_internal_set_model_version(from._internal_model_version());
  }
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelInferRequest::CopyFrom(const ModelInferRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.ModelInferRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelInferRequest::IsInitialized() const {
  return true;
}

void ModelInferRequest::InternalSwap(ModelInferRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.parameters_.InternalSwap(&other->_impl_.parameters_);
  _impl_.inputs_.InternalSwap(&other->_impl_.inputs_);
  _impl_.outputs_.InternalSwap(&other->_impl_.outputs_);
  _impl_.raw_input_contents_.InternalSwap(&other->_impl_.raw_input_contents_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.model_name_, lhs_arena,
      &other->_impl_.model_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.model_version_, lhs_arena,
      &other->_impl_.model_version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelInferRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[18]);
}

// ===================================================================

ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse::ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse() {}
ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse::ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse::MergeFrom(const ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[19]);
}

// ===================================================================

class ModelInferResponse_InferOutputTensor::_Internal {
 public:
  static const ::inference::InferTensorContents& contents(const ModelInferResponse_InferOutputTensor* msg);
};

const ::inference::InferTensorContents&
ModelInferResponse_InferOutputTensor::_Internal::contents(const ModelInferResponse_InferOutputTensor* msg) {
  return *msg->_impl_.contents_;
}
ModelInferResponse_InferOutputTensor::ModelInferResponse_InferOutputTensor(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &ModelInferResponse_InferOutputTensor::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:inference.ModelInferResponse.InferOutputTensor)
}
ModelInferResponse_InferOutputTensor::ModelInferResponse_InferOutputTensor(const ModelInferResponse_InferOutputTensor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ModelInferResponse_InferOutputTensor* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.shape_){from._impl_.shape_}
    , /*decltype(_impl_._shape_cached_byte_size_)*/{0}
    , /*decltype(_impl_.parameters_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.datatype_){}
    , decltype(_impl_.contents_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.parameters_.MergeFrom(from._impl_.parameters_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.datatype_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.datatype_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_datatype().empty()) {
    _this->_impl_.datatype_.Set(from._internal_datatype(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_contents()) {
    _this->_impl_.contents_ = new ::inference::InferTensorContents(*from._impl_.contents_);
  }
  // @@protoc_insertion_point(copy_constructor:inference.ModelInferResponse.InferOutputTensor)
}

inline void ModelInferResponse_InferOutputTensor::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.shape_){arena}
    , /*decltype(_impl_._shape_cached_byte_size_)*/{0}
    , /*decltype(_impl_.parameters_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.name_){}
    , decltype(_impl_.datatype_){}
    , decltype(_impl_.contents_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.datatype_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.datatype_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ModelInferResponse_InferOutputTensor::~ModelInferResponse_InferOutputTensor() {
  // @@protoc_insertion_point(destructor:inference.ModelInferResponse.InferOutputTensor)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void ModelInferResponse_InferOutputTensor::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.shape_.~RepeatedField();
  _impl_.parameters_.Destruct();
  _impl_.parameters_.~MapField();
  _impl_.name_.Destroy();
  _impl_.datatype_.Destroy();
  if (this != internal_default_instance()) delete _impl_.contents_;
}

void ModelInferResponse_InferOutputTensor::ArenaDtor(void* object) {
  ModelInferResponse_InferOutputTensor* _this = reinterpret_cast< ModelInferResponse_InferOutputTensor* >(object);
  _this->_impl_.parameters_.Destruct();
}
void ModelInferResponse_InferOutputTensor::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ModelInferResponse_InferOutputTensor::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.ModelInferResponse.InferOutputTensor)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.shape_.Clear();
  _impl_.parameters_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.datatype_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.contents_ != nullptr) {
    delete _impl_.contents_;
  }
  _impl_.contents_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelInferResponse_InferOutputTensor::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.ModelInferResponse.InferOutputTensor.name"));
        } else
          goto handle_unusual;
        continue;
      // string datatype = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_datatype();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.ModelInferResponse.InferOutputTensor.datatype"));
        } else
          goto handle_unusual;
        continue;
      // repeated int64 shape = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_shape(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 24) {
          _internal_add_shape(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, .inference.InferParameter> parameters = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.parameters_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .inference.InferTensorContents contents = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_contents(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelInferResponse_InferOutputTensor::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.ModelInferResponse.InferOutputTensor)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.ModelInferResponse.InferOutputTensor.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string datatype = 2;
  if (!this->_internal_datatype().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_datatype().data(), static_cast<int>(this->_internal_datatype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.ModelInferResponse.InferOutputTensor.datatype");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_datatype(), target);
  }

  // repeated int64 shape = 3;
  {
    int byte_size = _impl_._shape_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          3, _internal_shape(), byte_size, target);
    }
  }

  // map<string, .inference.InferParameter> parameters = 4;
  if (!this->_internal_parameters().empty()) {
    using MapType = ::_pb::Map<std::string, ::inference::InferParameter>;
    using WireHelper = ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_parameters();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "inference.ModelInferResponse.InferOutputTensor.ParametersEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // .inference.InferTensorContents contents = 5;
  if (this->_internal_has_contents()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::contents(this),
        _Internal::contents(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.ModelInferResponse.InferOutputTensor)
  return target;
}

size_t ModelInferResponse_InferOutputTensor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.ModelInferResponse.InferOutputTensor)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 shape = 3;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.shape_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._shape_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // map<string, .inference.InferParameter> parameters = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_parameters_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::inference::InferParameter >::const_iterator
      it = this->_internal_parameters().begin();
      it != this->_internal_parameters().end(); ++it) {
    total_size += ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string datatype = 2;
  if (!this->_internal_datatype().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_datatype());
  }

  // .inference.InferTensorContents contents = 5;
  if (this->_internal_has_contents()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.contents_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelInferResponse_InferOutputTensor::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ModelInferResponse_InferOutputTensor::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelInferResponse_InferOutputTensor::GetClassData() const { return &_class_data_; }


void ModelInferResponse_InferOutputTensor::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ModelInferResponse_InferOutputTensor*>(&to_msg);
  auto& from = static_cast<const ModelInferResponse_InferOutputTensor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.ModelInferResponse.InferOutputTensor)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.shape_.MergeFrom(from._impl_.shape_);
  _this->_impl_.parameters_.MergeFrom(from._impl_.parameters_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_datatype().empty()) {
    _this->_internal_set_datatype(from._internal_datatype());
  }
  if (from._internal_has_contents()) {
    _this->_internal_mutable_contents()->::inference::InferTensorContents::MergeFrom(
        from._internal_contents());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelInferResponse_InferOutputTensor::CopyFrom(const ModelInferResponse_InferOutputTensor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.ModelInferResponse.InferOutputTensor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelInferResponse_InferOutputTensor::IsInitialized() const {
  return true;
}

void ModelInferResponse_InferOutputTensor::InternalSwap(ModelInferResponse_InferOutputTensor* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.shape_.InternalSwap(&other->_impl_.shape_);
  _impl_.parameters_.InternalSwap(&other->_impl_.parameters_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.datatype_, lhs_arena,
      &other->_impl_.datatype_, rhs_arena
  );
  swap(_impl_.contents_, other->_impl_.contents_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelInferResponse_InferOutputTensor::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[20]);
}

// ===================================================================

ModelInferResponse_ParametersEntry_DoNotUse::ModelInferResponse_ParametersEntry_DoNotUse() {}
ModelInferResponse_ParametersEntry_DoNotUse::ModelInferResponse_ParametersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ModelInferResponse_ParametersEntry_DoNotUse::MergeFrom(const ModelInferResponse_ParametersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ModelInferResponse_ParametersEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[21]);
}

// ===================================================================

class ModelInferResponse::_Internal {
 public:
};

ModelInferResponse::ModelInferResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &ModelInferResponse::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:inference.ModelInferResponse)
}
ModelInferResponse::ModelInferResponse(const ModelInferResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ModelInferResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.parameters_)*/{}
    , decltype(_impl_.outputs_){from._impl_.outputs_}
    , decltype(_impl_.raw_output_contents_){from._impl_.raw_output_contents_}
    , decltype(_impl_.model_name_){}
    , decltype(_impl_.model_version_){}
    , decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.parameters_.MergeFrom(from._impl_.parameters_);
  _impl_.model_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.model_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_model_name().empty()) {
    _this->_impl_.model_name_.Set(from._internal_model_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.model_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.model_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_model_version().empty()) {
    _this->_impl_.model_version_.Set(from._internal_model_version(), 
      _this->GetArenaForAllocation());
  }
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:inference.ModelInferResponse)
}

inline void ModelInferResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.parameters_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.outputs_){arena}
    , decltype(_impl_.raw_output_contents_){arena}
    , decltype(_impl_.model_name_){}
    , decltype(_impl_.model_version_){}
    , decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.model_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.model_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.model_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.model_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ModelInferResponse::~ModelInferResponse() {
  // @@protoc_insertion_point(destructor:inference.ModelInferResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void ModelInferResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.parameters_.Destruct();
  _impl_.parameters_.~MapField();
  _impl_.outputs_.~RepeatedPtrField();
  _impl_.raw_output_contents_.~RepeatedPtrField();
  _impl_.model_name_.Destroy();
  _impl_.model_version_.Destroy();
  _impl_.id_.Destroy();
}

void ModelInferResponse::ArenaDtor(void* object) {
  ModelInferResponse* _this = reinterpret_cast< ModelInferResponse* >(object);
  _this->_impl_.parameters_.Destruct();
}
void ModelInferResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ModelInferResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.ModelInferResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parameters_.Clear();
  _impl_.outputs_.Clear();
  _impl_.raw_output_contents_.Clear();
  _impl_.model_name_.ClearToEmpty();
  _impl_.model_version_.ClearToEmpty();
  _impl_.id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelInferResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string model_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_model_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.ModelInferResponse.model_name"));
        } else
          goto handle_unusual;
        continue;
      // string model_version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_model_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.ModelInferResponse.model_version"));
        } else
          goto handle_unusual;
        continue;
      // string id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.ModelInferResponse.id"));
        } else
          goto handle_unusual;
        continue;
      // map<string, .inference.InferParameter> parameters = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.parameters_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .inference.ModelInferResponse.InferOutputTensor outputs = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_outputs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated bytes raw_output_contents = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_raw_output_contents();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelInferResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.ModelInferResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string model_name = 1;
  if (!this->_internal_model_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_name().data(), static_cast<int>(this->_internal_model_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.ModelInferResponse.model_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_model_name(), target);
  }

  // string model_version = 2;
  if (!this->_internal_model_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_version().data(), static_cast<int>(this->_internal_model_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.ModelInferResponse.model_version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_model_version(), target);
  }

  // string id = 3;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.ModelInferResponse.id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_id(), target);
  }

  // map<string, .inference.InferParameter> parameters = 4;
  if (!this->_internal_parameters().empty()) {
    using MapType = ::_pb::Map<std::string, ::inference::InferParameter>;
    using WireHelper = ModelInferResponse_ParametersEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_parameters();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "inference.ModelInferResponse.ParametersEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // repeated .inference.ModelInferResponse.InferOutputTensor outputs = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_outputs_size()); i < n; i++) {
    const auto& repfield = this->_internal_outputs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated bytes raw_output_contents = 6;
  for (int i = 0, n = this->_internal_raw_output_contents_size(); i < n; i++) {
    const auto& s = this->_internal_raw_output_contents(i);
    target = stream->WriteBytes(6, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.ModelInferResponse)
  return target;
}

size_t ModelInferResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.ModelInferResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .inference.InferParameter> parameters = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_parameters_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::inference::InferParameter >::const_iterator
      it = this->_internal_parameters().begin();
      it != this->_internal_parameters().end(); ++it) {
    total_size += ModelInferResponse_ParametersEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // repeated .inference.ModelInferResponse.InferOutputTensor outputs = 5;
  total_size += 1UL * this->_internal_outputs_size();
  for (const auto& msg : this->_impl_.outputs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated bytes raw_output_contents = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.raw_output_contents_.size());
  for (int i = 0, n = _impl_.raw_output_contents_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      _impl_.raw_output_contents_.Get(i));
  }

  // string model_name = 1;
  if (!this->_internal_model_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_name());
  }

  // string model_version = 2;
  if (!this->_internal_model_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_version());
  }

  // string id = 3;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelInferResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ModelInferResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelInferResponse::GetClassData() const { return &_class_data_; }


void ModelInferResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ModelInferResponse*>(&to_msg);
  auto& from = static_cast<const ModelInferResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.ModelInferResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.parameters_.MergeFrom(from._impl_.parameters_);
  _this->_impl_.outputs_.MergeFrom(from._impl_.outputs_);
  _this->_impl_.raw_output_contents_.MergeFrom(from._impl_.raw_output_contents_);
  if (!from._internal_model_name().empty()) {
    _this->_internal_set_model_name(from._internal_model_name());
  }
  if (!from._internal_model_version().empty()) {
    _this->_internal_set_model_version(from._internal_model_version());
  }
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelInferResponse::CopyFrom(const ModelInferResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.ModelInferResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelInferResponse::IsInitialized() const {
  return true;
}

void ModelInferResponse::InternalSwap(ModelInferResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.parameters_.InternalSwap(&other->_impl_.parameters_);
  _impl_.outputs_.InternalSwap(&other->_impl_.outputs_);
  _impl_.raw_output_contents_.InternalSwap(&other->_impl_.raw_output_contents_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.model_name_, lhs_arena,
      &other->_impl_.model_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.model_version_, lhs_arena,
      &other->_impl_.model_version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelInferResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[22]);
}

// ===================================================================

class ModelStreamInferResponse::_Internal {
 public:
  static const ::inference::ModelInferResponse& infer_response(const ModelStreamInferResponse* msg);
};

const ::inference::ModelInferResponse&
ModelStreamInferResponse::_Internal::infer_response(const ModelStreamInferResponse* msg) {
  return *msg->_impl_.infer_response_;
}
ModelStreamInferResponse::ModelStreamInferResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:inference.ModelStreamInferResponse)
}
ModelStreamInferResponse::ModelStreamInferResponse(const ModelStreamInferResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ModelStreamInferResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_message_){}
    , decltype(_impl_.infer_response_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_message().empty()) {
    _this->_impl_.error_message_.Set(from._internal_error_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_infer_response()) {
    _this->_impl_.infer_response_ = new ::inference::ModelInferResponse(*from._impl_.infer_response_);
  }
  // @@protoc_insertion_point(copy_constructor:inference.ModelStreamInferResponse)
}

inline void ModelStreamInferResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_message_){}
    , decltype(_impl_.infer_response_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ModelStreamInferResponse::~ModelStreamInferResponse() {
  // @@protoc_insertion_point(destructor:inference.ModelStreamInferResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModelStreamInferResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.error_message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.infer_response_;
}

void ModelStreamInferResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ModelStreamInferResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.ModelStreamInferResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.infer_response_ != nullptr) {
    delete _impl_.infer_response_;
  }
  _impl_.infer_response_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelStreamInferResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string error_message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_error_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.ModelStreamInferResponse.error_message"));
        } else
          goto handle_unusual;
        continue;
      // .inference.ModelInferResponse infer_response = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_infer_response(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelStreamInferResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.ModelStreamInferResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string error_message = 1;
  if (!this->_internal_error_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.ModelStreamInferResponse.error_message");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_error_message(), target);
  }

  // .inference.ModelInferResponse infer_response = 2;
  if (this->_internal_has_infer_response()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::infer_response(this),
        _Internal::infer_response(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.ModelStreamInferResponse)
  return target;
}

size_t ModelStreamInferResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.ModelStreamInferResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_message = 1;
  if (!this->_internal_error_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_message());
  }

  // .inference.ModelInferResponse infer_response = 2;
  if (this->_internal_has_infer_response()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.infer_response_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelStreamInferResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ModelStreamInferResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelStreamInferResponse::GetClassData() const { return &_class_data_; }


void ModelStreamInferResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ModelStreamInferResponse*>(&to_msg);
  auto& from = static_cast<const ModelStreamInferResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.ModelStreamInferResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_has_infer_response()) {
    _this->_internal_mutable_infer_response()->::inference::ModelInferResponse::MergeFrom(
        from._internal_infer_response());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelStreamInferResponse::CopyFrom(const ModelStreamInferResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.ModelStreamInferResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelStreamInferResponse::IsInitialized() const {
  return true;
}

void ModelStreamInferResponse::InternalSwap(ModelStreamInferResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_message_, lhs_arena,
      &other->_impl_.error_message_, rhs_arena
  );
  swap(_impl_.infer_response_, other->_impl_.infer_response_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelStreamInferResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[23]);
}

// ===================================================================

class ModelConfigRequest::_Internal {
 public:
};

ModelConfigRequest::ModelConfigRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:inference.ModelConfigRequest)
}
ModelConfigRequest::ModelConfigRequest(const ModelConfigRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ModelConfigRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.version_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    _this->_impl_.version_.Set(from._internal_version(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:inference.ModelConfigRequest)
}

inline void ModelConfigRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.version_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ModelConfigRequest::~ModelConfigRequest() {
  // @@protoc_insertion_point(destructor:inference.ModelConfigRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModelConfigRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.version_.Destroy();
}

void ModelConfigRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ModelConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.ModelConfigRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.version_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelConfigRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.ModelConfigRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // string version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.ModelConfigRequest.version"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelConfigRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.ModelConfigRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.ModelConfigRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.ModelConfigRequest.version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.ModelConfigRequest)
  return target;
}

size_t ModelConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.ModelConfigRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelConfigRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ModelConfigRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelConfigRequest::GetClassData() const { return &_class_data_; }


void ModelConfigRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ModelConfigRequest*>(&to_msg);
  auto& from = static_cast<const ModelConfigRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.ModelConfigRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelConfigRequest::CopyFrom(const ModelConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.ModelConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelConfigRequest::IsInitialized() const {
  return true;
}

void ModelConfigRequest::InternalSwap(ModelConfigRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.version_, lhs_arena,
      &other->_impl_.version_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelConfigRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[24]);
}

// ===================================================================

class ModelConfigResponse::_Internal {
 public:
  static const ::inference::ModelConfig& config(const ModelConfigResponse* msg);
};

const ::inference::ModelConfig&
ModelConfigResponse::_Internal::config(const ModelConfigResponse* msg) {
  return *msg->_impl_.config_;
}
void ModelConfigResponse::clear_config() {
  if (GetArenaForAllocation() == nullptr && _impl_.config_ != nullptr) {
    delete _impl_.config_;
  }
  _impl_.config_ = nullptr;
}
ModelConfigResponse::ModelConfigResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:inference.ModelConfigResponse)
}
ModelConfigResponse::ModelConfigResponse(const ModelConfigResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ModelConfigResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.config_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_config()) {
    _this->_impl_.config_ = new ::inference::ModelConfig(*from._impl_.config_);
  }
  // @@protoc_insertion_point(copy_constructor:inference.ModelConfigResponse)
}

inline void ModelConfigResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.config_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ModelConfigResponse::~ModelConfigResponse() {
  // @@protoc_insertion_point(destructor:inference.ModelConfigResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModelConfigResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.config_;
}

void ModelConfigResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ModelConfigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.ModelConfigResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.config_ != nullptr) {
    delete _impl_.config_;
  }
  _impl_.config_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelConfigResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .inference.ModelConfig config = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelConfigResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.ModelConfigResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .inference.ModelConfig config = 1;
  if (this->_internal_has_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::config(this),
        _Internal::config(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.ModelConfigResponse)
  return target;
}

size_t ModelConfigResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.ModelConfigResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .inference.ModelConfig config = 1;
  if (this->_internal_has_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.config_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelConfigResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ModelConfigResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelConfigResponse::GetClassData() const { return &_class_data_; }


void ModelConfigResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ModelConfigResponse*>(&to_msg);
  auto& from = static_cast<const ModelConfigResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.ModelConfigResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_config()) {
    _this->_internal_mutable_config()->::inference::ModelConfig::MergeFrom(
        from._internal_config());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelConfigResponse::CopyFrom(const ModelConfigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.ModelConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelConfigResponse::IsInitialized() const {
  return true;
}

void ModelConfigResponse::InternalSwap(ModelConfigResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.config_, other->_impl_.config_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelConfigResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[25]);
}

// ===================================================================

class ModelStatisticsRequest::_Internal {
 public:
};

ModelStatisticsRequest::ModelStatisticsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:inference.ModelStatisticsRequest)
}
ModelStatisticsRequest::ModelStatisticsRequest(const ModelStatisticsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ModelStatisticsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.version_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    _this->_impl_.version_.Set(from._internal_version(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:inference.ModelStatisticsRequest)
}

inline void ModelStatisticsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.version_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ModelStatisticsRequest::~ModelStatisticsRequest() {
  // @@protoc_insertion_point(destructor:inference.ModelStatisticsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModelStatisticsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.version_.Destroy();
}

void ModelStatisticsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ModelStatisticsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.ModelStatisticsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.version_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelStatisticsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.ModelStatisticsRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // string version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.ModelStatisticsRequest.version"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelStatisticsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.ModelStatisticsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.ModelStatisticsRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.ModelStatisticsRequest.version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.ModelStatisticsRequest)
  return target;
}

size_t ModelStatisticsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.ModelStatisticsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelStatisticsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ModelStatisticsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelStatisticsRequest::GetClassData() const { return &_class_data_; }


void ModelStatisticsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ModelStatisticsRequest*>(&to_msg);
  auto& from = static_cast<const ModelStatisticsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.ModelStatisticsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelStatisticsRequest::CopyFrom(const ModelStatisticsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.ModelStatisticsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelStatisticsRequest::IsInitialized() const {
  return true;
}

void ModelStatisticsRequest::InternalSwap(ModelStatisticsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.version_, lhs_arena,
      &other->_impl_.version_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelStatisticsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[26]);
}

// ===================================================================

class StatisticDuration::_Internal {
 public:
};

StatisticDuration::StatisticDuration(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:inference.StatisticDuration)
}
StatisticDuration::StatisticDuration(const StatisticDuration& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StatisticDuration* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.count_){}
    , decltype(_impl_.ns_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.count_, &from._impl_.count_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.ns_) -
    reinterpret_cast<char*>(&_impl_.count_)) + sizeof(_impl_.ns_));
  // @@protoc_insertion_point(copy_constructor:inference.StatisticDuration)
}

inline void StatisticDuration::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.count_){uint64_t{0u}}
    , decltype(_impl_.ns_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

StatisticDuration::~StatisticDuration() {
  // @@protoc_insertion_point(destructor:inference.StatisticDuration)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StatisticDuration::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void StatisticDuration::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StatisticDuration::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.StatisticDuration)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.ns_) -
      reinterpret_cast<char*>(&_impl_.count_)) + sizeof(_impl_.ns_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StatisticDuration::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 count = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 ns = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.ns_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StatisticDuration::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.StatisticDuration)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 count = 1;
  if (this->_internal_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_count(), target);
  }

  // uint64 ns = 2;
  if (this->_internal_ns() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_ns(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.StatisticDuration)
  return target;
}

size_t StatisticDuration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.StatisticDuration)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 count = 1;
  if (this->_internal_count() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_count());
  }

  // uint64 ns = 2;
  if (this->_internal_ns() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_ns());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StatisticDuration::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StatisticDuration::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StatisticDuration::GetClassData() const { return &_class_data_; }


void StatisticDuration::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StatisticDuration*>(&to_msg);
  auto& from = static_cast<const StatisticDuration&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.StatisticDuration)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_count() != 0) {
    _this->_internal_set_count(from._internal_count());
  }
  if (from._internal_ns() != 0) {
    _this->_internal_set_ns(from._internal_ns());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StatisticDuration::CopyFrom(const StatisticDuration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.StatisticDuration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatisticDuration::IsInitialized() const {
  return true;
}

void StatisticDuration::InternalSwap(StatisticDuration* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StatisticDuration, _impl_.ns_)
      + sizeof(StatisticDuration::_impl_.ns_)
      - PROTOBUF_FIELD_OFFSET(StatisticDuration, _impl_.count_)>(
          reinterpret_cast<char*>(&_impl_.count_),
          reinterpret_cast<char*>(&other->_impl_.count_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StatisticDuration::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[27]);
}

// ===================================================================

class InferStatistics::_Internal {
 public:
  static const ::inference::StatisticDuration& success(const InferStatistics* msg);
  static const ::inference::StatisticDuration& fail(const InferStatistics* msg);
  static const ::inference::StatisticDuration& queue(const InferStatistics* msg);
  static const ::inference::StatisticDuration& compute_input(const InferStatistics* msg);
  static const ::inference::StatisticDuration& compute_infer(const InferStatistics* msg);
  static const ::inference::StatisticDuration& compute_output(const InferStatistics* msg);
  static const ::inference::StatisticDuration& cache_hit(const InferStatistics* msg);
  static const ::inference::StatisticDuration& cache_miss(const InferStatistics* msg);
};

const ::inference::StatisticDuration&
InferStatistics::_Internal::success(const InferStatistics* msg) {
  return *msg->_impl_.success_;
}
const ::inference::StatisticDuration&
InferStatistics::_Internal::fail(const InferStatistics* msg) {
  return *msg->_impl_.fail_;
}
const ::inference::StatisticDuration&
InferStatistics::_Internal::queue(const InferStatistics* msg) {
  return *msg->_impl_.queue_;
}
const ::inference::StatisticDuration&
InferStatistics::_Internal::compute_input(const InferStatistics* msg) {
  return *msg->_impl_.compute_input_;
}
const ::inference::StatisticDuration&
InferStatistics::_Internal::compute_infer(const InferStatistics* msg) {
  return *msg->_impl_.compute_infer_;
}
const ::inference::StatisticDuration&
InferStatistics::_Internal::compute_output(const InferStatistics* msg) {
  return *msg->_impl_.compute_output_;
}
const ::inference::StatisticDuration&
InferStatistics::_Internal::cache_hit(const InferStatistics* msg) {
  return *msg->_impl_.cache_hit_;
}
const ::inference::StatisticDuration&
InferStatistics::_Internal::cache_miss(const InferStatistics* msg) {
  return *msg->_impl_.cache_miss_;
}
InferStatistics::InferStatistics(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:inference.InferStatistics)
}
InferStatistics::InferStatistics(const InferStatistics& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InferStatistics* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.success_){nullptr}
    , decltype(_impl_.fail_){nullptr}
    , decltype(_impl_.queue_){nullptr}
    , decltype(_impl_.compute_input_){nullptr}
    , decltype(_impl_.compute_infer_){nullptr}
    , decltype(_impl_.compute_output_){nullptr}
    , decltype(_impl_.cache_hit_){nullptr}
    , decltype(_impl_.cache_miss_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_success()) {
    _this->_impl_.success_ = new ::inference::StatisticDuration(*from._impl_.success_);
  }
  if (from._internal_has_fail()) {
    _this->_impl_.fail_ = new ::inference::StatisticDuration(*from._impl_.fail_);
  }
  if (from._internal_has_queue()) {
    _this->_impl_.queue_ = new ::inference::StatisticDuration(*from._impl_.queue_);
  }
  if (from._internal_has_compute_input()) {
    _this->_impl_.compute_input_ = new ::inference::StatisticDuration(*from._impl_.compute_input_);
  }
  if (from._internal_has_compute_infer()) {
    _this->_impl_.compute_infer_ = new ::inference::StatisticDuration(*from._impl_.compute_infer_);
  }
  if (from._internal_has_compute_output()) {
    _this->_impl_.compute_output_ = new ::inference::StatisticDuration(*from._impl_.compute_output_);
  }
  if (from._internal_has_cache_hit()) {
    _this->_impl_.cache_hit_ = new ::inference::StatisticDuration(*from._impl_.cache_hit_);
  }
  if (from._internal_has_cache_miss()) {
    _this->_impl_.cache_miss_ = new ::inference::StatisticDuration(*from._impl_.cache_miss_);
  }
  // @@protoc_insertion_point(copy_constructor:inference.InferStatistics)
}

inline void InferStatistics::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.success_){nullptr}
    , decltype(_impl_.fail_){nullptr}
    , decltype(_impl_.queue_){nullptr}
    , decltype(_impl_.compute_input_){nullptr}
    , decltype(_impl_.compute_infer_){nullptr}
    , decltype(_impl_.compute_output_){nullptr}
    , decltype(_impl_.cache_hit_){nullptr}
    , decltype(_impl_.cache_miss_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

InferStatistics::~InferStatistics() {
  // @@protoc_insertion_point(destructor:inference.InferStatistics)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InferStatistics::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.success_;
  if (this != internal_default_instance()) delete _impl_.fail_;
  if (this != internal_default_instance()) delete _impl_.queue_;
  if (this != internal_default_instance()) delete _impl_.compute_input_;
  if (this != internal_default_instance()) delete _impl_.compute_infer_;
  if (this != internal_default_instance()) delete _impl_.compute_output_;
  if (this != internal_default_instance()) delete _impl_.cache_hit_;
  if (this != internal_default_instance()) delete _impl_.cache_miss_;
}

void InferStatistics::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InferStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.InferStatistics)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.success_ != nullptr) {
    delete _impl_.success_;
  }
  _impl_.success_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.fail_ != nullptr) {
    delete _impl_.fail_;
  }
  _impl_.fail_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.queue_ != nullptr) {
    delete _impl_.queue_;
  }
  _impl_.queue_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.compute_input_ != nullptr) {
    delete _impl_.compute_input_;
  }
  _impl_.compute_input_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.compute_infer_ != nullptr) {
    delete _impl_.compute_infer_;
  }
  _impl_.compute_infer_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.compute_output_ != nullptr) {
    delete _impl_.compute_output_;
  }
  _impl_.compute_output_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.cache_hit_ != nullptr) {
    delete _impl_.cache_hit_;
  }
  _impl_.cache_hit_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.cache_miss_ != nullptr) {
    delete _impl_.cache_miss_;
  }
  _impl_.cache_miss_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InferStatistics::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .inference.StatisticDuration success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_success(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .inference.StatisticDuration fail = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_fail(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .inference.StatisticDuration queue = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_queue(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .inference.StatisticDuration compute_input = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_compute_input(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .inference.StatisticDuration compute_infer = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_compute_infer(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .inference.StatisticDuration compute_output = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_compute_output(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .inference.StatisticDuration cache_hit = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_cache_hit(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .inference.StatisticDuration cache_miss = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_cache_miss(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InferStatistics::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.InferStatistics)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .inference.StatisticDuration success = 1;
  if (this->_internal_has_success()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::success(this),
        _Internal::success(this).GetCachedSize(), target, stream);
  }

  // .inference.StatisticDuration fail = 2;
  if (this->_internal_has_fail()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::fail(this),
        _Internal::fail(this).GetCachedSize(), target, stream);
  }

  // .inference.StatisticDuration queue = 3;
  if (this->_internal_has_queue()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::queue(this),
        _Internal::queue(this).GetCachedSize(), target, stream);
  }

  // .inference.StatisticDuration compute_input = 4;
  if (this->_internal_has_compute_input()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::compute_input(this),
        _Internal::compute_input(this).GetCachedSize(), target, stream);
  }

  // .inference.StatisticDuration compute_infer = 5;
  if (this->_internal_has_compute_infer()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::compute_infer(this),
        _Internal::compute_infer(this).GetCachedSize(), target, stream);
  }

  // .inference.StatisticDuration compute_output = 6;
  if (this->_internal_has_compute_output()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::compute_output(this),
        _Internal::compute_output(this).GetCachedSize(), target, stream);
  }

  // .inference.StatisticDuration cache_hit = 7;
  if (this->_internal_has_cache_hit()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::cache_hit(this),
        _Internal::cache_hit(this).GetCachedSize(), target, stream);
  }

  // .inference.StatisticDuration cache_miss = 8;
  if (this->_internal_has_cache_miss()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::cache_miss(this),
        _Internal::cache_miss(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.InferStatistics)
  return target;
}

size_t InferStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.InferStatistics)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .inference.StatisticDuration success = 1;
  if (this->_internal_has_success()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.success_);
  }

  // .inference.StatisticDuration fail = 2;
  if (this->_internal_has_fail()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.fail_);
  }

  // .inference.StatisticDuration queue = 3;
  if (this->_internal_has_queue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.queue_);
  }

  // .inference.StatisticDuration compute_input = 4;
  if (this->_internal_has_compute_input()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.compute_input_);
  }

  // .inference.StatisticDuration compute_infer = 5;
  if (this->_internal_has_compute_infer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.compute_infer_);
  }

  // .inference.StatisticDuration compute_output = 6;
  if (this->_internal_has_compute_output()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.compute_output_);
  }

  // .inference.StatisticDuration cache_hit = 7;
  if (this->_internal_has_cache_hit()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.cache_hit_);
  }

  // .inference.StatisticDuration cache_miss = 8;
  if (this->_internal_has_cache_miss()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.cache_miss_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InferStatistics::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InferStatistics::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InferStatistics::GetClassData() const { return &_class_data_; }


void InferStatistics::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InferStatistics*>(&to_msg);
  auto& from = static_cast<const InferStatistics&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.InferStatistics)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_success()) {
    _this->_internal_mutable_success()->::inference::StatisticDuration::MergeFrom(
        from._internal_success());
  }
  if (from._internal_has_fail()) {
    _this->_internal_mutable_fail()->::inference::StatisticDuration::MergeFrom(
        from._internal_fail());
  }
  if (from._internal_has_queue()) {
    _this->_internal_mutable_queue()->::inference::StatisticDuration::MergeFrom(
        from._internal_queue());
  }
  if (from._internal_has_compute_input()) {
    _this->_internal_mutable_compute_input()->::inference::StatisticDuration::MergeFrom(
        from._internal_compute_input());
  }
  if (from._internal_has_compute_infer()) {
    _this->_internal_mutable_compute_infer()->::inference::StatisticDuration::MergeFrom(
        from._internal_compute_infer());
  }
  if (from._internal_has_compute_output()) {
    _this->_internal_mutable_compute_output()->::inference::StatisticDuration::MergeFrom(
        from._internal_compute_output());
  }
  if (from._internal_has_cache_hit()) {
    _this->_internal_mutable_cache_hit()->::inference::StatisticDuration::MergeFrom(
        from._internal_cache_hit());
  }
  if (from._internal_has_cache_miss()) {
    _this->_internal_mutable_cache_miss()->::inference::StatisticDuration::MergeFrom(
        from._internal_cache_miss());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InferStatistics::CopyFrom(const InferStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.InferStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InferStatistics::IsInitialized() const {
  return true;
}

void InferStatistics::InternalSwap(InferStatistics* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InferStatistics, _impl_.cache_miss_)
      + sizeof(InferStatistics::_impl_.cache_miss_)
      - PROTOBUF_FIELD_OFFSET(InferStatistics, _impl_.success_)>(
          reinterpret_cast<char*>(&_impl_.success_),
          reinterpret_cast<char*>(&other->_impl_.success_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InferStatistics::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[28]);
}

// ===================================================================

class InferBatchStatistics::_Internal {
 public:
  static const ::inference::StatisticDuration& compute_input(const InferBatchStatistics* msg);
  static const ::inference::StatisticDuration& compute_infer(const InferBatchStatistics* msg);
  static const ::inference::StatisticDuration& compute_output(const InferBatchStatistics* msg);
};

const ::inference::StatisticDuration&
InferBatchStatistics::_Internal::compute_input(const InferBatchStatistics* msg) {
  return *msg->_impl_.compute_input_;
}
const ::inference::StatisticDuration&
InferBatchStatistics::_Internal::compute_infer(const InferBatchStatistics* msg) {
  return *msg->_impl_.compute_infer_;
}
const ::inference::StatisticDuration&
InferBatchStatistics::_Internal::compute_output(const InferBatchStatistics* msg) {
  return *msg->_impl_.compute_output_;
}
InferBatchStatistics::InferBatchStatistics(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:inference.InferBatchStatistics)
}
InferBatchStatistics::InferBatchStatistics(const InferBatchStatistics& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InferBatchStatistics* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.compute_input_){nullptr}
    , decltype(_impl_.compute_infer_){nullptr}
    , decltype(_impl_.compute_output_){nullptr}
    , decltype(_impl_.batch_size_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_compute_input()) {
    _this->_impl_.compute_input_ = new ::inference::StatisticDuration(*from._impl_.compute_input_);
  }
  if (from._internal_has_compute_infer()) {
    _this->_impl_.compute_infer_ = new ::inference::StatisticDuration(*from._impl_.compute_infer_);
  }
  if (from._internal_has_compute_output()) {
    _this->_impl_.compute_output_ = new ::inference::StatisticDuration(*from._impl_.compute_output_);
  }
  _this->_impl_.batch_size_ = from._impl_.batch_size_;
  // @@protoc_insertion_point(copy_constructor:inference.InferBatchStatistics)
}

inline void InferBatchStatistics::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.compute_input_){nullptr}
    , decltype(_impl_.compute_infer_){nullptr}
    , decltype(_impl_.compute_output_){nullptr}
    , decltype(_impl_.batch_size_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

InferBatchStatistics::~InferBatchStatistics() {
  // @@protoc_insertion_point(destructor:inference.InferBatchStatistics)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InferBatchStatistics::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.compute_input_;
  if (this != internal_default_instance()) delete _impl_.compute_infer_;
  if (this != internal_default_instance()) delete _impl_.compute_output_;
}

void InferBatchStatistics::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InferBatchStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.InferBatchStatistics)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.compute_input_ != nullptr) {
    delete _impl_.compute_input_;
  }
  _impl_.compute_input_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.compute_infer_ != nullptr) {
    delete _impl_.compute_infer_;
  }
  _impl_.compute_infer_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.compute_output_ != nullptr) {
    delete _impl_.compute_output_;
  }
  _impl_.compute_output_ = nullptr;
  _impl_.batch_size_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InferBatchStatistics::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 batch_size = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.batch_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .inference.StatisticDuration compute_input = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_compute_input(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .inference.StatisticDuration compute_infer = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_compute_infer(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .inference.StatisticDuration compute_output = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_compute_output(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InferBatchStatistics::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.InferBatchStatistics)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 batch_size = 1;
  if (this->_internal_batch_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_batch_size(), target);
  }

  // .inference.StatisticDuration compute_input = 2;
  if (this->_internal_has_compute_input()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::compute_input(this),
        _Internal::compute_input(this).GetCachedSize(), target, stream);
  }

  // .inference.StatisticDuration compute_infer = 3;
  if (this->_internal_has_compute_infer()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::compute_infer(this),
        _Internal::compute_infer(this).GetCachedSize(), target, stream);
  }

  // .inference.StatisticDuration compute_output = 4;
  if (this->_internal_has_compute_output()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::compute_output(this),
        _Internal::compute_output(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.InferBatchStatistics)
  return target;
}

size_t InferBatchStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.InferBatchStatistics)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .inference.StatisticDuration compute_input = 2;
  if (this->_internal_has_compute_input()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.compute_input_);
  }

  // .inference.StatisticDuration compute_infer = 3;
  if (this->_internal_has_compute_infer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.compute_infer_);
  }

  // .inference.StatisticDuration compute_output = 4;
  if (this->_internal_has_compute_output()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.compute_output_);
  }

  // uint64 batch_size = 1;
  if (this->_internal_batch_size() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_batch_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InferBatchStatistics::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InferBatchStatistics::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InferBatchStatistics::GetClassData() const { return &_class_data_; }


void InferBatchStatistics::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InferBatchStatistics*>(&to_msg);
  auto& from = static_cast<const InferBatchStatistics&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.InferBatchStatistics)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_compute_input()) {
    _this->_internal_mutable_compute_input()->::inference::StatisticDuration::MergeFrom(
        from._internal_compute_input());
  }
  if (from._internal_has_compute_infer()) {
    _this->_internal_mutable_compute_infer()->::inference::StatisticDuration::MergeFrom(
        from._internal_compute_infer());
  }
  if (from._internal_has_compute_output()) {
    _this->_internal_mutable_compute_output()->::inference::StatisticDuration::MergeFrom(
        from._internal_compute_output());
  }
  if (from._internal_batch_size() != 0) {
    _this->_internal_set_batch_size(from._internal_batch_size());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InferBatchStatistics::CopyFrom(const InferBatchStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.InferBatchStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InferBatchStatistics::IsInitialized() const {
  return true;
}

void InferBatchStatistics::InternalSwap(InferBatchStatistics* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InferBatchStatistics, _impl_.batch_size_)
      + sizeof(InferBatchStatistics::_impl_.batch_size_)
      - PROTOBUF_FIELD_OFFSET(InferBatchStatistics, _impl_.compute_input_)>(
          reinterpret_cast<char*>(&_impl_.compute_input_),
          reinterpret_cast<char*>(&other->_impl_.compute_input_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InferBatchStatistics::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[29]);
}

// ===================================================================

class MemoryUsage::_Internal {
 public:
};

MemoryUsage::MemoryUsage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:inference.MemoryUsage)
}
MemoryUsage::MemoryUsage(const MemoryUsage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MemoryUsage* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.type_){}
    , decltype(_impl_.id_){}
    , decltype(_impl_.byte_size_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_type().empty()) {
    _this->_impl_.type_.Set(from._internal_type(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.id_, &from._impl_.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.byte_size_) -
    reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.byte_size_));
  // @@protoc_insertion_point(copy_constructor:inference.MemoryUsage)
}

inline void MemoryUsage::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.type_){}
    , decltype(_impl_.id_){int64_t{0}}
    , decltype(_impl_.byte_size_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MemoryUsage::~MemoryUsage() {
  // @@protoc_insertion_point(destructor:inference.MemoryUsage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MemoryUsage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.type_.Destroy();
}

void MemoryUsage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MemoryUsage::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.MemoryUsage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_.ClearToEmpty();
  ::memset(&_impl_.id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.byte_size_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.byte_size_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MemoryUsage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.MemoryUsage.type"));
        } else
          goto handle_unusual;
        continue;
      // int64 id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 byte_size = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.byte_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MemoryUsage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.MemoryUsage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (!this->_internal_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.MemoryUsage.type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_type(), target);
  }

  // int64 id = 2;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_id(), target);
  }

  // uint64 byte_size = 3;
  if (this->_internal_byte_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_byte_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.MemoryUsage)
  return target;
}

size_t MemoryUsage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.MemoryUsage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string type = 1;
  if (!this->_internal_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // int64 id = 2;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_id());
  }

  // uint64 byte_size = 3;
  if (this->_internal_byte_size() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_byte_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MemoryUsage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MemoryUsage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MemoryUsage::GetClassData() const { return &_class_data_; }


void MemoryUsage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MemoryUsage*>(&to_msg);
  auto& from = static_cast<const MemoryUsage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.MemoryUsage)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_byte_size() != 0) {
    _this->_internal_set_byte_size(from._internal_byte_size());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MemoryUsage::CopyFrom(const MemoryUsage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.MemoryUsage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemoryUsage::IsInitialized() const {
  return true;
}

void MemoryUsage::InternalSwap(MemoryUsage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.type_, lhs_arena,
      &other->_impl_.type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MemoryUsage, _impl_.byte_size_)
      + sizeof(MemoryUsage::_impl_.byte_size_)
      - PROTOBUF_FIELD_OFFSET(MemoryUsage, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MemoryUsage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[30]);
}

// ===================================================================

class ModelStatistics::_Internal {
 public:
  static const ::inference::InferStatistics& inference_stats(const ModelStatistics* msg);
};

const ::inference::InferStatistics&
ModelStatistics::_Internal::inference_stats(const ModelStatistics* msg) {
  return *msg->_impl_.inference_stats_;
}
ModelStatistics::ModelStatistics(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:inference.ModelStatistics)
}
ModelStatistics::ModelStatistics(const ModelStatistics& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ModelStatistics* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.batch_stats_){from._impl_.batch_stats_}
    , decltype(_impl_.memory_usage_){from._impl_.memory_usage_}
    , decltype(_impl_.name_){}
    , decltype(_impl_.version_){}
    , decltype(_impl_.inference_stats_){nullptr}
    , decltype(_impl_.last_inference_){}
    , decltype(_impl_.inference_count_){}
    , decltype(_impl_.execution_count_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    _this->_impl_.version_.Set(from._internal_version(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_inference_stats()) {
    _this->_impl_.inference_stats_ = new ::inference::InferStatistics(*from._impl_.inference_stats_);
  }
  ::memcpy(&_impl_.last_inference_, &from._impl_.last_inference_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.execution_count_) -
    reinterpret_cast<char*>(&_impl_.last_inference_)) + sizeof(_impl_.execution_count_));
  // @@protoc_insertion_point(copy_constructor:inference.ModelStatistics)
}

inline void ModelStatistics::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.batch_stats_){arena}
    , decltype(_impl_.memory_usage_){arena}
    , decltype(_impl_.name_){}
    , decltype(_impl_.version_){}
    , decltype(_impl_.inference_stats_){nullptr}
    , decltype(_impl_.last_inference_){uint64_t{0u}}
    , decltype(_impl_.inference_count_){uint64_t{0u}}
    , decltype(_impl_.execution_count_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ModelStatistics::~ModelStatistics() {
  // @@protoc_insertion_point(destructor:inference.ModelStatistics)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModelStatistics::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.batch_stats_.~RepeatedPtrField();
  _impl_.memory_usage_.~RepeatedPtrField();
  _impl_.name_.Destroy();
  _impl_.version_.Destroy();
  if (this != internal_default_instance()) delete _impl_.inference_stats_;
}

void ModelStatistics::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ModelStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.ModelStatistics)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.batch_stats_.Clear();
  _impl_.memory_usage_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.version_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.inference_stats_ != nullptr) {
    delete _impl_.inference_stats_;
  }
  _impl_.inference_stats_ = nullptr;
  ::memset(&_impl_.last_inference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.execution_count_) -
      reinterpret_cast<char*>(&_impl_.last_inference_)) + sizeof(_impl_.execution_count_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelStatistics::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.ModelStatistics.name"));
        } else
          goto handle_unusual;
        continue;
      // string version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.ModelStatistics.version"));
        } else
          goto handle_unusual;
        continue;
      // uint64 last_inference = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.last_inference_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 inference_count = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.inference_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 execution_count = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.execution_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .inference.InferStatistics inference_stats = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_inference_stats(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .inference.InferBatchStatistics batch_stats = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_batch_stats(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .inference.MemoryUsage memory_usage = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_memory_usage(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelStatistics::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.ModelStatistics)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.ModelStatistics.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.ModelStatistics.version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_version(), target);
  }

  // uint64 last_inference = 3;
  if (this->_internal_last_inference() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_last_inference(), target);
  }

  // uint64 inference_count = 4;
  if (this->_internal_inference_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(4, this->_internal_inference_count(), target);
  }

  // uint64 execution_count = 5;
  if (this->_internal_execution_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(5, this->_internal_execution_count(), target);
  }

  // .inference.InferStatistics inference_stats = 6;
  if (this->_internal_has_inference_stats()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::inference_stats(this),
        _Internal::inference_stats(this).GetCachedSize(), target, stream);
  }

  // repeated .inference.InferBatchStatistics batch_stats = 7;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_batch_stats_size()); i < n; i++) {
    const auto& repfield = this->_internal_batch_stats(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(7, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .inference.MemoryUsage memory_usage = 8;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_memory_usage_size()); i < n; i++) {
    const auto& repfield = this->_internal_memory_usage(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(8, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.ModelStatistics)
  return target;
}

size_t ModelStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.ModelStatistics)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .inference.InferBatchStatistics batch_stats = 7;
  total_size += 1UL * this->_internal_batch_stats_size();
  for (const auto& msg : this->_impl_.batch_stats_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .inference.MemoryUsage memory_usage = 8;
  total_size += 1UL * this->_internal_memory_usage_size();
  for (const auto& msg : this->_impl_.memory_usage_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  // .inference.InferStatistics inference_stats = 6;
  if (this->_internal_has_inference_stats()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.inference_stats_);
  }

  // uint64 last_inference = 3;
  if (this->_internal_last_inference() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_last_inference());
  }

  // uint64 inference_count = 4;
  if (this->_internal_inference_count() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_inference_count());
  }

  // uint64 execution_count = 5;
  if (this->_internal_execution_count() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_execution_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelStatistics::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ModelStatistics::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelStatistics::GetClassData() const { return &_class_data_; }


void ModelStatistics::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ModelStatistics*>(&to_msg);
  auto& from = static_cast<const ModelStatistics&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.ModelStatistics)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.batch_stats_.MergeFrom(from._impl_.batch_stats_);
  _this->_impl_.memory_usage_.MergeFrom(from._impl_.memory_usage_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  if (from._internal_has_inference_stats()) {
    _this->_internal_mutable_inference_stats()->::inference::InferStatistics::MergeFrom(
        from._internal_inference_stats());
  }
  if (from._internal_last_inference() != 0) {
    _this->_internal_set_last_inference(from._internal_last_inference());
  }
  if (from._internal_inference_count() != 0) {
    _this->_internal_set_inference_count(from._internal_inference_count());
  }
  if (from._internal_execution_count() != 0) {
    _this->_internal_set_execution_count(from._internal_execution_count());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelStatistics::CopyFrom(const ModelStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.ModelStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelStatistics::IsInitialized() const {
  return true;
}

void ModelStatistics::InternalSwap(ModelStatistics* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.batch_stats_.InternalSwap(&other->_impl_.batch_stats_);
  _impl_.memory_usage_.InternalSwap(&other->_impl_.memory_usage_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.version_, lhs_arena,
      &other->_impl_.version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModelStatistics, _impl_.execution_count_)
      + sizeof(ModelStatistics::_impl_.execution_count_)
      - PROTOBUF_FIELD_OFFSET(ModelStatistics, _impl_.inference_stats_)>(
          reinterpret_cast<char*>(&_impl_.inference_stats_),
          reinterpret_cast<char*>(&other->_impl_.inference_stats_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelStatistics::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[31]);
}

// ===================================================================

class ModelStatisticsResponse::_Internal {
 public:
};

ModelStatisticsResponse::ModelStatisticsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:inference.ModelStatisticsResponse)
}
ModelStatisticsResponse::ModelStatisticsResponse(const ModelStatisticsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ModelStatisticsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.model_stats_){from._impl_.model_stats_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:inference.ModelStatisticsResponse)
}

inline void ModelStatisticsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.model_stats_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ModelStatisticsResponse::~ModelStatisticsResponse() {
  // @@protoc_insertion_point(destructor:inference.ModelStatisticsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModelStatisticsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.model_stats_.~RepeatedPtrField();
}

void ModelStatisticsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ModelStatisticsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.ModelStatisticsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.model_stats_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelStatisticsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .inference.ModelStatistics model_stats = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_model_stats(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelStatisticsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.ModelStatisticsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .inference.ModelStatistics model_stats = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_model_stats_size()); i < n; i++) {
    const auto& repfield = this->_internal_model_stats(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.ModelStatisticsResponse)
  return target;
}

size_t ModelStatisticsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.ModelStatisticsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .inference.ModelStatistics model_stats = 1;
  total_size += 1UL * this->_internal_model_stats_size();
  for (const auto& msg : this->_impl_.model_stats_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelStatisticsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ModelStatisticsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelStatisticsResponse::GetClassData() const { return &_class_data_; }


void ModelStatisticsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ModelStatisticsResponse*>(&to_msg);
  auto& from = static_cast<const ModelStatisticsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.ModelStatisticsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.model_stats_.MergeFrom(from._impl_.model_stats_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelStatisticsResponse::CopyFrom(const ModelStatisticsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.ModelStatisticsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelStatisticsResponse::IsInitialized() const {
  return true;
}

void ModelStatisticsResponse::InternalSwap(ModelStatisticsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.model_stats_.InternalSwap(&other->_impl_.model_stats_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelStatisticsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[32]);
}

// ===================================================================

class ModelRepositoryParameter::_Internal {
 public:
};

ModelRepositoryParameter::ModelRepositoryParameter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:inference.ModelRepositoryParameter)
}
ModelRepositoryParameter::ModelRepositoryParameter(const ModelRepositoryParameter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ModelRepositoryParameter* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.parameter_choice_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_parameter_choice();
  switch (from.parameter_choice_case()) {
    case kBoolParam: {
      _this->_internal_set_bool_param(from._internal_bool_param());
      break;
    }
    case kInt64Param: {
      _this->_internal_set_int64_param(from._internal_int64_param());
      break;
    }
    case kStringParam: {
      _this->_internal_set_string_param(from._internal_string_param());
      break;
    }
    case kBytesParam: {
      _this->_internal_set_bytes_param(from._internal_bytes_param());
      break;
    }
    case PARAMETER_CHOICE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:inference.ModelRepositoryParameter)
}

inline void ModelRepositoryParameter::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.parameter_choice_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_parameter_choice();
}

ModelRepositoryParameter::~ModelRepositoryParameter() {
  // @@protoc_insertion_point(destructor:inference.ModelRepositoryParameter)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModelRepositoryParameter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_parameter_choice()) {
    clear_parameter_choice();
  }
}

void ModelRepositoryParameter::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ModelRepositoryParameter::clear_parameter_choice() {
// @@protoc_insertion_point(one_of_clear_start:inference.ModelRepositoryParameter)
  switch (parameter_choice_case()) {
    case kBoolParam: {
      // No need to clear
      break;
    }
    case kInt64Param: {
      // No need to clear
      break;
    }
    case kStringParam: {
      _impl_.parameter_choice_.string_param_.Destroy();
      break;
    }
    case kBytesParam: {
      _impl_.parameter_choice_.bytes_param_.Destroy();
      break;
    }
    case PARAMETER_CHOICE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PARAMETER_CHOICE_NOT_SET;
}


void ModelRepositoryParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.ModelRepositoryParameter)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_parameter_choice();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelRepositoryParameter::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool bool_param = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _internal_set_bool_param(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 int64_param = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _internal_set_int64_param(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string string_param = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_string_param();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.ModelRepositoryParameter.string_param"));
        } else
          goto handle_unusual;
        continue;
      // bytes bytes_param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_bytes_param();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelRepositoryParameter::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.ModelRepositoryParameter)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool bool_param = 1;
  if (_internal_has_bool_param()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_bool_param(), target);
  }

  // int64 int64_param = 2;
  if (_internal_has_int64_param()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_int64_param(), target);
  }

  // string string_param = 3;
  if (_internal_has_string_param()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_string_param().data(), static_cast<int>(this->_internal_string_param().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.ModelRepositoryParameter.string_param");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_string_param(), target);
  }

  // bytes bytes_param = 4;
  if (_internal_has_bytes_param()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_bytes_param(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.ModelRepositoryParameter)
  return target;
}

size_t ModelRepositoryParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.ModelRepositoryParameter)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (parameter_choice_case()) {
    // bool bool_param = 1;
    case kBoolParam: {
      total_size += 1 + 1;
      break;
    }
    // int64 int64_param = 2;
    case kInt64Param: {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_int64_param());
      break;
    }
    // string string_param = 3;
    case kStringParam: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_string_param());
      break;
    }
    // bytes bytes_param = 4;
    case kBytesParam: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_bytes_param());
      break;
    }
    case PARAMETER_CHOICE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelRepositoryParameter::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ModelRepositoryParameter::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelRepositoryParameter::GetClassData() const { return &_class_data_; }


void ModelRepositoryParameter::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ModelRepositoryParameter*>(&to_msg);
  auto& from = static_cast<const ModelRepositoryParameter&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.ModelRepositoryParameter)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.parameter_choice_case()) {
    case kBoolParam: {
      _this->_internal_set_bool_param(from._internal_bool_param());
      break;
    }
    case kInt64Param: {
      _this->_internal_set_int64_param(from._internal_int64_param());
      break;
    }
    case kStringParam: {
      _this->_internal_set_string_param(from._internal_string_param());
      break;
    }
    case kBytesParam: {
      _this->_internal_set_bytes_param(from._internal_bytes_param());
      break;
    }
    case PARAMETER_CHOICE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelRepositoryParameter::CopyFrom(const ModelRepositoryParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.ModelRepositoryParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelRepositoryParameter::IsInitialized() const {
  return true;
}

void ModelRepositoryParameter::InternalSwap(ModelRepositoryParameter* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.parameter_choice_, other->_impl_.parameter_choice_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelRepositoryParameter::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[33]);
}

// ===================================================================

class RepositoryIndexRequest::_Internal {
 public:
};

RepositoryIndexRequest::RepositoryIndexRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:inference.RepositoryIndexRequest)
}
RepositoryIndexRequest::RepositoryIndexRequest(const RepositoryIndexRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RepositoryIndexRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.repository_name_){}
    , decltype(_impl_.ready_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.repository_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.repository_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_repository_name().empty()) {
    _this->_impl_.repository_name_.Set(from._internal_repository_name(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.ready_ = from._impl_.ready_;
  // @@protoc_insertion_point(copy_constructor:inference.RepositoryIndexRequest)
}

inline void RepositoryIndexRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.repository_name_){}
    , decltype(_impl_.ready_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.repository_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.repository_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RepositoryIndexRequest::~RepositoryIndexRequest() {
  // @@protoc_insertion_point(destructor:inference.RepositoryIndexRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RepositoryIndexRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.repository_name_.Destroy();
}

void RepositoryIndexRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RepositoryIndexRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.RepositoryIndexRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.repository_name_.ClearToEmpty();
  _impl_.ready_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RepositoryIndexRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string repository_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_repository_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.RepositoryIndexRequest.repository_name"));
        } else
          goto handle_unusual;
        continue;
      // bool ready = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.ready_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RepositoryIndexRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.RepositoryIndexRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string repository_name = 1;
  if (!this->_internal_repository_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_repository_name().data(), static_cast<int>(this->_internal_repository_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.RepositoryIndexRequest.repository_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_repository_name(), target);
  }

  // bool ready = 2;
  if (this->_internal_ready() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_ready(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.RepositoryIndexRequest)
  return target;
}

size_t RepositoryIndexRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.RepositoryIndexRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string repository_name = 1;
  if (!this->_internal_repository_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_repository_name());
  }

  // bool ready = 2;
  if (this->_internal_ready() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RepositoryIndexRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RepositoryIndexRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RepositoryIndexRequest::GetClassData() const { return &_class_data_; }


void RepositoryIndexRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RepositoryIndexRequest*>(&to_msg);
  auto& from = static_cast<const RepositoryIndexRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.RepositoryIndexRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_repository_name().empty()) {
    _this->_internal_set_repository_name(from._internal_repository_name());
  }
  if (from._internal_ready() != 0) {
    _this->_internal_set_ready(from._internal_ready());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RepositoryIndexRequest::CopyFrom(const RepositoryIndexRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.RepositoryIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepositoryIndexRequest::IsInitialized() const {
  return true;
}

void RepositoryIndexRequest::InternalSwap(RepositoryIndexRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.repository_name_, lhs_arena,
      &other->_impl_.repository_name_, rhs_arena
  );
  swap(_impl_.ready_, other->_impl_.ready_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RepositoryIndexRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[34]);
}

// ===================================================================

class RepositoryIndexResponse_ModelIndex::_Internal {
 public:
};

RepositoryIndexResponse_ModelIndex::RepositoryIndexResponse_ModelIndex(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:inference.RepositoryIndexResponse.ModelIndex)
}
RepositoryIndexResponse_ModelIndex::RepositoryIndexResponse_ModelIndex(const RepositoryIndexResponse_ModelIndex& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RepositoryIndexResponse_ModelIndex* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.version_){}
    , decltype(_impl_.state_){}
    , decltype(_impl_.reason_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    _this->_impl_.version_.Set(from._internal_version(), 
      _this->GetArenaForAllocation());
  }
  _impl_.state_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.state_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_state().empty()) {
    _this->_impl_.state_.Set(from._internal_state(), 
      _this->GetArenaForAllocation());
  }
  _impl_.reason_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reason_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_reason().empty()) {
    _this->_impl_.reason_.Set(from._internal_reason(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:inference.RepositoryIndexResponse.ModelIndex)
}

inline void RepositoryIndexResponse_ModelIndex::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.version_){}
    , decltype(_impl_.state_){}
    , decltype(_impl_.reason_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.state_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.state_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.reason_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reason_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RepositoryIndexResponse_ModelIndex::~RepositoryIndexResponse_ModelIndex() {
  // @@protoc_insertion_point(destructor:inference.RepositoryIndexResponse.ModelIndex)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RepositoryIndexResponse_ModelIndex::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.version_.Destroy();
  _impl_.state_.Destroy();
  _impl_.reason_.Destroy();
}

void RepositoryIndexResponse_ModelIndex::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RepositoryIndexResponse_ModelIndex::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.RepositoryIndexResponse.ModelIndex)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.version_.ClearToEmpty();
  _impl_.state_.ClearToEmpty();
  _impl_.reason_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RepositoryIndexResponse_ModelIndex::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.RepositoryIndexResponse.ModelIndex.name"));
        } else
          goto handle_unusual;
        continue;
      // string version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.RepositoryIndexResponse.ModelIndex.version"));
        } else
          goto handle_unusual;
        continue;
      // string state = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_state();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.RepositoryIndexResponse.ModelIndex.state"));
        } else
          goto handle_unusual;
        continue;
      // string reason = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_reason();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.RepositoryIndexResponse.ModelIndex.reason"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RepositoryIndexResponse_ModelIndex::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.RepositoryIndexResponse.ModelIndex)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.RepositoryIndexResponse.ModelIndex.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.RepositoryIndexResponse.ModelIndex.version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_version(), target);
  }

  // string state = 3;
  if (!this->_internal_state().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_state().data(), static_cast<int>(this->_internal_state().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.RepositoryIndexResponse.ModelIndex.state");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_state(), target);
  }

  // string reason = 4;
  if (!this->_internal_reason().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reason().data(), static_cast<int>(this->_internal_reason().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.RepositoryIndexResponse.ModelIndex.reason");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_reason(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.RepositoryIndexResponse.ModelIndex)
  return target;
}

size_t RepositoryIndexResponse_ModelIndex::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.RepositoryIndexResponse.ModelIndex)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  // string state = 3;
  if (!this->_internal_state().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_state());
  }

  // string reason = 4;
  if (!this->_internal_reason().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reason());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RepositoryIndexResponse_ModelIndex::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RepositoryIndexResponse_ModelIndex::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RepositoryIndexResponse_ModelIndex::GetClassData() const { return &_class_data_; }


void RepositoryIndexResponse_ModelIndex::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RepositoryIndexResponse_ModelIndex*>(&to_msg);
  auto& from = static_cast<const RepositoryIndexResponse_ModelIndex&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.RepositoryIndexResponse.ModelIndex)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  if (!from._internal_state().empty()) {
    _this->_internal_set_state(from._internal_state());
  }
  if (!from._internal_reason().empty()) {
    _this->_internal_set_reason(from._internal_reason());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RepositoryIndexResponse_ModelIndex::CopyFrom(const RepositoryIndexResponse_ModelIndex& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.RepositoryIndexResponse.ModelIndex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepositoryIndexResponse_ModelIndex::IsInitialized() const {
  return true;
}

void RepositoryIndexResponse_ModelIndex::InternalSwap(RepositoryIndexResponse_ModelIndex* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.version_, lhs_arena,
      &other->_impl_.version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.state_, lhs_arena,
      &other->_impl_.state_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.reason_, lhs_arena,
      &other->_impl_.reason_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata RepositoryIndexResponse_ModelIndex::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[35]);
}

// ===================================================================

class RepositoryIndexResponse::_Internal {
 public:
};

RepositoryIndexResponse::RepositoryIndexResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:inference.RepositoryIndexResponse)
}
RepositoryIndexResponse::RepositoryIndexResponse(const RepositoryIndexResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RepositoryIndexResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.models_){from._impl_.models_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:inference.RepositoryIndexResponse)
}

inline void RepositoryIndexResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.models_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RepositoryIndexResponse::~RepositoryIndexResponse() {
  // @@protoc_insertion_point(destructor:inference.RepositoryIndexResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RepositoryIndexResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.models_.~RepeatedPtrField();
}

void RepositoryIndexResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RepositoryIndexResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.RepositoryIndexResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.models_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RepositoryIndexResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .inference.RepositoryIndexResponse.ModelIndex models = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_models(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RepositoryIndexResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.RepositoryIndexResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .inference.RepositoryIndexResponse.ModelIndex models = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_models_size()); i < n; i++) {
    const auto& repfield = this->_internal_models(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.RepositoryIndexResponse)
  return target;
}

size_t RepositoryIndexResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.RepositoryIndexResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .inference.RepositoryIndexResponse.ModelIndex models = 1;
  total_size += 1UL * this->_internal_models_size();
  for (const auto& msg : this->_impl_.models_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RepositoryIndexResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RepositoryIndexResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RepositoryIndexResponse::GetClassData() const { return &_class_data_; }


void RepositoryIndexResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RepositoryIndexResponse*>(&to_msg);
  auto& from = static_cast<const RepositoryIndexResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.RepositoryIndexResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.models_.MergeFrom(from._impl_.models_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RepositoryIndexResponse::CopyFrom(const RepositoryIndexResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.RepositoryIndexResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepositoryIndexResponse::IsInitialized() const {
  return true;
}

void RepositoryIndexResponse::InternalSwap(RepositoryIndexResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.models_.InternalSwap(&other->_impl_.models_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RepositoryIndexResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[36]);
}

// ===================================================================

RepositoryModelLoadRequest_ParametersEntry_DoNotUse::RepositoryModelLoadRequest_ParametersEntry_DoNotUse() {}
RepositoryModelLoadRequest_ParametersEntry_DoNotUse::RepositoryModelLoadRequest_ParametersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void RepositoryModelLoadRequest_ParametersEntry_DoNotUse::MergeFrom(const RepositoryModelLoadRequest_ParametersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata RepositoryModelLoadRequest_ParametersEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[37]);
}

// ===================================================================

class RepositoryModelLoadRequest::_Internal {
 public:
};

RepositoryModelLoadRequest::RepositoryModelLoadRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &RepositoryModelLoadRequest::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:inference.RepositoryModelLoadRequest)
}
RepositoryModelLoadRequest::RepositoryModelLoadRequest(const RepositoryModelLoadRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RepositoryModelLoadRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.parameters_)*/{}
    , decltype(_impl_.repository_name_){}
    , decltype(_impl_.model_name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.parameters_.MergeFrom(from._impl_.parameters_);
  _impl_.repository_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.repository_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_repository_name().empty()) {
    _this->_impl_.repository_name_.Set(from._internal_repository_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.model_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.model_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_model_name().empty()) {
    _this->_impl_.model_name_.Set(from._internal_model_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:inference.RepositoryModelLoadRequest)
}

inline void RepositoryModelLoadRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.parameters_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.repository_name_){}
    , decltype(_impl_.model_name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.repository_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.repository_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.model_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.model_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RepositoryModelLoadRequest::~RepositoryModelLoadRequest() {
  // @@protoc_insertion_point(destructor:inference.RepositoryModelLoadRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void RepositoryModelLoadRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.parameters_.Destruct();
  _impl_.parameters_.~MapField();
  _impl_.repository_name_.Destroy();
  _impl_.model_name_.Destroy();
}

void RepositoryModelLoadRequest::ArenaDtor(void* object) {
  RepositoryModelLoadRequest* _this = reinterpret_cast< RepositoryModelLoadRequest* >(object);
  _this->_impl_.parameters_.Destruct();
}
void RepositoryModelLoadRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RepositoryModelLoadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.RepositoryModelLoadRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parameters_.Clear();
  _impl_.repository_name_.ClearToEmpty();
  _impl_.model_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RepositoryModelLoadRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string repository_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_repository_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.RepositoryModelLoadRequest.repository_name"));
        } else
          goto handle_unusual;
        continue;
      // string model_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_model_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.RepositoryModelLoadRequest.model_name"));
        } else
          goto handle_unusual;
        continue;
      // map<string, .inference.ModelRepositoryParameter> parameters = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.parameters_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RepositoryModelLoadRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.RepositoryModelLoadRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string repository_name = 1;
  if (!this->_internal_repository_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_repository_name().data(), static_cast<int>(this->_internal_repository_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.RepositoryModelLoadRequest.repository_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_repository_name(), target);
  }

  // string model_name = 2;
  if (!this->_internal_model_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_name().data(), static_cast<int>(this->_internal_model_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.RepositoryModelLoadRequest.model_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_model_name(), target);
  }

  // map<string, .inference.ModelRepositoryParameter> parameters = 3;
  if (!this->_internal_parameters().empty()) {
    using MapType = ::_pb::Map<std::string, ::inference::ModelRepositoryParameter>;
    using WireHelper = RepositoryModelLoadRequest_ParametersEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_parameters();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "inference.RepositoryModelLoadRequest.ParametersEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(3, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(3, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.RepositoryModelLoadRequest)
  return target;
}

size_t RepositoryModelLoadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.RepositoryModelLoadRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .inference.ModelRepositoryParameter> parameters = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_parameters_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::inference::ModelRepositoryParameter >::const_iterator
      it = this->_internal_parameters().begin();
      it != this->_internal_parameters().end(); ++it) {
    total_size += RepositoryModelLoadRequest_ParametersEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string repository_name = 1;
  if (!this->_internal_repository_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_repository_name());
  }

  // string model_name = 2;
  if (!this->_internal_model_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RepositoryModelLoadRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RepositoryModelLoadRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RepositoryModelLoadRequest::GetClassData() const { return &_class_data_; }


void RepositoryModelLoadRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RepositoryModelLoadRequest*>(&to_msg);
  auto& from = static_cast<const RepositoryModelLoadRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.RepositoryModelLoadRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.parameters_.MergeFrom(from._impl_.parameters_);
  if (!from._internal_repository_name().empty()) {
    _this->_internal_set_repository_name(from._internal_repository_name());
  }
  if (!from._internal_model_name().empty()) {
    _this->_internal_set_model_name(from._internal_model_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RepositoryModelLoadRequest::CopyFrom(const RepositoryModelLoadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.RepositoryModelLoadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepositoryModelLoadRequest::IsInitialized() const {
  return true;
}

void RepositoryModelLoadRequest::InternalSwap(RepositoryModelLoadRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.parameters_.InternalSwap(&other->_impl_.parameters_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.repository_name_, lhs_arena,
      &other->_impl_.repository_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.model_name_, lhs_arena,
      &other->_impl_.model_name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata RepositoryModelLoadRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[38]);
}

// ===================================================================

class RepositoryModelLoadResponse::_Internal {
 public:
};

RepositoryModelLoadResponse::RepositoryModelLoadResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:inference.RepositoryModelLoadResponse)
}
RepositoryModelLoadResponse::RepositoryModelLoadResponse(const RepositoryModelLoadResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  RepositoryModelLoadResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:inference.RepositoryModelLoadResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RepositoryModelLoadResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RepositoryModelLoadResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata RepositoryModelLoadResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[39]);
}

// ===================================================================

RepositoryModelUnloadRequest_ParametersEntry_DoNotUse::RepositoryModelUnloadRequest_ParametersEntry_DoNotUse() {}
RepositoryModelUnloadRequest_ParametersEntry_DoNotUse::RepositoryModelUnloadRequest_ParametersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void RepositoryModelUnloadRequest_ParametersEntry_DoNotUse::MergeFrom(const RepositoryModelUnloadRequest_ParametersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata RepositoryModelUnloadRequest_ParametersEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[40]);
}

// ===================================================================

class RepositoryModelUnloadRequest::_Internal {
 public:
};

RepositoryModelUnloadRequest::RepositoryModelUnloadRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &RepositoryModelUnloadRequest::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:inference.RepositoryModelUnloadRequest)
}
RepositoryModelUnloadRequest::RepositoryModelUnloadRequest(const RepositoryModelUnloadRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RepositoryModelUnloadRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.parameters_)*/{}
    , decltype(_impl_.repository_name_){}
    , decltype(_impl_.model_name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.parameters_.MergeFrom(from._impl_.parameters_);
  _impl_.repository_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.repository_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_repository_name().empty()) {
    _this->_impl_.repository_name_.Set(from._internal_repository_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.model_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.model_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_model_name().empty()) {
    _this->_impl_.model_name_.Set(from._internal_model_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:inference.RepositoryModelUnloadRequest)
}

inline void RepositoryModelUnloadRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.parameters_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.repository_name_){}
    , decltype(_impl_.model_name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.repository_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.repository_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.model_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.model_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RepositoryModelUnloadRequest::~RepositoryModelUnloadRequest() {
  // @@protoc_insertion_point(destructor:inference.RepositoryModelUnloadRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void RepositoryModelUnloadRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.parameters_.Destruct();
  _impl_.parameters_.~MapField();
  _impl_.repository_name_.Destroy();
  _impl_.model_name_.Destroy();
}

void RepositoryModelUnloadRequest::ArenaDtor(void* object) {
  RepositoryModelUnloadRequest* _this = reinterpret_cast< RepositoryModelUnloadRequest* >(object);
  _this->_impl_.parameters_.Destruct();
}
void RepositoryModelUnloadRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RepositoryModelUnloadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.RepositoryModelUnloadRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parameters_.Clear();
  _impl_.repository_name_.ClearToEmpty();
  _impl_.model_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RepositoryModelUnloadRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string repository_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_repository_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.RepositoryModelUnloadRequest.repository_name"));
        } else
          goto handle_unusual;
        continue;
      // string model_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_model_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.RepositoryModelUnloadRequest.model_name"));
        } else
          goto handle_unusual;
        continue;
      // map<string, .inference.ModelRepositoryParameter> parameters = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.parameters_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RepositoryModelUnloadRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.RepositoryModelUnloadRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string repository_name = 1;
  if (!this->_internal_repository_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_repository_name().data(), static_cast<int>(this->_internal_repository_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.RepositoryModelUnloadRequest.repository_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_repository_name(), target);
  }

  // string model_name = 2;
  if (!this->_internal_model_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_name().data(), static_cast<int>(this->_internal_model_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.RepositoryModelUnloadRequest.model_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_model_name(), target);
  }

  // map<string, .inference.ModelRepositoryParameter> parameters = 3;
  if (!this->_internal_parameters().empty()) {
    using MapType = ::_pb::Map<std::string, ::inference::ModelRepositoryParameter>;
    using WireHelper = RepositoryModelUnloadRequest_ParametersEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_parameters();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "inference.RepositoryModelUnloadRequest.ParametersEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(3, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(3, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.RepositoryModelUnloadRequest)
  return target;
}

size_t RepositoryModelUnloadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.RepositoryModelUnloadRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .inference.ModelRepositoryParameter> parameters = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_parameters_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::inference::ModelRepositoryParameter >::const_iterator
      it = this->_internal_parameters().begin();
      it != this->_internal_parameters().end(); ++it) {
    total_size += RepositoryModelUnloadRequest_ParametersEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string repository_name = 1;
  if (!this->_internal_repository_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_repository_name());
  }

  // string model_name = 2;
  if (!this->_internal_model_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RepositoryModelUnloadRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RepositoryModelUnloadRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RepositoryModelUnloadRequest::GetClassData() const { return &_class_data_; }


void RepositoryModelUnloadRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RepositoryModelUnloadRequest*>(&to_msg);
  auto& from = static_cast<const RepositoryModelUnloadRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.RepositoryModelUnloadRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.parameters_.MergeFrom(from._impl_.parameters_);
  if (!from._internal_repository_name().empty()) {
    _this->_internal_set_repository_name(from._internal_repository_name());
  }
  if (!from._internal_model_name().empty()) {
    _this->_internal_set_model_name(from._internal_model_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RepositoryModelUnloadRequest::CopyFrom(const RepositoryModelUnloadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.RepositoryModelUnloadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepositoryModelUnloadRequest::IsInitialized() const {
  return true;
}

void RepositoryModelUnloadRequest::InternalSwap(RepositoryModelUnloadRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.parameters_.InternalSwap(&other->_impl_.parameters_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.repository_name_, lhs_arena,
      &other->_impl_.repository_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.model_name_, lhs_arena,
      &other->_impl_.model_name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata RepositoryModelUnloadRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[41]);
}

// ===================================================================

class RepositoryModelUnloadResponse::_Internal {
 public:
};

RepositoryModelUnloadResponse::RepositoryModelUnloadResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:inference.RepositoryModelUnloadResponse)
}
RepositoryModelUnloadResponse::RepositoryModelUnloadResponse(const RepositoryModelUnloadResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  RepositoryModelUnloadResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:inference.RepositoryModelUnloadResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RepositoryModelUnloadResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RepositoryModelUnloadResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata RepositoryModelUnloadResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[42]);
}

// ===================================================================

class SystemSharedMemoryStatusRequest::_Internal {
 public:
};

SystemSharedMemoryStatusRequest::SystemSharedMemoryStatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:inference.SystemSharedMemoryStatusRequest)
}
SystemSharedMemoryStatusRequest::SystemSharedMemoryStatusRequest(const SystemSharedMemoryStatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SystemSharedMemoryStatusRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:inference.SystemSharedMemoryStatusRequest)
}

inline void SystemSharedMemoryStatusRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SystemSharedMemoryStatusRequest::~SystemSharedMemoryStatusRequest() {
  // @@protoc_insertion_point(destructor:inference.SystemSharedMemoryStatusRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SystemSharedMemoryStatusRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void SystemSharedMemoryStatusRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SystemSharedMemoryStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.SystemSharedMemoryStatusRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SystemSharedMemoryStatusRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.SystemSharedMemoryStatusRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SystemSharedMemoryStatusRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.SystemSharedMemoryStatusRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.SystemSharedMemoryStatusRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.SystemSharedMemoryStatusRequest)
  return target;
}

size_t SystemSharedMemoryStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.SystemSharedMemoryStatusRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SystemSharedMemoryStatusRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SystemSharedMemoryStatusRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SystemSharedMemoryStatusRequest::GetClassData() const { return &_class_data_; }


void SystemSharedMemoryStatusRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SystemSharedMemoryStatusRequest*>(&to_msg);
  auto& from = static_cast<const SystemSharedMemoryStatusRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.SystemSharedMemoryStatusRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SystemSharedMemoryStatusRequest::CopyFrom(const SystemSharedMemoryStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.SystemSharedMemoryStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemSharedMemoryStatusRequest::IsInitialized() const {
  return true;
}

void SystemSharedMemoryStatusRequest::InternalSwap(SystemSharedMemoryStatusRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SystemSharedMemoryStatusRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[43]);
}

// ===================================================================

class SystemSharedMemoryStatusResponse_RegionStatus::_Internal {
 public:
};

SystemSharedMemoryStatusResponse_RegionStatus::SystemSharedMemoryStatusResponse_RegionStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:inference.SystemSharedMemoryStatusResponse.RegionStatus)
}
SystemSharedMemoryStatusResponse_RegionStatus::SystemSharedMemoryStatusResponse_RegionStatus(const SystemSharedMemoryStatusResponse_RegionStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SystemSharedMemoryStatusResponse_RegionStatus* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.key_){}
    , decltype(_impl_.offset_){}
    , decltype(_impl_.byte_size_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    _this->_impl_.key_.Set(from._internal_key(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.offset_, &from._impl_.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.byte_size_) -
    reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.byte_size_));
  // @@protoc_insertion_point(copy_constructor:inference.SystemSharedMemoryStatusResponse.RegionStatus)
}

inline void SystemSharedMemoryStatusResponse_RegionStatus::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.key_){}
    , decltype(_impl_.offset_){uint64_t{0u}}
    , decltype(_impl_.byte_size_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SystemSharedMemoryStatusResponse_RegionStatus::~SystemSharedMemoryStatusResponse_RegionStatus() {
  // @@protoc_insertion_point(destructor:inference.SystemSharedMemoryStatusResponse.RegionStatus)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SystemSharedMemoryStatusResponse_RegionStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.key_.Destroy();
}

void SystemSharedMemoryStatusResponse_RegionStatus::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SystemSharedMemoryStatusResponse_RegionStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.SystemSharedMemoryStatusResponse.RegionStatus)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.key_.ClearToEmpty();
  ::memset(&_impl_.offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.byte_size_) -
      reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.byte_size_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SystemSharedMemoryStatusResponse_RegionStatus::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.SystemSharedMemoryStatusResponse.RegionStatus.name"));
        } else
          goto handle_unusual;
        continue;
      // string key = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_key();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.SystemSharedMemoryStatusResponse.RegionStatus.key"));
        } else
          goto handle_unusual;
        continue;
      // uint64 offset = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 byte_size = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.byte_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SystemSharedMemoryStatusResponse_RegionStatus::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.SystemSharedMemoryStatusResponse.RegionStatus)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.SystemSharedMemoryStatusResponse.RegionStatus.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string key = 2;
  if (!this->_internal_key().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.SystemSharedMemoryStatusResponse.RegionStatus.key");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_key(), target);
  }

  // uint64 offset = 3;
  if (this->_internal_offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_offset(), target);
  }

  // uint64 byte_size = 4;
  if (this->_internal_byte_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(4, this->_internal_byte_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.SystemSharedMemoryStatusResponse.RegionStatus)
  return target;
}

size_t SystemSharedMemoryStatusResponse_RegionStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.SystemSharedMemoryStatusResponse.RegionStatus)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string key = 2;
  if (!this->_internal_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // uint64 offset = 3;
  if (this->_internal_offset() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_offset());
  }

  // uint64 byte_size = 4;
  if (this->_internal_byte_size() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_byte_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SystemSharedMemoryStatusResponse_RegionStatus::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SystemSharedMemoryStatusResponse_RegionStatus::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SystemSharedMemoryStatusResponse_RegionStatus::GetClassData() const { return &_class_data_; }


void SystemSharedMemoryStatusResponse_RegionStatus::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SystemSharedMemoryStatusResponse_RegionStatus*>(&to_msg);
  auto& from = static_cast<const SystemSharedMemoryStatusResponse_RegionStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.SystemSharedMemoryStatusResponse.RegionStatus)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  if (from._internal_offset() != 0) {
    _this->_internal_set_offset(from._internal_offset());
  }
  if (from._internal_byte_size() != 0) {
    _this->_internal_set_byte_size(from._internal_byte_size());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SystemSharedMemoryStatusResponse_RegionStatus::CopyFrom(const SystemSharedMemoryStatusResponse_RegionStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.SystemSharedMemoryStatusResponse.RegionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemSharedMemoryStatusResponse_RegionStatus::IsInitialized() const {
  return true;
}

void SystemSharedMemoryStatusResponse_RegionStatus::InternalSwap(SystemSharedMemoryStatusResponse_RegionStatus* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.key_, lhs_arena,
      &other->_impl_.key_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SystemSharedMemoryStatusResponse_RegionStatus, _impl_.byte_size_)
      + sizeof(SystemSharedMemoryStatusResponse_RegionStatus::_impl_.byte_size_)
      - PROTOBUF_FIELD_OFFSET(SystemSharedMemoryStatusResponse_RegionStatus, _impl_.offset_)>(
          reinterpret_cast<char*>(&_impl_.offset_),
          reinterpret_cast<char*>(&other->_impl_.offset_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SystemSharedMemoryStatusResponse_RegionStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[44]);
}

// ===================================================================

SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse::SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse() {}
SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse::SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse::MergeFrom(const SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[45]);
}

// ===================================================================

class SystemSharedMemoryStatusResponse::_Internal {
 public:
};

SystemSharedMemoryStatusResponse::SystemSharedMemoryStatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &SystemSharedMemoryStatusResponse::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:inference.SystemSharedMemoryStatusResponse)
}
SystemSharedMemoryStatusResponse::SystemSharedMemoryStatusResponse(const SystemSharedMemoryStatusResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SystemSharedMemoryStatusResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.regions_)*/{}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.regions_.MergeFrom(from._impl_.regions_);
  // @@protoc_insertion_point(copy_constructor:inference.SystemSharedMemoryStatusResponse)
}

inline void SystemSharedMemoryStatusResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.regions_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SystemSharedMemoryStatusResponse::~SystemSharedMemoryStatusResponse() {
  // @@protoc_insertion_point(destructor:inference.SystemSharedMemoryStatusResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void SystemSharedMemoryStatusResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.regions_.Destruct();
  _impl_.regions_.~MapField();
}

void SystemSharedMemoryStatusResponse::ArenaDtor(void* object) {
  SystemSharedMemoryStatusResponse* _this = reinterpret_cast< SystemSharedMemoryStatusResponse* >(object);
  _this->_impl_.regions_.Destruct();
}
void SystemSharedMemoryStatusResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SystemSharedMemoryStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.SystemSharedMemoryStatusResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.regions_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SystemSharedMemoryStatusResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, .inference.SystemSharedMemoryStatusResponse.RegionStatus> regions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.regions_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SystemSharedMemoryStatusResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.SystemSharedMemoryStatusResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .inference.SystemSharedMemoryStatusResponse.RegionStatus> regions = 1;
  if (!this->_internal_regions().empty()) {
    using MapType = ::_pb::Map<std::string, ::inference::SystemSharedMemoryStatusResponse_RegionStatus>;
    using WireHelper = SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_regions();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "inference.SystemSharedMemoryStatusResponse.RegionsEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.SystemSharedMemoryStatusResponse)
  return target;
}

size_t SystemSharedMemoryStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.SystemSharedMemoryStatusResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .inference.SystemSharedMemoryStatusResponse.RegionStatus> regions = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_regions_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::inference::SystemSharedMemoryStatusResponse_RegionStatus >::const_iterator
      it = this->_internal_regions().begin();
      it != this->_internal_regions().end(); ++it) {
    total_size += SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SystemSharedMemoryStatusResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SystemSharedMemoryStatusResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SystemSharedMemoryStatusResponse::GetClassData() const { return &_class_data_; }


void SystemSharedMemoryStatusResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SystemSharedMemoryStatusResponse*>(&to_msg);
  auto& from = static_cast<const SystemSharedMemoryStatusResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.SystemSharedMemoryStatusResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.regions_.MergeFrom(from._impl_.regions_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SystemSharedMemoryStatusResponse::CopyFrom(const SystemSharedMemoryStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.SystemSharedMemoryStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemSharedMemoryStatusResponse::IsInitialized() const {
  return true;
}

void SystemSharedMemoryStatusResponse::InternalSwap(SystemSharedMemoryStatusResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.regions_.InternalSwap(&other->_impl_.regions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SystemSharedMemoryStatusResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[46]);
}

// ===================================================================

class SystemSharedMemoryRegisterRequest::_Internal {
 public:
};

SystemSharedMemoryRegisterRequest::SystemSharedMemoryRegisterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:inference.SystemSharedMemoryRegisterRequest)
}
SystemSharedMemoryRegisterRequest::SystemSharedMemoryRegisterRequest(const SystemSharedMemoryRegisterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SystemSharedMemoryRegisterRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.key_){}
    , decltype(_impl_.offset_){}
    , decltype(_impl_.byte_size_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    _this->_impl_.key_.Set(from._internal_key(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.offset_, &from._impl_.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.byte_size_) -
    reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.byte_size_));
  // @@protoc_insertion_point(copy_constructor:inference.SystemSharedMemoryRegisterRequest)
}

inline void SystemSharedMemoryRegisterRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.key_){}
    , decltype(_impl_.offset_){uint64_t{0u}}
    , decltype(_impl_.byte_size_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SystemSharedMemoryRegisterRequest::~SystemSharedMemoryRegisterRequest() {
  // @@protoc_insertion_point(destructor:inference.SystemSharedMemoryRegisterRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SystemSharedMemoryRegisterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.key_.Destroy();
}

void SystemSharedMemoryRegisterRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SystemSharedMemoryRegisterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.SystemSharedMemoryRegisterRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.key_.ClearToEmpty();
  ::memset(&_impl_.offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.byte_size_) -
      reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.byte_size_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SystemSharedMemoryRegisterRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.SystemSharedMemoryRegisterRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // string key = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_key();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.SystemSharedMemoryRegisterRequest.key"));
        } else
          goto handle_unusual;
        continue;
      // uint64 offset = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 byte_size = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.byte_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SystemSharedMemoryRegisterRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.SystemSharedMemoryRegisterRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.SystemSharedMemoryRegisterRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string key = 2;
  if (!this->_internal_key().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.SystemSharedMemoryRegisterRequest.key");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_key(), target);
  }

  // uint64 offset = 3;
  if (this->_internal_offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_offset(), target);
  }

  // uint64 byte_size = 4;
  if (this->_internal_byte_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(4, this->_internal_byte_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.SystemSharedMemoryRegisterRequest)
  return target;
}

size_t SystemSharedMemoryRegisterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.SystemSharedMemoryRegisterRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string key = 2;
  if (!this->_internal_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // uint64 offset = 3;
  if (this->_internal_offset() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_offset());
  }

  // uint64 byte_size = 4;
  if (this->_internal_byte_size() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_byte_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SystemSharedMemoryRegisterRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SystemSharedMemoryRegisterRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SystemSharedMemoryRegisterRequest::GetClassData() const { return &_class_data_; }


void SystemSharedMemoryRegisterRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SystemSharedMemoryRegisterRequest*>(&to_msg);
  auto& from = static_cast<const SystemSharedMemoryRegisterRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.SystemSharedMemoryRegisterRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  if (from._internal_offset() != 0) {
    _this->_internal_set_offset(from._internal_offset());
  }
  if (from._internal_byte_size() != 0) {
    _this->_internal_set_byte_size(from._internal_byte_size());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SystemSharedMemoryRegisterRequest::CopyFrom(const SystemSharedMemoryRegisterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.SystemSharedMemoryRegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemSharedMemoryRegisterRequest::IsInitialized() const {
  return true;
}

void SystemSharedMemoryRegisterRequest::InternalSwap(SystemSharedMemoryRegisterRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.key_, lhs_arena,
      &other->_impl_.key_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SystemSharedMemoryRegisterRequest, _impl_.byte_size_)
      + sizeof(SystemSharedMemoryRegisterRequest::_impl_.byte_size_)
      - PROTOBUF_FIELD_OFFSET(SystemSharedMemoryRegisterRequest, _impl_.offset_)>(
          reinterpret_cast<char*>(&_impl_.offset_),
          reinterpret_cast<char*>(&other->_impl_.offset_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SystemSharedMemoryRegisterRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[47]);
}

// ===================================================================

class SystemSharedMemoryRegisterResponse::_Internal {
 public:
};

SystemSharedMemoryRegisterResponse::SystemSharedMemoryRegisterResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:inference.SystemSharedMemoryRegisterResponse)
}
SystemSharedMemoryRegisterResponse::SystemSharedMemoryRegisterResponse(const SystemSharedMemoryRegisterResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SystemSharedMemoryRegisterResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:inference.SystemSharedMemoryRegisterResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SystemSharedMemoryRegisterResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SystemSharedMemoryRegisterResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SystemSharedMemoryRegisterResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[48]);
}

// ===================================================================

class SystemSharedMemoryUnregisterRequest::_Internal {
 public:
};

SystemSharedMemoryUnregisterRequest::SystemSharedMemoryUnregisterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:inference.SystemSharedMemoryUnregisterRequest)
}
SystemSharedMemoryUnregisterRequest::SystemSharedMemoryUnregisterRequest(const SystemSharedMemoryUnregisterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SystemSharedMemoryUnregisterRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:inference.SystemSharedMemoryUnregisterRequest)
}

inline void SystemSharedMemoryUnregisterRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SystemSharedMemoryUnregisterRequest::~SystemSharedMemoryUnregisterRequest() {
  // @@protoc_insertion_point(destructor:inference.SystemSharedMemoryUnregisterRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SystemSharedMemoryUnregisterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void SystemSharedMemoryUnregisterRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SystemSharedMemoryUnregisterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.SystemSharedMemoryUnregisterRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SystemSharedMemoryUnregisterRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.SystemSharedMemoryUnregisterRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SystemSharedMemoryUnregisterRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.SystemSharedMemoryUnregisterRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.SystemSharedMemoryUnregisterRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.SystemSharedMemoryUnregisterRequest)
  return target;
}

size_t SystemSharedMemoryUnregisterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.SystemSharedMemoryUnregisterRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SystemSharedMemoryUnregisterRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SystemSharedMemoryUnregisterRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SystemSharedMemoryUnregisterRequest::GetClassData() const { return &_class_data_; }


void SystemSharedMemoryUnregisterRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SystemSharedMemoryUnregisterRequest*>(&to_msg);
  auto& from = static_cast<const SystemSharedMemoryUnregisterRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.SystemSharedMemoryUnregisterRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SystemSharedMemoryUnregisterRequest::CopyFrom(const SystemSharedMemoryUnregisterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.SystemSharedMemoryUnregisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemSharedMemoryUnregisterRequest::IsInitialized() const {
  return true;
}

void SystemSharedMemoryUnregisterRequest::InternalSwap(SystemSharedMemoryUnregisterRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SystemSharedMemoryUnregisterRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[49]);
}

// ===================================================================

class SystemSharedMemoryUnregisterResponse::_Internal {
 public:
};

SystemSharedMemoryUnregisterResponse::SystemSharedMemoryUnregisterResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:inference.SystemSharedMemoryUnregisterResponse)
}
SystemSharedMemoryUnregisterResponse::SystemSharedMemoryUnregisterResponse(const SystemSharedMemoryUnregisterResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SystemSharedMemoryUnregisterResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:inference.SystemSharedMemoryUnregisterResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SystemSharedMemoryUnregisterResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SystemSharedMemoryUnregisterResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SystemSharedMemoryUnregisterResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[50]);
}

// ===================================================================

class CudaSharedMemoryStatusRequest::_Internal {
 public:
};

CudaSharedMemoryStatusRequest::CudaSharedMemoryStatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:inference.CudaSharedMemoryStatusRequest)
}
CudaSharedMemoryStatusRequest::CudaSharedMemoryStatusRequest(const CudaSharedMemoryStatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CudaSharedMemoryStatusRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:inference.CudaSharedMemoryStatusRequest)
}

inline void CudaSharedMemoryStatusRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CudaSharedMemoryStatusRequest::~CudaSharedMemoryStatusRequest() {
  // @@protoc_insertion_point(destructor:inference.CudaSharedMemoryStatusRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CudaSharedMemoryStatusRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void CudaSharedMemoryStatusRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CudaSharedMemoryStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.CudaSharedMemoryStatusRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CudaSharedMemoryStatusRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.CudaSharedMemoryStatusRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CudaSharedMemoryStatusRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.CudaSharedMemoryStatusRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.CudaSharedMemoryStatusRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.CudaSharedMemoryStatusRequest)
  return target;
}

size_t CudaSharedMemoryStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.CudaSharedMemoryStatusRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CudaSharedMemoryStatusRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CudaSharedMemoryStatusRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CudaSharedMemoryStatusRequest::GetClassData() const { return &_class_data_; }


void CudaSharedMemoryStatusRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CudaSharedMemoryStatusRequest*>(&to_msg);
  auto& from = static_cast<const CudaSharedMemoryStatusRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.CudaSharedMemoryStatusRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CudaSharedMemoryStatusRequest::CopyFrom(const CudaSharedMemoryStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.CudaSharedMemoryStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CudaSharedMemoryStatusRequest::IsInitialized() const {
  return true;
}

void CudaSharedMemoryStatusRequest::InternalSwap(CudaSharedMemoryStatusRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CudaSharedMemoryStatusRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[51]);
}

// ===================================================================

class CudaSharedMemoryStatusResponse_RegionStatus::_Internal {
 public:
};

CudaSharedMemoryStatusResponse_RegionStatus::CudaSharedMemoryStatusResponse_RegionStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:inference.CudaSharedMemoryStatusResponse.RegionStatus)
}
CudaSharedMemoryStatusResponse_RegionStatus::CudaSharedMemoryStatusResponse_RegionStatus(const CudaSharedMemoryStatusResponse_RegionStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CudaSharedMemoryStatusResponse_RegionStatus* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.device_id_){}
    , decltype(_impl_.byte_size_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.device_id_, &from._impl_.device_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.byte_size_) -
    reinterpret_cast<char*>(&_impl_.device_id_)) + sizeof(_impl_.byte_size_));
  // @@protoc_insertion_point(copy_constructor:inference.CudaSharedMemoryStatusResponse.RegionStatus)
}

inline void CudaSharedMemoryStatusResponse_RegionStatus::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.device_id_){uint64_t{0u}}
    , decltype(_impl_.byte_size_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CudaSharedMemoryStatusResponse_RegionStatus::~CudaSharedMemoryStatusResponse_RegionStatus() {
  // @@protoc_insertion_point(destructor:inference.CudaSharedMemoryStatusResponse.RegionStatus)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CudaSharedMemoryStatusResponse_RegionStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void CudaSharedMemoryStatusResponse_RegionStatus::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CudaSharedMemoryStatusResponse_RegionStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.CudaSharedMemoryStatusResponse.RegionStatus)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  ::memset(&_impl_.device_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.byte_size_) -
      reinterpret_cast<char*>(&_impl_.device_id_)) + sizeof(_impl_.byte_size_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CudaSharedMemoryStatusResponse_RegionStatus::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.CudaSharedMemoryStatusResponse.RegionStatus.name"));
        } else
          goto handle_unusual;
        continue;
      // uint64 device_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.device_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 byte_size = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.byte_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CudaSharedMemoryStatusResponse_RegionStatus::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.CudaSharedMemoryStatusResponse.RegionStatus)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.CudaSharedMemoryStatusResponse.RegionStatus.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // uint64 device_id = 2;
  if (this->_internal_device_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_device_id(), target);
  }

  // uint64 byte_size = 3;
  if (this->_internal_byte_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_byte_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.CudaSharedMemoryStatusResponse.RegionStatus)
  return target;
}

size_t CudaSharedMemoryStatusResponse_RegionStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.CudaSharedMemoryStatusResponse.RegionStatus)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // uint64 device_id = 2;
  if (this->_internal_device_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_device_id());
  }

  // uint64 byte_size = 3;
  if (this->_internal_byte_size() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_byte_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CudaSharedMemoryStatusResponse_RegionStatus::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CudaSharedMemoryStatusResponse_RegionStatus::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CudaSharedMemoryStatusResponse_RegionStatus::GetClassData() const { return &_class_data_; }


void CudaSharedMemoryStatusResponse_RegionStatus::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CudaSharedMemoryStatusResponse_RegionStatus*>(&to_msg);
  auto& from = static_cast<const CudaSharedMemoryStatusResponse_RegionStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.CudaSharedMemoryStatusResponse.RegionStatus)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_device_id() != 0) {
    _this->_internal_set_device_id(from._internal_device_id());
  }
  if (from._internal_byte_size() != 0) {
    _this->_internal_set_byte_size(from._internal_byte_size());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CudaSharedMemoryStatusResponse_RegionStatus::CopyFrom(const CudaSharedMemoryStatusResponse_RegionStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.CudaSharedMemoryStatusResponse.RegionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CudaSharedMemoryStatusResponse_RegionStatus::IsInitialized() const {
  return true;
}

void CudaSharedMemoryStatusResponse_RegionStatus::InternalSwap(CudaSharedMemoryStatusResponse_RegionStatus* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CudaSharedMemoryStatusResponse_RegionStatus, _impl_.byte_size_)
      + sizeof(CudaSharedMemoryStatusResponse_RegionStatus::_impl_.byte_size_)
      - PROTOBUF_FIELD_OFFSET(CudaSharedMemoryStatusResponse_RegionStatus, _impl_.device_id_)>(
          reinterpret_cast<char*>(&_impl_.device_id_),
          reinterpret_cast<char*>(&other->_impl_.device_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CudaSharedMemoryStatusResponse_RegionStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[52]);
}

// ===================================================================

CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse::CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse() {}
CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse::CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse::MergeFrom(const CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[53]);
}

// ===================================================================

class CudaSharedMemoryStatusResponse::_Internal {
 public:
};

CudaSharedMemoryStatusResponse::CudaSharedMemoryStatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &CudaSharedMemoryStatusResponse::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:inference.CudaSharedMemoryStatusResponse)
}
CudaSharedMemoryStatusResponse::CudaSharedMemoryStatusResponse(const CudaSharedMemoryStatusResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CudaSharedMemoryStatusResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.regions_)*/{}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.regions_.MergeFrom(from._impl_.regions_);
  // @@protoc_insertion_point(copy_constructor:inference.CudaSharedMemoryStatusResponse)
}

inline void CudaSharedMemoryStatusResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.regions_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CudaSharedMemoryStatusResponse::~CudaSharedMemoryStatusResponse() {
  // @@protoc_insertion_point(destructor:inference.CudaSharedMemoryStatusResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void CudaSharedMemoryStatusResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.regions_.Destruct();
  _impl_.regions_.~MapField();
}

void CudaSharedMemoryStatusResponse::ArenaDtor(void* object) {
  CudaSharedMemoryStatusResponse* _this = reinterpret_cast< CudaSharedMemoryStatusResponse* >(object);
  _this->_impl_.regions_.Destruct();
}
void CudaSharedMemoryStatusResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CudaSharedMemoryStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.CudaSharedMemoryStatusResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.regions_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CudaSharedMemoryStatusResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, .inference.CudaSharedMemoryStatusResponse.RegionStatus> regions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.regions_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CudaSharedMemoryStatusResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.CudaSharedMemoryStatusResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .inference.CudaSharedMemoryStatusResponse.RegionStatus> regions = 1;
  if (!this->_internal_regions().empty()) {
    using MapType = ::_pb::Map<std::string, ::inference::CudaSharedMemoryStatusResponse_RegionStatus>;
    using WireHelper = CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_regions();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "inference.CudaSharedMemoryStatusResponse.RegionsEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.CudaSharedMemoryStatusResponse)
  return target;
}

size_t CudaSharedMemoryStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.CudaSharedMemoryStatusResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .inference.CudaSharedMemoryStatusResponse.RegionStatus> regions = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_regions_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::inference::CudaSharedMemoryStatusResponse_RegionStatus >::const_iterator
      it = this->_internal_regions().begin();
      it != this->_internal_regions().end(); ++it) {
    total_size += CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CudaSharedMemoryStatusResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CudaSharedMemoryStatusResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CudaSharedMemoryStatusResponse::GetClassData() const { return &_class_data_; }


void CudaSharedMemoryStatusResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CudaSharedMemoryStatusResponse*>(&to_msg);
  auto& from = static_cast<const CudaSharedMemoryStatusResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.CudaSharedMemoryStatusResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.regions_.MergeFrom(from._impl_.regions_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CudaSharedMemoryStatusResponse::CopyFrom(const CudaSharedMemoryStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.CudaSharedMemoryStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CudaSharedMemoryStatusResponse::IsInitialized() const {
  return true;
}

void CudaSharedMemoryStatusResponse::InternalSwap(CudaSharedMemoryStatusResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.regions_.InternalSwap(&other->_impl_.regions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CudaSharedMemoryStatusResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[54]);
}

// ===================================================================

class CudaSharedMemoryRegisterRequest::_Internal {
 public:
};

CudaSharedMemoryRegisterRequest::CudaSharedMemoryRegisterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:inference.CudaSharedMemoryRegisterRequest)
}
CudaSharedMemoryRegisterRequest::CudaSharedMemoryRegisterRequest(const CudaSharedMemoryRegisterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CudaSharedMemoryRegisterRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.raw_handle_){}
    , decltype(_impl_.device_id_){}
    , decltype(_impl_.byte_size_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.raw_handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.raw_handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_raw_handle().empty()) {
    _this->_impl_.raw_handle_.Set(from._internal_raw_handle(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.device_id_, &from._impl_.device_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.byte_size_) -
    reinterpret_cast<char*>(&_impl_.device_id_)) + sizeof(_impl_.byte_size_));
  // @@protoc_insertion_point(copy_constructor:inference.CudaSharedMemoryRegisterRequest)
}

inline void CudaSharedMemoryRegisterRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.raw_handle_){}
    , decltype(_impl_.device_id_){int64_t{0}}
    , decltype(_impl_.byte_size_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.raw_handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.raw_handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CudaSharedMemoryRegisterRequest::~CudaSharedMemoryRegisterRequest() {
  // @@protoc_insertion_point(destructor:inference.CudaSharedMemoryRegisterRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CudaSharedMemoryRegisterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.raw_handle_.Destroy();
}

void CudaSharedMemoryRegisterRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CudaSharedMemoryRegisterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.CudaSharedMemoryRegisterRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.raw_handle_.ClearToEmpty();
  ::memset(&_impl_.device_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.byte_size_) -
      reinterpret_cast<char*>(&_impl_.device_id_)) + sizeof(_impl_.byte_size_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CudaSharedMemoryRegisterRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.CudaSharedMemoryRegisterRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // bytes raw_handle = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_raw_handle();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 device_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.device_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 byte_size = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.byte_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CudaSharedMemoryRegisterRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.CudaSharedMemoryRegisterRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.CudaSharedMemoryRegisterRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // bytes raw_handle = 2;
  if (!this->_internal_raw_handle().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_raw_handle(), target);
  }

  // int64 device_id = 3;
  if (this->_internal_device_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_device_id(), target);
  }

  // uint64 byte_size = 4;
  if (this->_internal_byte_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(4, this->_internal_byte_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.CudaSharedMemoryRegisterRequest)
  return target;
}

size_t CudaSharedMemoryRegisterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.CudaSharedMemoryRegisterRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // bytes raw_handle = 2;
  if (!this->_internal_raw_handle().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_raw_handle());
  }

  // int64 device_id = 3;
  if (this->_internal_device_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_device_id());
  }

  // uint64 byte_size = 4;
  if (this->_internal_byte_size() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_byte_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CudaSharedMemoryRegisterRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CudaSharedMemoryRegisterRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CudaSharedMemoryRegisterRequest::GetClassData() const { return &_class_data_; }


void CudaSharedMemoryRegisterRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CudaSharedMemoryRegisterRequest*>(&to_msg);
  auto& from = static_cast<const CudaSharedMemoryRegisterRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.CudaSharedMemoryRegisterRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_raw_handle().empty()) {
    _this->_internal_set_raw_handle(from._internal_raw_handle());
  }
  if (from._internal_device_id() != 0) {
    _this->_internal_set_device_id(from._internal_device_id());
  }
  if (from._internal_byte_size() != 0) {
    _this->_internal_set_byte_size(from._internal_byte_size());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CudaSharedMemoryRegisterRequest::CopyFrom(const CudaSharedMemoryRegisterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.CudaSharedMemoryRegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CudaSharedMemoryRegisterRequest::IsInitialized() const {
  return true;
}

void CudaSharedMemoryRegisterRequest::InternalSwap(CudaSharedMemoryRegisterRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.raw_handle_, lhs_arena,
      &other->_impl_.raw_handle_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CudaSharedMemoryRegisterRequest, _impl_.byte_size_)
      + sizeof(CudaSharedMemoryRegisterRequest::_impl_.byte_size_)
      - PROTOBUF_FIELD_OFFSET(CudaSharedMemoryRegisterRequest, _impl_.device_id_)>(
          reinterpret_cast<char*>(&_impl_.device_id_),
          reinterpret_cast<char*>(&other->_impl_.device_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CudaSharedMemoryRegisterRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[55]);
}

// ===================================================================

class CudaSharedMemoryRegisterResponse::_Internal {
 public:
};

CudaSharedMemoryRegisterResponse::CudaSharedMemoryRegisterResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:inference.CudaSharedMemoryRegisterResponse)
}
CudaSharedMemoryRegisterResponse::CudaSharedMemoryRegisterResponse(const CudaSharedMemoryRegisterResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  CudaSharedMemoryRegisterResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:inference.CudaSharedMemoryRegisterResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CudaSharedMemoryRegisterResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CudaSharedMemoryRegisterResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CudaSharedMemoryRegisterResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[56]);
}

// ===================================================================

class CudaSharedMemoryUnregisterRequest::_Internal {
 public:
};

CudaSharedMemoryUnregisterRequest::CudaSharedMemoryUnregisterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:inference.CudaSharedMemoryUnregisterRequest)
}
CudaSharedMemoryUnregisterRequest::CudaSharedMemoryUnregisterRequest(const CudaSharedMemoryUnregisterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CudaSharedMemoryUnregisterRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:inference.CudaSharedMemoryUnregisterRequest)
}

inline void CudaSharedMemoryUnregisterRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CudaSharedMemoryUnregisterRequest::~CudaSharedMemoryUnregisterRequest() {
  // @@protoc_insertion_point(destructor:inference.CudaSharedMemoryUnregisterRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CudaSharedMemoryUnregisterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void CudaSharedMemoryUnregisterRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CudaSharedMemoryUnregisterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.CudaSharedMemoryUnregisterRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CudaSharedMemoryUnregisterRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.CudaSharedMemoryUnregisterRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CudaSharedMemoryUnregisterRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.CudaSharedMemoryUnregisterRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.CudaSharedMemoryUnregisterRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.CudaSharedMemoryUnregisterRequest)
  return target;
}

size_t CudaSharedMemoryUnregisterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.CudaSharedMemoryUnregisterRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CudaSharedMemoryUnregisterRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CudaSharedMemoryUnregisterRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CudaSharedMemoryUnregisterRequest::GetClassData() const { return &_class_data_; }


void CudaSharedMemoryUnregisterRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CudaSharedMemoryUnregisterRequest*>(&to_msg);
  auto& from = static_cast<const CudaSharedMemoryUnregisterRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.CudaSharedMemoryUnregisterRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CudaSharedMemoryUnregisterRequest::CopyFrom(const CudaSharedMemoryUnregisterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.CudaSharedMemoryUnregisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CudaSharedMemoryUnregisterRequest::IsInitialized() const {
  return true;
}

void CudaSharedMemoryUnregisterRequest::InternalSwap(CudaSharedMemoryUnregisterRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CudaSharedMemoryUnregisterRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[57]);
}

// ===================================================================

class CudaSharedMemoryUnregisterResponse::_Internal {
 public:
};

CudaSharedMemoryUnregisterResponse::CudaSharedMemoryUnregisterResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:inference.CudaSharedMemoryUnregisterResponse)
}
CudaSharedMemoryUnregisterResponse::CudaSharedMemoryUnregisterResponse(const CudaSharedMemoryUnregisterResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  CudaSharedMemoryUnregisterResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:inference.CudaSharedMemoryUnregisterResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CudaSharedMemoryUnregisterResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CudaSharedMemoryUnregisterResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CudaSharedMemoryUnregisterResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[58]);
}

// ===================================================================

class TraceSettingRequest_SettingValue::_Internal {
 public:
};

TraceSettingRequest_SettingValue::TraceSettingRequest_SettingValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:inference.TraceSettingRequest.SettingValue)
}
TraceSettingRequest_SettingValue::TraceSettingRequest_SettingValue(const TraceSettingRequest_SettingValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TraceSettingRequest_SettingValue* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){from._impl_.value_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:inference.TraceSettingRequest.SettingValue)
}

inline void TraceSettingRequest_SettingValue::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TraceSettingRequest_SettingValue::~TraceSettingRequest_SettingValue() {
  // @@protoc_insertion_point(destructor:inference.TraceSettingRequest.SettingValue)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TraceSettingRequest_SettingValue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.value_.~RepeatedPtrField();
}

void TraceSettingRequest_SettingValue::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TraceSettingRequest_SettingValue::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.TraceSettingRequest.SettingValue)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TraceSettingRequest_SettingValue::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_value();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "inference.TraceSettingRequest.SettingValue.value"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TraceSettingRequest_SettingValue::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.TraceSettingRequest.SettingValue)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string value = 1;
  for (int i = 0, n = this->_internal_value_size(); i < n; i++) {
    const auto& s = this->_internal_value(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.TraceSettingRequest.SettingValue.value");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.TraceSettingRequest.SettingValue)
  return target;
}

size_t TraceSettingRequest_SettingValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.TraceSettingRequest.SettingValue)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string value = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.value_.size());
  for (int i = 0, n = _impl_.value_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.value_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TraceSettingRequest_SettingValue::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TraceSettingRequest_SettingValue::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TraceSettingRequest_SettingValue::GetClassData() const { return &_class_data_; }


void TraceSettingRequest_SettingValue::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TraceSettingRequest_SettingValue*>(&to_msg);
  auto& from = static_cast<const TraceSettingRequest_SettingValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.TraceSettingRequest.SettingValue)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.value_.MergeFrom(from._impl_.value_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TraceSettingRequest_SettingValue::CopyFrom(const TraceSettingRequest_SettingValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.TraceSettingRequest.SettingValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TraceSettingRequest_SettingValue::IsInitialized() const {
  return true;
}

void TraceSettingRequest_SettingValue::InternalSwap(TraceSettingRequest_SettingValue* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.value_.InternalSwap(&other->_impl_.value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TraceSettingRequest_SettingValue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[59]);
}

// ===================================================================

TraceSettingRequest_SettingsEntry_DoNotUse::TraceSettingRequest_SettingsEntry_DoNotUse() {}
TraceSettingRequest_SettingsEntry_DoNotUse::TraceSettingRequest_SettingsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TraceSettingRequest_SettingsEntry_DoNotUse::MergeFrom(const TraceSettingRequest_SettingsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TraceSettingRequest_SettingsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[60]);
}

// ===================================================================

class TraceSettingRequest::_Internal {
 public:
};

TraceSettingRequest::TraceSettingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &TraceSettingRequest::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:inference.TraceSettingRequest)
}
TraceSettingRequest::TraceSettingRequest(const TraceSettingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TraceSettingRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.settings_)*/{}
    , decltype(_impl_.model_name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.settings_.MergeFrom(from._impl_.settings_);
  _impl_.model_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.model_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_model_name().empty()) {
    _this->_impl_.model_name_.Set(from._internal_model_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:inference.TraceSettingRequest)
}

inline void TraceSettingRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.settings_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.model_name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.model_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.model_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

TraceSettingRequest::~TraceSettingRequest() {
  // @@protoc_insertion_point(destructor:inference.TraceSettingRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void TraceSettingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.settings_.Destruct();
  _impl_.settings_.~MapField();
  _impl_.model_name_.Destroy();
}

void TraceSettingRequest::ArenaDtor(void* object) {
  TraceSettingRequest* _this = reinterpret_cast< TraceSettingRequest* >(object);
  _this->_impl_.settings_.Destruct();
}
void TraceSettingRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TraceSettingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.TraceSettingRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.settings_.Clear();
  _impl_.model_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TraceSettingRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, .inference.TraceSettingRequest.SettingValue> settings = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.settings_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string model_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_model_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.TraceSettingRequest.model_name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TraceSettingRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.TraceSettingRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .inference.TraceSettingRequest.SettingValue> settings = 1;
  if (!this->_internal_settings().empty()) {
    using MapType = ::_pb::Map<std::string, ::inference::TraceSettingRequest_SettingValue>;
    using WireHelper = TraceSettingRequest_SettingsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_settings();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "inference.TraceSettingRequest.SettingsEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // string model_name = 2;
  if (!this->_internal_model_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_name().data(), static_cast<int>(this->_internal_model_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.TraceSettingRequest.model_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_model_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.TraceSettingRequest)
  return target;
}

size_t TraceSettingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.TraceSettingRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .inference.TraceSettingRequest.SettingValue> settings = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_settings_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::inference::TraceSettingRequest_SettingValue >::const_iterator
      it = this->_internal_settings().begin();
      it != this->_internal_settings().end(); ++it) {
    total_size += TraceSettingRequest_SettingsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string model_name = 2;
  if (!this->_internal_model_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TraceSettingRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TraceSettingRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TraceSettingRequest::GetClassData() const { return &_class_data_; }


void TraceSettingRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TraceSettingRequest*>(&to_msg);
  auto& from = static_cast<const TraceSettingRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.TraceSettingRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.settings_.MergeFrom(from._impl_.settings_);
  if (!from._internal_model_name().empty()) {
    _this->_internal_set_model_name(from._internal_model_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TraceSettingRequest::CopyFrom(const TraceSettingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.TraceSettingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TraceSettingRequest::IsInitialized() const {
  return true;
}

void TraceSettingRequest::InternalSwap(TraceSettingRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.settings_.InternalSwap(&other->_impl_.settings_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.model_name_, lhs_arena,
      &other->_impl_.model_name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata TraceSettingRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[61]);
}

// ===================================================================

class TraceSettingResponse_SettingValue::_Internal {
 public:
};

TraceSettingResponse_SettingValue::TraceSettingResponse_SettingValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:inference.TraceSettingResponse.SettingValue)
}
TraceSettingResponse_SettingValue::TraceSettingResponse_SettingValue(const TraceSettingResponse_SettingValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TraceSettingResponse_SettingValue* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){from._impl_.value_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:inference.TraceSettingResponse.SettingValue)
}

inline void TraceSettingResponse_SettingValue::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TraceSettingResponse_SettingValue::~TraceSettingResponse_SettingValue() {
  // @@protoc_insertion_point(destructor:inference.TraceSettingResponse.SettingValue)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TraceSettingResponse_SettingValue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.value_.~RepeatedPtrField();
}

void TraceSettingResponse_SettingValue::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TraceSettingResponse_SettingValue::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.TraceSettingResponse.SettingValue)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TraceSettingResponse_SettingValue::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_value();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "inference.TraceSettingResponse.SettingValue.value"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TraceSettingResponse_SettingValue::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.TraceSettingResponse.SettingValue)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string value = 1;
  for (int i = 0, n = this->_internal_value_size(); i < n; i++) {
    const auto& s = this->_internal_value(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.TraceSettingResponse.SettingValue.value");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.TraceSettingResponse.SettingValue)
  return target;
}

size_t TraceSettingResponse_SettingValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.TraceSettingResponse.SettingValue)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string value = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.value_.size());
  for (int i = 0, n = _impl_.value_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.value_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TraceSettingResponse_SettingValue::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TraceSettingResponse_SettingValue::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TraceSettingResponse_SettingValue::GetClassData() const { return &_class_data_; }


void TraceSettingResponse_SettingValue::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TraceSettingResponse_SettingValue*>(&to_msg);
  auto& from = static_cast<const TraceSettingResponse_SettingValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.TraceSettingResponse.SettingValue)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.value_.MergeFrom(from._impl_.value_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TraceSettingResponse_SettingValue::CopyFrom(const TraceSettingResponse_SettingValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.TraceSettingResponse.SettingValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TraceSettingResponse_SettingValue::IsInitialized() const {
  return true;
}

void TraceSettingResponse_SettingValue::InternalSwap(TraceSettingResponse_SettingValue* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.value_.InternalSwap(&other->_impl_.value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TraceSettingResponse_SettingValue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[62]);
}

// ===================================================================

TraceSettingResponse_SettingsEntry_DoNotUse::TraceSettingResponse_SettingsEntry_DoNotUse() {}
TraceSettingResponse_SettingsEntry_DoNotUse::TraceSettingResponse_SettingsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TraceSettingResponse_SettingsEntry_DoNotUse::MergeFrom(const TraceSettingResponse_SettingsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TraceSettingResponse_SettingsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[63]);
}

// ===================================================================

class TraceSettingResponse::_Internal {
 public:
};

TraceSettingResponse::TraceSettingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &TraceSettingResponse::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:inference.TraceSettingResponse)
}
TraceSettingResponse::TraceSettingResponse(const TraceSettingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TraceSettingResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.settings_)*/{}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.settings_.MergeFrom(from._impl_.settings_);
  // @@protoc_insertion_point(copy_constructor:inference.TraceSettingResponse)
}

inline void TraceSettingResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.settings_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TraceSettingResponse::~TraceSettingResponse() {
  // @@protoc_insertion_point(destructor:inference.TraceSettingResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void TraceSettingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.settings_.Destruct();
  _impl_.settings_.~MapField();
}

void TraceSettingResponse::ArenaDtor(void* object) {
  TraceSettingResponse* _this = reinterpret_cast< TraceSettingResponse* >(object);
  _this->_impl_.settings_.Destruct();
}
void TraceSettingResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TraceSettingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.TraceSettingResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.settings_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TraceSettingResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, .inference.TraceSettingResponse.SettingValue> settings = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.settings_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TraceSettingResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.TraceSettingResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .inference.TraceSettingResponse.SettingValue> settings = 1;
  if (!this->_internal_settings().empty()) {
    using MapType = ::_pb::Map<std::string, ::inference::TraceSettingResponse_SettingValue>;
    using WireHelper = TraceSettingResponse_SettingsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_settings();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "inference.TraceSettingResponse.SettingsEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.TraceSettingResponse)
  return target;
}

size_t TraceSettingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.TraceSettingResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .inference.TraceSettingResponse.SettingValue> settings = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_settings_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::inference::TraceSettingResponse_SettingValue >::const_iterator
      it = this->_internal_settings().begin();
      it != this->_internal_settings().end(); ++it) {
    total_size += TraceSettingResponse_SettingsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TraceSettingResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TraceSettingResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TraceSettingResponse::GetClassData() const { return &_class_data_; }


void TraceSettingResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TraceSettingResponse*>(&to_msg);
  auto& from = static_cast<const TraceSettingResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.TraceSettingResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.settings_.MergeFrom(from._impl_.settings_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TraceSettingResponse::CopyFrom(const TraceSettingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.TraceSettingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TraceSettingResponse::IsInitialized() const {
  return true;
}

void TraceSettingResponse::InternalSwap(TraceSettingResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.settings_.InternalSwap(&other->_impl_.settings_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TraceSettingResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[64]);
}

// ===================================================================

class LogSettingsRequest_SettingValue::_Internal {
 public:
};

LogSettingsRequest_SettingValue::LogSettingsRequest_SettingValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:inference.LogSettingsRequest.SettingValue)
}
LogSettingsRequest_SettingValue::LogSettingsRequest_SettingValue(const LogSettingsRequest_SettingValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LogSettingsRequest_SettingValue* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.parameter_choice_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_parameter_choice();
  switch (from.parameter_choice_case()) {
    case kBoolParam: {
      _this->_internal_set_bool_param(from._internal_bool_param());
      break;
    }
    case kUint32Param: {
      _this->_internal_set_uint32_param(from._internal_uint32_param());
      break;
    }
    case kStringParam: {
      _this->_internal_set_string_param(from._internal_string_param());
      break;
    }
    case PARAMETER_CHOICE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:inference.LogSettingsRequest.SettingValue)
}

inline void LogSettingsRequest_SettingValue::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.parameter_choice_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_parameter_choice();
}

LogSettingsRequest_SettingValue::~LogSettingsRequest_SettingValue() {
  // @@protoc_insertion_point(destructor:inference.LogSettingsRequest.SettingValue)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LogSettingsRequest_SettingValue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_parameter_choice()) {
    clear_parameter_choice();
  }
}

void LogSettingsRequest_SettingValue::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LogSettingsRequest_SettingValue::clear_parameter_choice() {
// @@protoc_insertion_point(one_of_clear_start:inference.LogSettingsRequest.SettingValue)
  switch (parameter_choice_case()) {
    case kBoolParam: {
      // No need to clear
      break;
    }
    case kUint32Param: {
      // No need to clear
      break;
    }
    case kStringParam: {
      _impl_.parameter_choice_.string_param_.Destroy();
      break;
    }
    case PARAMETER_CHOICE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PARAMETER_CHOICE_NOT_SET;
}


void LogSettingsRequest_SettingValue::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.LogSettingsRequest.SettingValue)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_parameter_choice();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LogSettingsRequest_SettingValue::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool bool_param = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _internal_set_bool_param(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 uint32_param = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _internal_set_uint32_param(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string string_param = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_string_param();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.LogSettingsRequest.SettingValue.string_param"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LogSettingsRequest_SettingValue::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.LogSettingsRequest.SettingValue)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool bool_param = 1;
  if (_internal_has_bool_param()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_bool_param(), target);
  }

  // uint32 uint32_param = 2;
  if (_internal_has_uint32_param()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_uint32_param(), target);
  }

  // string string_param = 3;
  if (_internal_has_string_param()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_string_param().data(), static_cast<int>(this->_internal_string_param().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.LogSettingsRequest.SettingValue.string_param");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_string_param(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.LogSettingsRequest.SettingValue)
  return target;
}

size_t LogSettingsRequest_SettingValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.LogSettingsRequest.SettingValue)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (parameter_choice_case()) {
    // bool bool_param = 1;
    case kBoolParam: {
      total_size += 1 + 1;
      break;
    }
    // uint32 uint32_param = 2;
    case kUint32Param: {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uint32_param());
      break;
    }
    // string string_param = 3;
    case kStringParam: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_string_param());
      break;
    }
    case PARAMETER_CHOICE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LogSettingsRequest_SettingValue::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LogSettingsRequest_SettingValue::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LogSettingsRequest_SettingValue::GetClassData() const { return &_class_data_; }


void LogSettingsRequest_SettingValue::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LogSettingsRequest_SettingValue*>(&to_msg);
  auto& from = static_cast<const LogSettingsRequest_SettingValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.LogSettingsRequest.SettingValue)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.parameter_choice_case()) {
    case kBoolParam: {
      _this->_internal_set_bool_param(from._internal_bool_param());
      break;
    }
    case kUint32Param: {
      _this->_internal_set_uint32_param(from._internal_uint32_param());
      break;
    }
    case kStringParam: {
      _this->_internal_set_string_param(from._internal_string_param());
      break;
    }
    case PARAMETER_CHOICE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LogSettingsRequest_SettingValue::CopyFrom(const LogSettingsRequest_SettingValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.LogSettingsRequest.SettingValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogSettingsRequest_SettingValue::IsInitialized() const {
  return true;
}

void LogSettingsRequest_SettingValue::InternalSwap(LogSettingsRequest_SettingValue* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.parameter_choice_, other->_impl_.parameter_choice_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata LogSettingsRequest_SettingValue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[65]);
}

// ===================================================================

LogSettingsRequest_SettingsEntry_DoNotUse::LogSettingsRequest_SettingsEntry_DoNotUse() {}
LogSettingsRequest_SettingsEntry_DoNotUse::LogSettingsRequest_SettingsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void LogSettingsRequest_SettingsEntry_DoNotUse::MergeFrom(const LogSettingsRequest_SettingsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata LogSettingsRequest_SettingsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[66]);
}

// ===================================================================

class LogSettingsRequest::_Internal {
 public:
};

LogSettingsRequest::LogSettingsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &LogSettingsRequest::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:inference.LogSettingsRequest)
}
LogSettingsRequest::LogSettingsRequest(const LogSettingsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LogSettingsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.settings_)*/{}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.settings_.MergeFrom(from._impl_.settings_);
  // @@protoc_insertion_point(copy_constructor:inference.LogSettingsRequest)
}

inline void LogSettingsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.settings_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

LogSettingsRequest::~LogSettingsRequest() {
  // @@protoc_insertion_point(destructor:inference.LogSettingsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void LogSettingsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.settings_.Destruct();
  _impl_.settings_.~MapField();
}

void LogSettingsRequest::ArenaDtor(void* object) {
  LogSettingsRequest* _this = reinterpret_cast< LogSettingsRequest* >(object);
  _this->_impl_.settings_.Destruct();
}
void LogSettingsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LogSettingsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.LogSettingsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.settings_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LogSettingsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, .inference.LogSettingsRequest.SettingValue> settings = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.settings_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LogSettingsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.LogSettingsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .inference.LogSettingsRequest.SettingValue> settings = 1;
  if (!this->_internal_settings().empty()) {
    using MapType = ::_pb::Map<std::string, ::inference::LogSettingsRequest_SettingValue>;
    using WireHelper = LogSettingsRequest_SettingsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_settings();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "inference.LogSettingsRequest.SettingsEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.LogSettingsRequest)
  return target;
}

size_t LogSettingsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.LogSettingsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .inference.LogSettingsRequest.SettingValue> settings = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_settings_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::inference::LogSettingsRequest_SettingValue >::const_iterator
      it = this->_internal_settings().begin();
      it != this->_internal_settings().end(); ++it) {
    total_size += LogSettingsRequest_SettingsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LogSettingsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LogSettingsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LogSettingsRequest::GetClassData() const { return &_class_data_; }


void LogSettingsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LogSettingsRequest*>(&to_msg);
  auto& from = static_cast<const LogSettingsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.LogSettingsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.settings_.MergeFrom(from._impl_.settings_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LogSettingsRequest::CopyFrom(const LogSettingsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.LogSettingsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogSettingsRequest::IsInitialized() const {
  return true;
}

void LogSettingsRequest::InternalSwap(LogSettingsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.settings_.InternalSwap(&other->_impl_.settings_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LogSettingsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[67]);
}

// ===================================================================

class LogSettingsResponse_SettingValue::_Internal {
 public:
};

LogSettingsResponse_SettingValue::LogSettingsResponse_SettingValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:inference.LogSettingsResponse.SettingValue)
}
LogSettingsResponse_SettingValue::LogSettingsResponse_SettingValue(const LogSettingsResponse_SettingValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LogSettingsResponse_SettingValue* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.parameter_choice_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_parameter_choice();
  switch (from.parameter_choice_case()) {
    case kBoolParam: {
      _this->_internal_set_bool_param(from._internal_bool_param());
      break;
    }
    case kUint32Param: {
      _this->_internal_set_uint32_param(from._internal_uint32_param());
      break;
    }
    case kStringParam: {
      _this->_internal_set_string_param(from._internal_string_param());
      break;
    }
    case PARAMETER_CHOICE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:inference.LogSettingsResponse.SettingValue)
}

inline void LogSettingsResponse_SettingValue::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.parameter_choice_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_parameter_choice();
}

LogSettingsResponse_SettingValue::~LogSettingsResponse_SettingValue() {
  // @@protoc_insertion_point(destructor:inference.LogSettingsResponse.SettingValue)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LogSettingsResponse_SettingValue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_parameter_choice()) {
    clear_parameter_choice();
  }
}

void LogSettingsResponse_SettingValue::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LogSettingsResponse_SettingValue::clear_parameter_choice() {
// @@protoc_insertion_point(one_of_clear_start:inference.LogSettingsResponse.SettingValue)
  switch (parameter_choice_case()) {
    case kBoolParam: {
      // No need to clear
      break;
    }
    case kUint32Param: {
      // No need to clear
      break;
    }
    case kStringParam: {
      _impl_.parameter_choice_.string_param_.Destroy();
      break;
    }
    case PARAMETER_CHOICE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PARAMETER_CHOICE_NOT_SET;
}


void LogSettingsResponse_SettingValue::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.LogSettingsResponse.SettingValue)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_parameter_choice();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LogSettingsResponse_SettingValue::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool bool_param = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _internal_set_bool_param(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 uint32_param = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _internal_set_uint32_param(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string string_param = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_string_param();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "inference.LogSettingsResponse.SettingValue.string_param"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LogSettingsResponse_SettingValue::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.LogSettingsResponse.SettingValue)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool bool_param = 1;
  if (_internal_has_bool_param()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_bool_param(), target);
  }

  // uint32 uint32_param = 2;
  if (_internal_has_uint32_param()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_uint32_param(), target);
  }

  // string string_param = 3;
  if (_internal_has_string_param()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_string_param().data(), static_cast<int>(this->_internal_string_param().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "inference.LogSettingsResponse.SettingValue.string_param");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_string_param(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.LogSettingsResponse.SettingValue)
  return target;
}

size_t LogSettingsResponse_SettingValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.LogSettingsResponse.SettingValue)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (parameter_choice_case()) {
    // bool bool_param = 1;
    case kBoolParam: {
      total_size += 1 + 1;
      break;
    }
    // uint32 uint32_param = 2;
    case kUint32Param: {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_uint32_param());
      break;
    }
    // string string_param = 3;
    case kStringParam: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_string_param());
      break;
    }
    case PARAMETER_CHOICE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LogSettingsResponse_SettingValue::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LogSettingsResponse_SettingValue::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LogSettingsResponse_SettingValue::GetClassData() const { return &_class_data_; }


void LogSettingsResponse_SettingValue::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LogSettingsResponse_SettingValue*>(&to_msg);
  auto& from = static_cast<const LogSettingsResponse_SettingValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.LogSettingsResponse.SettingValue)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.parameter_choice_case()) {
    case kBoolParam: {
      _this->_internal_set_bool_param(from._internal_bool_param());
      break;
    }
    case kUint32Param: {
      _this->_internal_set_uint32_param(from._internal_uint32_param());
      break;
    }
    case kStringParam: {
      _this->_internal_set_string_param(from._internal_string_param());
      break;
    }
    case PARAMETER_CHOICE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LogSettingsResponse_SettingValue::CopyFrom(const LogSettingsResponse_SettingValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.LogSettingsResponse.SettingValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogSettingsResponse_SettingValue::IsInitialized() const {
  return true;
}

void LogSettingsResponse_SettingValue::InternalSwap(LogSettingsResponse_SettingValue* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.parameter_choice_, other->_impl_.parameter_choice_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata LogSettingsResponse_SettingValue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[68]);
}

// ===================================================================

LogSettingsResponse_SettingsEntry_DoNotUse::LogSettingsResponse_SettingsEntry_DoNotUse() {}
LogSettingsResponse_SettingsEntry_DoNotUse::LogSettingsResponse_SettingsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void LogSettingsResponse_SettingsEntry_DoNotUse::MergeFrom(const LogSettingsResponse_SettingsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata LogSettingsResponse_SettingsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[69]);
}

// ===================================================================

class LogSettingsResponse::_Internal {
 public:
};

LogSettingsResponse::LogSettingsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &LogSettingsResponse::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:inference.LogSettingsResponse)
}
LogSettingsResponse::LogSettingsResponse(const LogSettingsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LogSettingsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.settings_)*/{}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.settings_.MergeFrom(from._impl_.settings_);
  // @@protoc_insertion_point(copy_constructor:inference.LogSettingsResponse)
}

inline void LogSettingsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.settings_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

LogSettingsResponse::~LogSettingsResponse() {
  // @@protoc_insertion_point(destructor:inference.LogSettingsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void LogSettingsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.settings_.Destruct();
  _impl_.settings_.~MapField();
}

void LogSettingsResponse::ArenaDtor(void* object) {
  LogSettingsResponse* _this = reinterpret_cast< LogSettingsResponse* >(object);
  _this->_impl_.settings_.Destruct();
}
void LogSettingsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LogSettingsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.LogSettingsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.settings_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LogSettingsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, .inference.LogSettingsResponse.SettingValue> settings = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.settings_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LogSettingsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:inference.LogSettingsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .inference.LogSettingsResponse.SettingValue> settings = 1;
  if (!this->_internal_settings().empty()) {
    using MapType = ::_pb::Map<std::string, ::inference::LogSettingsResponse_SettingValue>;
    using WireHelper = LogSettingsResponse_SettingsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_settings();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "inference.LogSettingsResponse.SettingsEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.LogSettingsResponse)
  return target;
}

size_t LogSettingsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.LogSettingsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .inference.LogSettingsResponse.SettingValue> settings = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_settings_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::inference::LogSettingsResponse_SettingValue >::const_iterator
      it = this->_internal_settings().begin();
      it != this->_internal_settings().end(); ++it) {
    total_size += LogSettingsResponse_SettingsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LogSettingsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LogSettingsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LogSettingsResponse::GetClassData() const { return &_class_data_; }


void LogSettingsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LogSettingsResponse*>(&to_msg);
  auto& from = static_cast<const LogSettingsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.LogSettingsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.settings_.MergeFrom(from._impl_.settings_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LogSettingsResponse::CopyFrom(const LogSettingsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.LogSettingsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogSettingsResponse::IsInitialized() const {
  return true;
}

void LogSettingsResponse::InternalSwap(LogSettingsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.settings_.InternalSwap(&other->_impl_.settings_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LogSettingsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpc_5fservice_2eproto_getter, &descriptor_table_grpc_5fservice_2eproto_once,
      file_level_metadata_grpc_5fservice_2eproto[70]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace inference
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::inference::ServerLiveRequest*
Arena::CreateMaybeMessage< ::inference::ServerLiveRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::ServerLiveRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::ServerLiveResponse*
Arena::CreateMaybeMessage< ::inference::ServerLiveResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::ServerLiveResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::ServerReadyRequest*
Arena::CreateMaybeMessage< ::inference::ServerReadyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::ServerReadyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::ServerReadyResponse*
Arena::CreateMaybeMessage< ::inference::ServerReadyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::ServerReadyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::ModelReadyRequest*
Arena::CreateMaybeMessage< ::inference::ModelReadyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::ModelReadyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::ModelReadyResponse*
Arena::CreateMaybeMessage< ::inference::ModelReadyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::ModelReadyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::ServerMetadataRequest*
Arena::CreateMaybeMessage< ::inference::ServerMetadataRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::ServerMetadataRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::ServerMetadataResponse*
Arena::CreateMaybeMessage< ::inference::ServerMetadataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::ServerMetadataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::ModelMetadataRequest*
Arena::CreateMaybeMessage< ::inference::ModelMetadataRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::ModelMetadataRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::ModelMetadataResponse_TensorMetadata*
Arena::CreateMaybeMessage< ::inference::ModelMetadataResponse_TensorMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::ModelMetadataResponse_TensorMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::ModelMetadataResponse*
Arena::CreateMaybeMessage< ::inference::ModelMetadataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::ModelMetadataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::InferParameter*
Arena::CreateMaybeMessage< ::inference::InferParameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::InferParameter >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::InferTensorContents*
Arena::CreateMaybeMessage< ::inference::InferTensorContents >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::InferTensorContents >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse*
Arena::CreateMaybeMessage< ::inference::ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::ModelInferRequest_InferInputTensor_ParametersEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::ModelInferRequest_InferInputTensor*
Arena::CreateMaybeMessage< ::inference::ModelInferRequest_InferInputTensor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::ModelInferRequest_InferInputTensor >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse*
Arena::CreateMaybeMessage< ::inference::ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::ModelInferRequest_InferRequestedOutputTensor_ParametersEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::ModelInferRequest_InferRequestedOutputTensor*
Arena::CreateMaybeMessage< ::inference::ModelInferRequest_InferRequestedOutputTensor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::ModelInferRequest_InferRequestedOutputTensor >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::ModelInferRequest_ParametersEntry_DoNotUse*
Arena::CreateMaybeMessage< ::inference::ModelInferRequest_ParametersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::ModelInferRequest_ParametersEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::ModelInferRequest*
Arena::CreateMaybeMessage< ::inference::ModelInferRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::ModelInferRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse*
Arena::CreateMaybeMessage< ::inference::ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::ModelInferResponse_InferOutputTensor_ParametersEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::ModelInferResponse_InferOutputTensor*
Arena::CreateMaybeMessage< ::inference::ModelInferResponse_InferOutputTensor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::ModelInferResponse_InferOutputTensor >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::ModelInferResponse_ParametersEntry_DoNotUse*
Arena::CreateMaybeMessage< ::inference::ModelInferResponse_ParametersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::ModelInferResponse_ParametersEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::ModelInferResponse*
Arena::CreateMaybeMessage< ::inference::ModelInferResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::ModelInferResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::ModelStreamInferResponse*
Arena::CreateMaybeMessage< ::inference::ModelStreamInferResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::ModelStreamInferResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::ModelConfigRequest*
Arena::CreateMaybeMessage< ::inference::ModelConfigRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::ModelConfigRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::ModelConfigResponse*
Arena::CreateMaybeMessage< ::inference::ModelConfigResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::ModelConfigResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::ModelStatisticsRequest*
Arena::CreateMaybeMessage< ::inference::ModelStatisticsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::ModelStatisticsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::StatisticDuration*
Arena::CreateMaybeMessage< ::inference::StatisticDuration >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::StatisticDuration >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::InferStatistics*
Arena::CreateMaybeMessage< ::inference::InferStatistics >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::InferStatistics >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::InferBatchStatistics*
Arena::CreateMaybeMessage< ::inference::InferBatchStatistics >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::InferBatchStatistics >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::MemoryUsage*
Arena::CreateMaybeMessage< ::inference::MemoryUsage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::MemoryUsage >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::ModelStatistics*
Arena::CreateMaybeMessage< ::inference::ModelStatistics >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::ModelStatistics >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::ModelStatisticsResponse*
Arena::CreateMaybeMessage< ::inference::ModelStatisticsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::ModelStatisticsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::ModelRepositoryParameter*
Arena::CreateMaybeMessage< ::inference::ModelRepositoryParameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::ModelRepositoryParameter >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::RepositoryIndexRequest*
Arena::CreateMaybeMessage< ::inference::RepositoryIndexRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::RepositoryIndexRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::RepositoryIndexResponse_ModelIndex*
Arena::CreateMaybeMessage< ::inference::RepositoryIndexResponse_ModelIndex >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::RepositoryIndexResponse_ModelIndex >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::RepositoryIndexResponse*
Arena::CreateMaybeMessage< ::inference::RepositoryIndexResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::RepositoryIndexResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::RepositoryModelLoadRequest_ParametersEntry_DoNotUse*
Arena::CreateMaybeMessage< ::inference::RepositoryModelLoadRequest_ParametersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::RepositoryModelLoadRequest_ParametersEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::RepositoryModelLoadRequest*
Arena::CreateMaybeMessage< ::inference::RepositoryModelLoadRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::RepositoryModelLoadRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::RepositoryModelLoadResponse*
Arena::CreateMaybeMessage< ::inference::RepositoryModelLoadResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::RepositoryModelLoadResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::RepositoryModelUnloadRequest_ParametersEntry_DoNotUse*
Arena::CreateMaybeMessage< ::inference::RepositoryModelUnloadRequest_ParametersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::RepositoryModelUnloadRequest_ParametersEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::RepositoryModelUnloadRequest*
Arena::CreateMaybeMessage< ::inference::RepositoryModelUnloadRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::RepositoryModelUnloadRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::RepositoryModelUnloadResponse*
Arena::CreateMaybeMessage< ::inference::RepositoryModelUnloadResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::RepositoryModelUnloadResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::SystemSharedMemoryStatusRequest*
Arena::CreateMaybeMessage< ::inference::SystemSharedMemoryStatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::SystemSharedMemoryStatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::SystemSharedMemoryStatusResponse_RegionStatus*
Arena::CreateMaybeMessage< ::inference::SystemSharedMemoryStatusResponse_RegionStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::SystemSharedMemoryStatusResponse_RegionStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::inference::SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::SystemSharedMemoryStatusResponse_RegionsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::SystemSharedMemoryStatusResponse*
Arena::CreateMaybeMessage< ::inference::SystemSharedMemoryStatusResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::SystemSharedMemoryStatusResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::SystemSharedMemoryRegisterRequest*
Arena::CreateMaybeMessage< ::inference::SystemSharedMemoryRegisterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::SystemSharedMemoryRegisterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::SystemSharedMemoryRegisterResponse*
Arena::CreateMaybeMessage< ::inference::SystemSharedMemoryRegisterResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::SystemSharedMemoryRegisterResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::SystemSharedMemoryUnregisterRequest*
Arena::CreateMaybeMessage< ::inference::SystemSharedMemoryUnregisterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::SystemSharedMemoryUnregisterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::SystemSharedMemoryUnregisterResponse*
Arena::CreateMaybeMessage< ::inference::SystemSharedMemoryUnregisterResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::SystemSharedMemoryUnregisterResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::CudaSharedMemoryStatusRequest*
Arena::CreateMaybeMessage< ::inference::CudaSharedMemoryStatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::CudaSharedMemoryStatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::CudaSharedMemoryStatusResponse_RegionStatus*
Arena::CreateMaybeMessage< ::inference::CudaSharedMemoryStatusResponse_RegionStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::CudaSharedMemoryStatusResponse_RegionStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::inference::CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::CudaSharedMemoryStatusResponse_RegionsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::CudaSharedMemoryStatusResponse*
Arena::CreateMaybeMessage< ::inference::CudaSharedMemoryStatusResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::CudaSharedMemoryStatusResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::CudaSharedMemoryRegisterRequest*
Arena::CreateMaybeMessage< ::inference::CudaSharedMemoryRegisterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::CudaSharedMemoryRegisterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::CudaSharedMemoryRegisterResponse*
Arena::CreateMaybeMessage< ::inference::CudaSharedMemoryRegisterResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::CudaSharedMemoryRegisterResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::CudaSharedMemoryUnregisterRequest*
Arena::CreateMaybeMessage< ::inference::CudaSharedMemoryUnregisterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::CudaSharedMemoryUnregisterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::CudaSharedMemoryUnregisterResponse*
Arena::CreateMaybeMessage< ::inference::CudaSharedMemoryUnregisterResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::CudaSharedMemoryUnregisterResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::TraceSettingRequest_SettingValue*
Arena::CreateMaybeMessage< ::inference::TraceSettingRequest_SettingValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::TraceSettingRequest_SettingValue >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::TraceSettingRequest_SettingsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::inference::TraceSettingRequest_SettingsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::TraceSettingRequest_SettingsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::TraceSettingRequest*
Arena::CreateMaybeMessage< ::inference::TraceSettingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::TraceSettingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::TraceSettingResponse_SettingValue*
Arena::CreateMaybeMessage< ::inference::TraceSettingResponse_SettingValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::TraceSettingResponse_SettingValue >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::TraceSettingResponse_SettingsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::inference::TraceSettingResponse_SettingsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::TraceSettingResponse_SettingsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::TraceSettingResponse*
Arena::CreateMaybeMessage< ::inference::TraceSettingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::TraceSettingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::LogSettingsRequest_SettingValue*
Arena::CreateMaybeMessage< ::inference::LogSettingsRequest_SettingValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::LogSettingsRequest_SettingValue >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::LogSettingsRequest_SettingsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::inference::LogSettingsRequest_SettingsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::LogSettingsRequest_SettingsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::LogSettingsRequest*
Arena::CreateMaybeMessage< ::inference::LogSettingsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::LogSettingsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::LogSettingsResponse_SettingValue*
Arena::CreateMaybeMessage< ::inference::LogSettingsResponse_SettingValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::LogSettingsResponse_SettingValue >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::LogSettingsResponse_SettingsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::inference::LogSettingsResponse_SettingsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::LogSettingsResponse_SettingsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::inference::LogSettingsResponse*
Arena::CreateMaybeMessage< ::inference::LogSettingsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::inference::LogSettingsResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
